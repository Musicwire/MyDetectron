name: "generalized_rcnn_init"
op {
  output: "gpu_0/conv1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 3
    ints: 7
    ints: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 94, in add_ResNet_convX_body\n    p = model.Conv(\'data\', \'conv1\', 3, 64, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res_conv1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 95, in add_ResNet_convX_body\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=64, inplace=True)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res_conv1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 95, in add_ResNet_convX_body\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=64, inplace=True)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 93, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 99, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res5_2_sum_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 151, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res5_2_sum_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 151, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res5_2_sum_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res5_2_sum_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res4_5_sum_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res4_5_sum_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res3_3_sum_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res3_3_sum_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res2_2_sum_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fpn_res2_2_sum_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv_rpn_fpn2_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 301, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv_rpn_fpn2_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 301, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_cls_logits_fpn2_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 3
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 314, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_cls_logits_fpn2_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 3
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 314, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_bbox_pred_fpn2_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 12
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 326, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_bbox_pred_fpn2_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 12
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 326, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fc6_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 12544
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 107, in add_roi_2mlp_head\n    model.FC(roi_feat, \'fc6\', dim_in * roi_size * roi_size, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fc6_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 107, in add_roi_2mlp_head\n    model.FC(roi_feat, \'fc6\', dim_in * roi_size * roi_size, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fc7_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 1024
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 109, in add_roi_2mlp_head\n    model.FC(\'fc6\', \'fc7\', hidden_dim, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/fc7_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 109, in add_roi_2mlp_head\n    model.FC(\'fc6\', \'fc7\', hidden_dim, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/cls_score_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 81
    ints: 1024
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 53, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/cls_score_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 81
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 53, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/bbox_pred_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 324
    ints: 1024
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 65, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/bbox_pred_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 324
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 65, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn1_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn1_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn2_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn2_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn3_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn3_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn4_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/_[mask]_fcn4_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv5_mask_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 2
    ints: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 166, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 123, in ConvTranspose\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 233, in conv_transpose\n    **weight_init[1]\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv5_mask_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 166, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 123, in ConvTranspose\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 239, in conv_transpose\n    **bias_init[1]\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/mask_fcn_logits_w"
  name: ""
  type: "MSRAFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 81
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 276, in _add_roi_mask_head\n    model, blob_mask_head, dim_mask_head\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 79, in add_mask_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/mask_fcn_logits_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 81
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 276, in _add_roi_mask_head\n    model, blob_mask_head, dim_mask_head\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 79, in add_mask_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/lr"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 94, in add_single_gpu_param_update_ops\n    [], \'lr\', shape=[1], value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/one"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 97, in add_single_gpu_param_update_ops\n    [], \'one\', shape=[1], value=1.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/wd"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0001
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 100, in add_single_gpu_param_update_ops\n    [], \'wd\', shape=[1], value=cfg.SOLVER.WEIGHT_DECAY\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_w"
  output: "gpu_0/fpn_inner_res5_2_sum_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_b"
  output: "gpu_0/fpn_inner_res5_2_sum_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_w"
  output: "gpu_0/fpn_res5_2_sum_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_b"
  output: "gpu_0/fpn_res5_2_sum_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_w"
  output: "gpu_0/fpn_res4_5_sum_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_b"
  output: "gpu_0/fpn_res4_5_sum_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_w"
  output: "gpu_0/fpn_res3_3_sum_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_b"
  output: "gpu_0/fpn_res3_3_sum_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_w"
  output: "gpu_0/fpn_res2_2_sum_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_b"
  output: "gpu_0/fpn_res2_2_sum_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_w"
  output: "gpu_0/conv_rpn_fpn2_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn2_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  output: "gpu_0/rpn_cls_logits_fpn2_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn2_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_w"
  output: "gpu_0/fc6_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_b"
  output: "gpu_0/fc6_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_w"
  output: "gpu_0/fc7_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_b"
  output: "gpu_0/fc7_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w"
  output: "gpu_0/cls_score_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w"
  output: "gpu_0/bbox_pred_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_w"
  output: "gpu_0/_[mask]_fcn1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_b"
  output: "gpu_0/_[mask]_fcn1_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_w"
  output: "gpu_0/_[mask]_fcn2_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_b"
  output: "gpu_0/_[mask]_fcn2_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_w"
  output: "gpu_0/_[mask]_fcn3_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_b"
  output: "gpu_0/_[mask]_fcn3_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_w"
  output: "gpu_0/_[mask]_fcn4_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_b"
  output: "gpu_0/_[mask]_fcn4_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_w"
  output: "gpu_0/conv5_mask_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_b"
  output: "gpu_0/conv5_mask_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_w"
  output: "gpu_0/mask_fcn_logits_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_b"
  output: "gpu_0/mask_fcn_logits_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 107, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
