name: "generalized_rcnn_init"
op {
  output: "gpu_0/conv1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 3
    ints: 7
    ints: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 251, in basic_bn_stem\n    p = model.Conv(data, \'conv1\', 3, dim, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res_conv1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res_conv1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res2_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res3_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_4_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res4_5_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv_rpn_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 1024
    ints: 1024
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/conv_rpn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_cls_logits_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 15
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_cls_logits_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 15
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_bbox_pred_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 60
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/rpn_bbox_pred_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 60
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/res5_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/cls_score_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 81
    ints: 2048
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/cls_score_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 81
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/bbox_pred_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 324
    ints: 2048
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/bbox_pred_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 324
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/conv1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 3
    ints: 7
    ints: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 251, in basic_bn_stem\n    p = model.Conv(data, \'conv1\', 3, dim, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res_conv1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res_conv1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 64
    ints: 64
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 64
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 64
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res2_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 128
    ints: 128
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 128
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 128
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res3_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_3_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_4_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 256
    ints: 256
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 256
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 1024
    ints: 256
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res4_5_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/conv_rpn_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 1024
    ints: 1024
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/conv_rpn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1024
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/rpn_cls_logits_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 15
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/rpn_cls_logits_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 15
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/rpn_bbox_pred_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 60
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/rpn_bbox_pred_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 60
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 110, in _ConvBase\n    tags=ParameterTags.BIAS\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch1_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 1024
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch1_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_0_branch1_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_1_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2a_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 2048
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2a_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2a_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2b_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 512
    ints: 512
    ints: 3
    ints: 3
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2b_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2b_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 512
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2c_w"
  name: ""
  type: "XavierFill"
  arg {
    name: "shape"
    ints: 2048
    ints: 512
    ints: 1
    ints: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 103, in _ConvBase\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2c_bn_s"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 94, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/res5_2_branch2c_bn_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 2048
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 100, in AffineChannel\n    shape=[dim, ],\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/cls_score_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.01
  }
  arg {
    name: "shape"
    ints: 81
    ints: 2048
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/cls_score_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 81
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/bbox_pred_w"
  name: ""
  type: "GaussianFill"
  arg {
    name: "std"
    f: 0.001
  }
  arg {
    name: "shape"
    ints: 324
    ints: 2048
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 52, in _FC_or_packed_FC\n    tags=ParameterTags.WEIGHT\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/bbox_pred_b"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 324
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 58, in _FC_or_packed_FC\n    tags=bias_tags\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 229, in create_param\n    shape=shape,\n  File \"/home/pding/download/caffe2/build/caffe2/python/modeling/initializers.py\", line 45, in create_param\n    [], param_name, shape=shape, **self.operator_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/lr"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 94, in add_single_gpu_param_update_ops\n    [], \'lr\', shape=[1], value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/one"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 97, in add_single_gpu_param_update_ops\n    [], \'one\', shape=[1], value=1.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/wd"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0001
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 100, in add_single_gpu_param_update_ops\n    [], \'wd\', shape=[1], value=cfg.SOLVER.WEIGHT_DECAY\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_0/wd_gn"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 104, in add_single_gpu_param_update_ops\n    [], \'wd_gn\', shape=[1], value=cfg.SOLVER.WEIGHT_DECAY_GN\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_w"
  output: "gpu_0/conv_rpn_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_b"
  output: "gpu_0/conv_rpn_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_w"
  output: "gpu_0/rpn_cls_logits_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_b"
  output: "gpu_0/rpn_cls_logits_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_w"
  output: "gpu_0/rpn_bbox_pred_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_b"
  output: "gpu_0/rpn_bbox_pred_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w"
  output: "gpu_0/cls_score_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w"
  output: "gpu_0/bbox_pred_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/lr"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 94, in add_single_gpu_param_update_ops\n    [], \'lr\', shape=[1], value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/one"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 97, in add_single_gpu_param_update_ops\n    [], \'one\', shape=[1], value=1.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/wd"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0001
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 100, in add_single_gpu_param_update_ops\n    [], \'wd\', shape=[1], value=cfg.SOLVER.WEIGHT_DECAY\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  output: "gpu_1/wd_gn"
  name: ""
  type: "ConstantFill"
  arg {
    name: "shape"
    ints: 1
  }
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 104, in add_single_gpu_param_update_ops\n    [], \'wd_gn\', shape=[1], value=cfg.SOLVER.WEIGHT_DECAY_GN\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a_w"
  output: "gpu_1/res3_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b_w"
  output: "gpu_1/res3_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_w"
  output: "gpu_1/res3_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch1_w"
  output: "gpu_1/res3_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a_w"
  output: "gpu_1/res3_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b_w"
  output: "gpu_1/res3_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_w"
  output: "gpu_1/res3_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a_w"
  output: "gpu_1/res3_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b_w"
  output: "gpu_1/res3_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_w"
  output: "gpu_1/res3_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a_w"
  output: "gpu_1/res3_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b_w"
  output: "gpu_1/res3_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2c_w"
  output: "gpu_1/res3_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a_w"
  output: "gpu_1/res4_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b_w"
  output: "gpu_1/res4_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_w"
  output: "gpu_1/res4_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch1_w"
  output: "gpu_1/res4_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a_w"
  output: "gpu_1/res4_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b_w"
  output: "gpu_1/res4_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_w"
  output: "gpu_1/res4_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a_w"
  output: "gpu_1/res4_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b_w"
  output: "gpu_1/res4_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_w"
  output: "gpu_1/res4_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a_w"
  output: "gpu_1/res4_3_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b_w"
  output: "gpu_1/res4_3_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_w"
  output: "gpu_1/res4_3_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a_w"
  output: "gpu_1/res4_4_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b_w"
  output: "gpu_1/res4_4_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_w"
  output: "gpu_1/res4_4_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a_w"
  output: "gpu_1/res4_5_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b_w"
  output: "gpu_1/res4_5_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2c_w"
  output: "gpu_1/res4_5_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_w"
  output: "gpu_1/conv_rpn_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_b"
  output: "gpu_1/conv_rpn_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_w"
  output: "gpu_1/rpn_cls_logits_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_b"
  output: "gpu_1/rpn_cls_logits_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_w"
  output: "gpu_1/rpn_bbox_pred_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_b"
  output: "gpu_1/rpn_bbox_pred_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a_w"
  output: "gpu_1/res5_0_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b_w"
  output: "gpu_1/res5_0_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_w"
  output: "gpu_1/res5_0_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch1_w"
  output: "gpu_1/res5_0_branch1_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a_w"
  output: "gpu_1/res5_1_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b_w"
  output: "gpu_1/res5_1_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_w"
  output: "gpu_1/res5_1_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a_w"
  output: "gpu_1/res5_2_branch2a_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b_w"
  output: "gpu_1/res5_2_branch2b_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2c_w"
  output: "gpu_1/res5_2_branch2c_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_w"
  output: "gpu_1/cls_score_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_b"
  output: "gpu_1/cls_score_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_w"
  output: "gpu_1/bbox_pred_w_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_b"
  output: "gpu_1/bbox_pred_b_momentum"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 0.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 111, in add_single_gpu_param_update_ops\n    [param], param + \'_momentum\', value=0.0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
