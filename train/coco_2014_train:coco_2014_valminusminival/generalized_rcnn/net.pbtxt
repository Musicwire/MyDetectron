name: "generalized_rcnn"
op {
  input: "gpu_0/roi_blobs_queue_bd38e172-b764-4488-bc63-d8f6c02f6ebd"
  output: "gpu_0/data"
  output: "gpu_0/im_info"
  output: "gpu_0/roidb"
  output: "gpu_0/rpn_labels_int32_wide"
  output: "gpu_0/rpn_bbox_targets_wide"
  output: "gpu_0/rpn_bbox_inside_weights_wide"
  output: "gpu_0/rpn_bbox_outside_weights_wide"
  name: ""
  type: "DequeueBlobs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 58, in train_model\n    setup_model_for_training(model, weights_file, output_dir)\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 157, in setup_model_for_training\n    add_model_training_inputs(model)\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 184, in add_model_training_inputs\n    model_builder.add_training_inputs(model, roidb=roidb)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 495, in add_training_inputs\n    model.roi_data_loader._blobs_queue_name, blob_names\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/roi_blobs_queue_bd38e172-b764-4488-bc63-d8f6c02f6ebd"
  output: "gpu_1/data"
  output: "gpu_1/im_info"
  output: "gpu_1/roidb"
  output: "gpu_1/rpn_labels_int32_wide"
  output: "gpu_1/rpn_bbox_targets_wide"
  output: "gpu_1/rpn_bbox_inside_weights_wide"
  output: "gpu_1/rpn_bbox_outside_weights_wide"
  name: ""
  type: "DequeueBlobs"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 58, in train_model\n    setup_model_for_training(model, weights_file, output_dir)\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 157, in setup_model_for_training\n    add_model_training_inputs(model)\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 184, in add_model_training_inputs\n    model_builder.add_training_inputs(model, roidb=roidb)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 495, in add_training_inputs\n    model.roi_data_loader._blobs_queue_name, blob_names\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/data"
  input: "gpu_0/conv1_w"
  output: "gpu_0/conv1"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 251, in basic_bn_stem\n    p = model.Conv(data, \'conv1\', 3, dim, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  input: "gpu_0/res_conv1_bn_s"
  input: "gpu_0/res_conv1_bn_b"
  output: "gpu_0/conv1"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  output: "gpu_0/conv1"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 253, in basic_bn_stem\n    p = model.Relu(p, p)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  output: "gpu_0/pool1"
  name: ""
  type: "MaxPool"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 254, in basic_bn_stem\n    p = model.MaxPool(p, \'pool1\', kernel=3, pad=1, stride=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 212, in MaxPool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 30, in max_pool\n    return model.net.MaxPool(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool1"
  input: "gpu_0/res2_0_branch2a_w"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  input: "gpu_0/res2_0_branch2a_bn_s"
  input: "gpu_0/res2_0_branch2a_bn_b"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  input: "gpu_0/res2_0_branch2b_w"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  input: "gpu_0/res2_0_branch2b_bn_s"
  input: "gpu_0/res2_0_branch2b_bn_b"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  input: "gpu_0/res2_0_branch2c_w"
  output: "gpu_0/res2_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c"
  input: "gpu_0/res2_0_branch2c_bn_s"
  input: "gpu_0/res2_0_branch2c_bn_b"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool1"
  input: "gpu_0/res2_0_branch1_w"
  output: "gpu_0/res2_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch1"
  input: "gpu_0/res2_0_branch1_bn_s"
  input: "gpu_0/res2_0_branch1_bn_b"
  output: "gpu_0/res2_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  input: "gpu_0/res2_0_branch1_bn"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  input: "gpu_0/res2_1_branch2a_w"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  input: "gpu_0/res2_1_branch2a_bn_s"
  input: "gpu_0/res2_1_branch2a_bn_b"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  input: "gpu_0/res2_1_branch2b_w"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  input: "gpu_0/res2_1_branch2b_bn_s"
  input: "gpu_0/res2_1_branch2b_bn_b"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  input: "gpu_0/res2_1_branch2c_w"
  output: "gpu_0/res2_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c"
  input: "gpu_0/res2_1_branch2c_bn_s"
  input: "gpu_0/res2_1_branch2c_bn_b"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  input: "gpu_0/res2_0_branch2c_bn"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  input: "gpu_0/res2_2_branch2a_w"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  input: "gpu_0/res2_2_branch2a_bn_s"
  input: "gpu_0/res2_2_branch2a_bn_b"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  input: "gpu_0/res2_2_branch2b_w"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  input: "gpu_0/res2_2_branch2b_bn_s"
  input: "gpu_0/res2_2_branch2b_bn_b"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  input: "gpu_0/res2_2_branch2c_w"
  output: "gpu_0/res2_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2c"
  input: "gpu_0/res2_2_branch2c_bn_s"
  input: "gpu_0/res2_2_branch2c_bn_b"
  output: "gpu_0/res2_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2c_bn"
  input: "gpu_0/res2_1_branch2c_bn"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "StopGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 103, in add_ResNet_convX_body\n    model.StopGradient(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2a_bn_s"
  input: "gpu_0/res3_0_branch2a_bn_b"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2b_bn_s"
  input: "gpu_0/res3_0_branch2b_bn_b"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c"
  input: "gpu_0/res3_0_branch2c_bn_s"
  input: "gpu_0/res3_0_branch2c_bn_b"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1"
  input: "gpu_0/res3_0_branch1_bn_s"
  input: "gpu_0/res3_0_branch1_bn_b"
  output: "gpu_0/res3_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_0_branch1_bn"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2a_bn_s"
  input: "gpu_0/res3_1_branch2a_bn_b"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2b_bn_s"
  input: "gpu_0/res3_1_branch2b_bn_b"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c"
  input: "gpu_0/res3_1_branch2c_bn_s"
  input: "gpu_0/res3_1_branch2c_bn_b"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_0_branch2c_bn"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2a_bn_s"
  input: "gpu_0/res3_2_branch2a_bn_b"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2b_bn_s"
  input: "gpu_0/res3_2_branch2b_bn_b"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c"
  input: "gpu_0/res3_2_branch2c_bn_s"
  input: "gpu_0/res3_2_branch2c_bn_b"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_1_branch2c_bn"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2a_bn_s"
  input: "gpu_0/res3_3_branch2a_bn_b"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2b_bn_s"
  input: "gpu_0/res3_3_branch2b_bn_b"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c"
  input: "gpu_0/res3_3_branch2c_bn_s"
  input: "gpu_0/res3_3_branch2c_bn_b"
  output: "gpu_0/res3_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_bn"
  input: "gpu_0/res3_2_branch2c_bn"
  output: "gpu_0/res3_3_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  output: "gpu_0/res3_3_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2a_bn_s"
  input: "gpu_0/res4_0_branch2a_bn_b"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2b_bn_s"
  input: "gpu_0/res4_0_branch2b_bn_b"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c"
  input: "gpu_0/res4_0_branch2c_bn_s"
  input: "gpu_0/res4_0_branch2c_bn_b"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1"
  input: "gpu_0/res4_0_branch1_bn_s"
  input: "gpu_0/res4_0_branch1_bn_b"
  output: "gpu_0/res4_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_0_branch1_bn"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2a_bn_s"
  input: "gpu_0/res4_1_branch2a_bn_b"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2b_bn_s"
  input: "gpu_0/res4_1_branch2b_bn_b"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c"
  input: "gpu_0/res4_1_branch2c_bn_s"
  input: "gpu_0/res4_1_branch2c_bn_b"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_0_branch2c_bn"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2a_bn_s"
  input: "gpu_0/res4_2_branch2a_bn_b"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2b_bn_s"
  input: "gpu_0/res4_2_branch2b_bn_b"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c"
  input: "gpu_0/res4_2_branch2c_bn_s"
  input: "gpu_0/res4_2_branch2c_bn_b"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_1_branch2c_bn"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2a_bn_s"
  input: "gpu_0/res4_3_branch2a_bn_b"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2b_bn_s"
  input: "gpu_0/res4_3_branch2b_bn_b"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c"
  input: "gpu_0/res4_3_branch2c_bn_s"
  input: "gpu_0/res4_3_branch2c_bn_b"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_2_branch2c_bn"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2a_bn_s"
  input: "gpu_0/res4_4_branch2a_bn_b"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2b_bn_s"
  input: "gpu_0/res4_4_branch2b_bn_b"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c"
  input: "gpu_0/res4_4_branch2c_bn_s"
  input: "gpu_0/res4_4_branch2c_bn_b"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_3_branch2c_bn"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2a_bn_s"
  input: "gpu_0/res4_5_branch2a_bn_b"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2b_bn_s"
  input: "gpu_0/res4_5_branch2b_bn_b"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c"
  input: "gpu_0/res4_5_branch2c_bn_s"
  input: "gpu_0/res4_5_branch2c_bn_b"
  output: "gpu_0/res4_5_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_bn"
  input: "gpu_0/res4_4_branch2c_bn"
  output: "gpu_0/res4_5_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  output: "gpu_0/res4_5_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/conv_rpn_w"
  input: "gpu_0/conv_rpn_b"
  output: "gpu_0/conv_rpn"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn"
  output: "gpu_0/conv_rpn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 82, in add_single_scale_rpn_outputs\n    model.Relu(\'conv_rpn\', \'conv_rpn\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn"
  input: "gpu_0/rpn_cls_logits_w"
  input: "gpu_0/rpn_cls_logits_b"
  output: "gpu_0/rpn_cls_logits"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn"
  input: "gpu_0/rpn_bbox_pred_w"
  input: "gpu_0/rpn_bbox_pred_b"
  output: "gpu_0/rpn_bbox_pred"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits"
  output: "gpu_0/rpn_cls_probs"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 114, in add_single_scale_rpn_outputs\n    model.net.Sigmoid(\'rpn_cls_logits\', \'rpn_cls_probs\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs"
  input: "gpu_0/rpn_bbox_pred"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois"
  output: "gpu_0/rpn_roi_probs"
  name: "GenerateProposalsOp:rpn_cls_probs,rpn_bbox_pred,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward"
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 119, in add_single_scale_rpn_outputs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 137, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_rois"
  input: "gpu_0/roidb"
  input: "gpu_0/im_info"
  output: "gpu_0/rois"
  output: "gpu_0/labels_int32"
  output: "gpu_0/bbox_targets"
  output: "gpu_0/bbox_inside_weights"
  output: "gpu_0/bbox_outside_weights"
  name: "GenerateProposalLabelsOp:rpn_rois,roidb,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:1"
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 125, in add_single_scale_rpn_outputs\n    model.GenerateProposalLabels([\'rpn_rois\', \'roidb\', \'im_info\'])\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 168, in GenerateProposalLabels\n    blobs_in, blobs_out, name=name\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide"
  input: "gpu_0/rpn_cls_logits"
  output: "gpu_0/rpn_labels_int32"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 136, in add_single_scale_rpn_losses\n    [\'rpn_labels_int32_wide\', \'rpn_cls_logits\'], \'rpn_labels_int32\'\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide"
  input: "gpu_0/rpn_bbox_pred"
  output: "gpu_0/rpn_bbox_targets"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide"
  input: "gpu_0/rpn_bbox_pred"
  output: "gpu_0/rpn_bbox_inside_weights"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide"
  input: "gpu_0/rpn_bbox_pred"
  output: "gpu_0/rpn_bbox_outside_weights"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits"
  input: "gpu_0/rpn_labels_int32"
  output: "gpu_0/loss_rpn_cls"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 145, in add_single_scale_rpn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred"
  input: "gpu_0/rpn_bbox_targets"
  input: "gpu_0/rpn_bbox_inside_weights"
  input: "gpu_0/rpn_bbox_outside_weights"
  output: "gpu_0/loss_rpn_bbox"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 154, in add_single_scale_rpn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls"
  output: "gpu_0/loss_rpn_cls_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 157, in add_single_scale_rpn_losses\n    model, [loss_rpn_cls, loss_rpn_bbox]\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 157, in add_single_scale_rpn_losses\n    model, [loss_rpn_cls, loss_rpn_bbox]\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/rois"
  output: "gpu_0/pool5"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 0
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 139, in add_ResNet_roi_conv5_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 298, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool5"
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2a_bn_s"
  input: "gpu_0/res5_0_branch2a_bn_b"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2b_bn_s"
  input: "gpu_0/res5_0_branch2b_bn_b"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c"
  input: "gpu_0/res5_0_branch2c_bn_s"
  input: "gpu_0/res5_0_branch2c_bn_b"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool5"
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1"
  input: "gpu_0/res5_0_branch1_bn_s"
  input: "gpu_0/res5_0_branch1_bn_b"
  output: "gpu_0/res5_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_0_branch1_bn"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2a_bn_s"
  input: "gpu_0/res5_1_branch2a_bn_b"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2b_bn_s"
  input: "gpu_0/res5_1_branch2b_bn_b"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c"
  input: "gpu_0/res5_1_branch2c_bn_s"
  input: "gpu_0/res5_1_branch2c_bn_b"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_0_branch2c_bn"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2a_bn_s"
  input: "gpu_0/res5_2_branch2a_bn_b"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2b_bn_s"
  input: "gpu_0/res5_2_branch2b_bn_b"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c"
  input: "gpu_0/res5_2_branch2c_bn_s"
  input: "gpu_0/res5_2_branch2c_bn_b"
  output: "gpu_0/res5_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_bn"
  input: "gpu_0/res5_1_branch2c_bn"
  output: "gpu_0/res5_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_sum"
  output: "gpu_0/res5_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_sum"
  output: "gpu_0/res5_pool"
  name: ""
  type: "AveragePool"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 147, in add_ResNet_roi_conv5_head\n    s = model.AveragePool(s, \'res5_pool\', kernel=7)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 220, in AveragePool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 42, in average_pool\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_pool"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_pool"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score"
  input: "gpu_0/labels_int32"
  output: "gpu_0/cls_prob"
  output: "gpu_0/loss_cls"
  name: ""
  type: "SoftmaxWithLoss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 74, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred"
  input: "gpu_0/bbox_targets"
  input: "gpu_0/bbox_inside_weights"
  input: "gpu_0/bbox_outside_weights"
  output: "gpu_0/loss_bbox"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 82, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_cls"
  output: "gpu_0/loss_cls_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 84, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_bbox"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 84, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_prob"
  input: "gpu_0/labels_int32"
  output: "gpu_0/accuracy_cls"
  name: ""
  type: "Accuracy"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 85, in add_fast_rcnn_losses\n    model.Accuracy([\'cls_prob\', \'labels_int32\'], \'accuracy_cls\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 208, in Accuracy\n    return brew.accuracy(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/train.py\", line 70, in accuracy\n    model.net.Accuracy(blob_in, blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/data"
  input: "gpu_1/conv1_w"
  output: "gpu_1/conv1"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 251, in basic_bn_stem\n    p = model.Conv(data, \'conv1\', 3, dim, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv1"
  input: "gpu_1/res_conv1_bn_s"
  input: "gpu_1/res_conv1_bn_b"
  output: "gpu_1/conv1"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=dim, inplace=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv1"
  output: "gpu_1/conv1"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 253, in basic_bn_stem\n    p = model.Relu(p, p)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv1"
  output: "gpu_1/pool1"
  name: ""
  type: "MaxPool"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, \'data\')\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 254, in basic_bn_stem\n    p = model.MaxPool(p, \'pool1\', kernel=3, pad=1, stride=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 212, in MaxPool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 30, in max_pool\n    return model.net.MaxPool(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/pool1"
  input: "gpu_1/res2_0_branch2a_w"
  output: "gpu_1/res2_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2a"
  input: "gpu_1/res2_0_branch2a_bn_s"
  input: "gpu_1/res2_0_branch2a_bn_b"
  output: "gpu_1/res2_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2a"
  output: "gpu_1/res2_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2a"
  input: "gpu_1/res2_0_branch2b_w"
  output: "gpu_1/res2_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2b"
  input: "gpu_1/res2_0_branch2b_bn_s"
  input: "gpu_1/res2_0_branch2b_bn_b"
  output: "gpu_1/res2_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2b"
  output: "gpu_1/res2_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2b"
  input: "gpu_1/res2_0_branch2c_w"
  output: "gpu_1/res2_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2c"
  input: "gpu_1/res2_0_branch2c_bn_s"
  input: "gpu_1/res2_0_branch2c_bn_b"
  output: "gpu_1/res2_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/pool1"
  input: "gpu_1/res2_0_branch1_w"
  output: "gpu_1/res2_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch1"
  input: "gpu_1/res2_0_branch1_bn_s"
  input: "gpu_1/res2_0_branch1_bn_b"
  output: "gpu_1/res2_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2c_bn"
  input: "gpu_1/res2_0_branch1_bn"
  output: "gpu_1/res2_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2c_bn"
  output: "gpu_1/res2_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_0_branch2c_bn"
  input: "gpu_1/res2_1_branch2a_w"
  output: "gpu_1/res2_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2a"
  input: "gpu_1/res2_1_branch2a_bn_s"
  input: "gpu_1/res2_1_branch2a_bn_b"
  output: "gpu_1/res2_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2a"
  output: "gpu_1/res2_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2a"
  input: "gpu_1/res2_1_branch2b_w"
  output: "gpu_1/res2_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2b"
  input: "gpu_1/res2_1_branch2b_bn_s"
  input: "gpu_1/res2_1_branch2b_bn_b"
  output: "gpu_1/res2_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2b"
  output: "gpu_1/res2_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2b"
  input: "gpu_1/res2_1_branch2c_w"
  output: "gpu_1/res2_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2c"
  input: "gpu_1/res2_1_branch2c_bn_s"
  input: "gpu_1/res2_1_branch2c_bn_b"
  output: "gpu_1/res2_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2c_bn"
  input: "gpu_1/res2_0_branch2c_bn"
  output: "gpu_1/res2_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2c_bn"
  output: "gpu_1/res2_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_1_branch2c_bn"
  input: "gpu_1/res2_2_branch2a_w"
  output: "gpu_1/res2_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2a"
  input: "gpu_1/res2_2_branch2a_bn_s"
  input: "gpu_1/res2_2_branch2a_bn_b"
  output: "gpu_1/res2_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2a"
  output: "gpu_1/res2_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2a"
  input: "gpu_1/res2_2_branch2b_w"
  output: "gpu_1/res2_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2b"
  input: "gpu_1/res2_2_branch2b_bn_s"
  input: "gpu_1/res2_2_branch2b_bn_b"
  output: "gpu_1/res2_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2b"
  output: "gpu_1/res2_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2b"
  input: "gpu_1/res2_2_branch2c_w"
  output: "gpu_1/res2_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2c"
  input: "gpu_1/res2_2_branch2c_bn_s"
  input: "gpu_1/res2_2_branch2c_bn_b"
  output: "gpu_1/res2_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_branch2c_bn"
  input: "gpu_1/res2_1_branch2c_bn"
  output: "gpu_1/res2_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_sum"
  output: "gpu_1/res2_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_sum"
  output: "gpu_1/res2_2_sum"
  name: ""
  type: "StopGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 103, in add_ResNet_convX_body\n    model.StopGradient(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_sum"
  input: "gpu_1/res3_0_branch2a_w"
  output: "gpu_1/res3_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a"
  input: "gpu_1/res3_0_branch2a_bn_s"
  input: "gpu_1/res3_0_branch2a_bn_b"
  output: "gpu_1/res3_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a"
  output: "gpu_1/res3_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a"
  input: "gpu_1/res3_0_branch2b_w"
  output: "gpu_1/res3_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b"
  input: "gpu_1/res3_0_branch2b_bn_s"
  input: "gpu_1/res3_0_branch2b_bn_b"
  output: "gpu_1/res3_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b"
  output: "gpu_1/res3_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b"
  input: "gpu_1/res3_0_branch2c_w"
  output: "gpu_1/res3_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c"
  input: "gpu_1/res3_0_branch2c_bn_s"
  input: "gpu_1/res3_0_branch2c_bn_b"
  output: "gpu_1/res3_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res2_2_sum"
  input: "gpu_1/res3_0_branch1_w"
  output: "gpu_1/res3_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch1"
  input: "gpu_1/res3_0_branch1_bn_s"
  input: "gpu_1/res3_0_branch1_bn_b"
  output: "gpu_1/res3_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_bn"
  input: "gpu_1/res3_0_branch1_bn"
  output: "gpu_1/res3_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_bn"
  output: "gpu_1/res3_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_bn"
  input: "gpu_1/res3_1_branch2a_w"
  output: "gpu_1/res3_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a"
  input: "gpu_1/res3_1_branch2a_bn_s"
  input: "gpu_1/res3_1_branch2a_bn_b"
  output: "gpu_1/res3_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a"
  output: "gpu_1/res3_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a"
  input: "gpu_1/res3_1_branch2b_w"
  output: "gpu_1/res3_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b"
  input: "gpu_1/res3_1_branch2b_bn_s"
  input: "gpu_1/res3_1_branch2b_bn_b"
  output: "gpu_1/res3_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b"
  output: "gpu_1/res3_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b"
  input: "gpu_1/res3_1_branch2c_w"
  output: "gpu_1/res3_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c"
  input: "gpu_1/res3_1_branch2c_bn_s"
  input: "gpu_1/res3_1_branch2c_bn_b"
  output: "gpu_1/res3_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_bn"
  input: "gpu_1/res3_0_branch2c_bn"
  output: "gpu_1/res3_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_bn"
  output: "gpu_1/res3_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_bn"
  input: "gpu_1/res3_2_branch2a_w"
  output: "gpu_1/res3_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a"
  input: "gpu_1/res3_2_branch2a_bn_s"
  input: "gpu_1/res3_2_branch2a_bn_b"
  output: "gpu_1/res3_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a"
  output: "gpu_1/res3_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a"
  input: "gpu_1/res3_2_branch2b_w"
  output: "gpu_1/res3_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b"
  input: "gpu_1/res3_2_branch2b_bn_s"
  input: "gpu_1/res3_2_branch2b_bn_b"
  output: "gpu_1/res3_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b"
  output: "gpu_1/res3_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b"
  input: "gpu_1/res3_2_branch2c_w"
  output: "gpu_1/res3_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c"
  input: "gpu_1/res3_2_branch2c_bn_s"
  input: "gpu_1/res3_2_branch2c_bn_b"
  output: "gpu_1/res3_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_bn"
  input: "gpu_1/res3_1_branch2c_bn"
  output: "gpu_1/res3_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_bn"
  output: "gpu_1/res3_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_bn"
  input: "gpu_1/res3_3_branch2a_w"
  output: "gpu_1/res3_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a"
  input: "gpu_1/res3_3_branch2a_bn_s"
  input: "gpu_1/res3_3_branch2a_bn_b"
  output: "gpu_1/res3_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a"
  output: "gpu_1/res3_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a"
  input: "gpu_1/res3_3_branch2b_w"
  output: "gpu_1/res3_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b"
  input: "gpu_1/res3_3_branch2b_bn_s"
  input: "gpu_1/res3_3_branch2b_bn_b"
  output: "gpu_1/res3_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b"
  output: "gpu_1/res3_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b"
  input: "gpu_1/res3_3_branch2c_w"
  output: "gpu_1/res3_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2c"
  input: "gpu_1/res3_3_branch2c_bn_s"
  input: "gpu_1/res3_3_branch2c_bn_b"
  output: "gpu_1/res3_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2c_bn"
  input: "gpu_1/res3_2_branch2c_bn"
  output: "gpu_1/res3_3_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_sum"
  output: "gpu_1/res3_3_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_sum"
  input: "gpu_1/res4_0_branch2a_w"
  output: "gpu_1/res4_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a"
  input: "gpu_1/res4_0_branch2a_bn_s"
  input: "gpu_1/res4_0_branch2a_bn_b"
  output: "gpu_1/res4_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a"
  output: "gpu_1/res4_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a"
  input: "gpu_1/res4_0_branch2b_w"
  output: "gpu_1/res4_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b"
  input: "gpu_1/res4_0_branch2b_bn_s"
  input: "gpu_1/res4_0_branch2b_bn_b"
  output: "gpu_1/res4_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b"
  output: "gpu_1/res4_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b"
  input: "gpu_1/res4_0_branch2c_w"
  output: "gpu_1/res4_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c"
  input: "gpu_1/res4_0_branch2c_bn_s"
  input: "gpu_1/res4_0_branch2c_bn_b"
  output: "gpu_1/res4_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_sum"
  input: "gpu_1/res4_0_branch1_w"
  output: "gpu_1/res4_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch1"
  input: "gpu_1/res4_0_branch1_bn_s"
  input: "gpu_1/res4_0_branch1_bn_b"
  output: "gpu_1/res4_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_bn"
  input: "gpu_1/res4_0_branch1_bn"
  output: "gpu_1/res4_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_bn"
  output: "gpu_1/res4_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_bn"
  input: "gpu_1/res4_1_branch2a_w"
  output: "gpu_1/res4_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a"
  input: "gpu_1/res4_1_branch2a_bn_s"
  input: "gpu_1/res4_1_branch2a_bn_b"
  output: "gpu_1/res4_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a"
  output: "gpu_1/res4_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a"
  input: "gpu_1/res4_1_branch2b_w"
  output: "gpu_1/res4_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b"
  input: "gpu_1/res4_1_branch2b_bn_s"
  input: "gpu_1/res4_1_branch2b_bn_b"
  output: "gpu_1/res4_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b"
  output: "gpu_1/res4_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b"
  input: "gpu_1/res4_1_branch2c_w"
  output: "gpu_1/res4_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c"
  input: "gpu_1/res4_1_branch2c_bn_s"
  input: "gpu_1/res4_1_branch2c_bn_b"
  output: "gpu_1/res4_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_bn"
  input: "gpu_1/res4_0_branch2c_bn"
  output: "gpu_1/res4_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_bn"
  output: "gpu_1/res4_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_bn"
  input: "gpu_1/res4_2_branch2a_w"
  output: "gpu_1/res4_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a"
  input: "gpu_1/res4_2_branch2a_bn_s"
  input: "gpu_1/res4_2_branch2a_bn_b"
  output: "gpu_1/res4_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a"
  output: "gpu_1/res4_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a"
  input: "gpu_1/res4_2_branch2b_w"
  output: "gpu_1/res4_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b"
  input: "gpu_1/res4_2_branch2b_bn_s"
  input: "gpu_1/res4_2_branch2b_bn_b"
  output: "gpu_1/res4_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b"
  output: "gpu_1/res4_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b"
  input: "gpu_1/res4_2_branch2c_w"
  output: "gpu_1/res4_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c"
  input: "gpu_1/res4_2_branch2c_bn_s"
  input: "gpu_1/res4_2_branch2c_bn_b"
  output: "gpu_1/res4_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_bn"
  input: "gpu_1/res4_1_branch2c_bn"
  output: "gpu_1/res4_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_bn"
  output: "gpu_1/res4_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_bn"
  input: "gpu_1/res4_3_branch2a_w"
  output: "gpu_1/res4_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a"
  input: "gpu_1/res4_3_branch2a_bn_s"
  input: "gpu_1/res4_3_branch2a_bn_b"
  output: "gpu_1/res4_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a"
  output: "gpu_1/res4_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a"
  input: "gpu_1/res4_3_branch2b_w"
  output: "gpu_1/res4_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b"
  input: "gpu_1/res4_3_branch2b_bn_s"
  input: "gpu_1/res4_3_branch2b_bn_b"
  output: "gpu_1/res4_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b"
  output: "gpu_1/res4_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b"
  input: "gpu_1/res4_3_branch2c_w"
  output: "gpu_1/res4_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c"
  input: "gpu_1/res4_3_branch2c_bn_s"
  input: "gpu_1/res4_3_branch2c_bn_b"
  output: "gpu_1/res4_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_bn"
  input: "gpu_1/res4_2_branch2c_bn"
  output: "gpu_1/res4_3_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_bn"
  output: "gpu_1/res4_3_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_bn"
  input: "gpu_1/res4_4_branch2a_w"
  output: "gpu_1/res4_4_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a"
  input: "gpu_1/res4_4_branch2a_bn_s"
  input: "gpu_1/res4_4_branch2a_bn_b"
  output: "gpu_1/res4_4_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a"
  output: "gpu_1/res4_4_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a"
  input: "gpu_1/res4_4_branch2b_w"
  output: "gpu_1/res4_4_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b"
  input: "gpu_1/res4_4_branch2b_bn_s"
  input: "gpu_1/res4_4_branch2b_bn_b"
  output: "gpu_1/res4_4_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b"
  output: "gpu_1/res4_4_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b"
  input: "gpu_1/res4_4_branch2c_w"
  output: "gpu_1/res4_4_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c"
  input: "gpu_1/res4_4_branch2c_bn_s"
  input: "gpu_1/res4_4_branch2c_bn_b"
  output: "gpu_1/res4_4_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_bn"
  input: "gpu_1/res4_3_branch2c_bn"
  output: "gpu_1/res4_4_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_bn"
  output: "gpu_1/res4_4_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_bn"
  input: "gpu_1/res4_5_branch2a_w"
  output: "gpu_1/res4_5_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a"
  input: "gpu_1/res4_5_branch2a_bn_s"
  input: "gpu_1/res4_5_branch2a_bn_b"
  output: "gpu_1/res4_5_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a"
  output: "gpu_1/res4_5_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a"
  input: "gpu_1/res4_5_branch2b_w"
  output: "gpu_1/res4_5_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b"
  input: "gpu_1/res4_5_branch2b_bn_s"
  input: "gpu_1/res4_5_branch2b_bn_b"
  output: "gpu_1/res4_5_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b"
  output: "gpu_1/res4_5_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b"
  input: "gpu_1/res4_5_branch2c_w"
  output: "gpu_1/res4_5_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2c"
  input: "gpu_1/res4_5_branch2c_bn_s"
  input: "gpu_1/res4_5_branch2c_bn_b"
  output: "gpu_1/res4_5_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2c_bn"
  input: "gpu_1/res4_4_branch2c_bn"
  output: "gpu_1/res4_5_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_sum"
  output: "gpu_1/res4_5_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 185, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 35, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_sum"
  input: "gpu_1/conv_rpn_w"
  input: "gpu_1/conv_rpn_b"
  output: "gpu_1/conv_rpn"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 80, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn"
  output: "gpu_1/conv_rpn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 82, in add_single_scale_rpn_outputs\n    model.Relu(\'conv_rpn\', \'conv_rpn\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn"
  input: "gpu_1/rpn_cls_logits_w"
  input: "gpu_1/rpn_cls_logits_b"
  output: "gpu_1/rpn_cls_logits"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 93, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn"
  input: "gpu_1/rpn_bbox_pred_w"
  input: "gpu_1/rpn_bbox_pred_b"
  output: "gpu_1/rpn_bbox_pred"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 105, in add_single_scale_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits"
  output: "gpu_1/rpn_cls_probs"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 114, in add_single_scale_rpn_outputs\n    model.net.Sigmoid(\'rpn_cls_logits\', \'rpn_cls_probs\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_probs"
  input: "gpu_1/rpn_bbox_pred"
  input: "gpu_1/im_info"
  output: "gpu_1/rpn_rois"
  output: "gpu_1/rpn_roi_probs"
  name: "GenerateProposalsOp:rpn_cls_probs,rpn_bbox_pred,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:2"
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 119, in add_single_scale_rpn_outputs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 137, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_rois"
  input: "gpu_1/roidb"
  input: "gpu_1/im_info"
  output: "gpu_1/rois"
  output: "gpu_1/labels_int32"
  output: "gpu_1/bbox_targets"
  output: "gpu_1/bbox_inside_weights"
  output: "gpu_1/bbox_outside_weights"
  name: "GenerateProposalLabelsOp:rpn_rois,roidb,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:3"
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 52, in add_generic_rpn_outputs\n    add_single_scale_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 125, in add_single_scale_rpn_outputs\n    model.GenerateProposalLabels([\'rpn_rois\', \'roidb\', \'im_info\'])\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 168, in GenerateProposalLabels\n    blobs_in, blobs_out, name=name\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_labels_int32_wide"
  input: "gpu_1/rpn_cls_logits"
  output: "gpu_1/rpn_labels_int32"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 136, in add_single_scale_rpn_losses\n    [\'rpn_labels_int32_wide\', \'rpn_cls_logits\'], \'rpn_labels_int32\'\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_targets_wide"
  input: "gpu_1/rpn_bbox_pred"
  output: "gpu_1/rpn_bbox_targets"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_inside_weights_wide"
  input: "gpu_1/rpn_bbox_pred"
  output: "gpu_1/rpn_bbox_inside_weights"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_outside_weights_wide"
  input: "gpu_1/rpn_bbox_pred"
  output: "gpu_1/rpn_bbox_outside_weights"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 140, in add_single_scale_rpn_losses\n    [\'rpn_bbox_\' + key + \'_wide\', \'rpn_bbox_pred\'], \'rpn_bbox_\' + key\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits"
  input: "gpu_1/rpn_labels_int32"
  output: "gpu_1/loss_rpn_cls"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 145, in add_single_scale_rpn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred"
  input: "gpu_1/rpn_bbox_targets"
  input: "gpu_1/rpn_bbox_inside_weights"
  input: "gpu_1/rpn_bbox_outside_weights"
  output: "gpu_1/loss_rpn_bbox"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 154, in add_single_scale_rpn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/loss_rpn_cls"
  output: "gpu_1/loss_rpn_cls_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 157, in add_single_scale_rpn_losses\n    model, [loss_rpn_cls, loss_rpn_bbox]\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/loss_rpn_bbox"
  output: "gpu_1/__m0_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 57, in add_generic_rpn_outputs\n    loss_gradients = add_single_scale_rpn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/rpn_heads.py\", line 157, in add_single_scale_rpn_losses\n    model, [loss_rpn_cls, loss_rpn_bbox]\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_sum"
  input: "gpu_1/rois"
  output: "gpu_1/pool5"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 0
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 139, in add_ResNet_roi_conv5_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 298, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/pool5"
  input: "gpu_1/res5_0_branch2a_w"
  output: "gpu_1/res5_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a"
  input: "gpu_1/res5_0_branch2a_bn_s"
  input: "gpu_1/res5_0_branch2a_bn_b"
  output: "gpu_1/res5_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a"
  output: "gpu_1/res5_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a"
  input: "gpu_1/res5_0_branch2b_w"
  output: "gpu_1/res5_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b"
  input: "gpu_1/res5_0_branch2b_bn_s"
  input: "gpu_1/res5_0_branch2b_bn_b"
  output: "gpu_1/res5_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b"
  output: "gpu_1/res5_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b"
  input: "gpu_1/res5_0_branch2c_w"
  output: "gpu_1/res5_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c"
  input: "gpu_1/res5_0_branch2c_bn_s"
  input: "gpu_1/res5_0_branch2c_bn_b"
  output: "gpu_1/res5_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/pool5"
  input: "gpu_1/res5_0_branch1_w"
  output: "gpu_1/res5_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 217, in basic_bn_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch1"
  input: "gpu_1/res5_0_branch1_bn_s"
  input: "gpu_1/res5_0_branch1_bn_b"
  output: "gpu_1/res5_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 219, in basic_bn_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_bn"
  input: "gpu_1/res5_0_branch1_bn"
  output: "gpu_1/res5_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_bn"
  output: "gpu_1/res5_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_bn"
  input: "gpu_1/res5_1_branch2a_w"
  output: "gpu_1/res5_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a"
  input: "gpu_1/res5_1_branch2a_bn_s"
  input: "gpu_1/res5_1_branch2a_bn_b"
  output: "gpu_1/res5_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a"
  output: "gpu_1/res5_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a"
  input: "gpu_1/res5_1_branch2b_w"
  output: "gpu_1/res5_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b"
  input: "gpu_1/res5_1_branch2b_bn_s"
  input: "gpu_1/res5_1_branch2b_bn_b"
  output: "gpu_1/res5_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b"
  output: "gpu_1/res5_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b"
  input: "gpu_1/res5_1_branch2c_w"
  output: "gpu_1/res5_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c"
  input: "gpu_1/res5_1_branch2c_bn_s"
  input: "gpu_1/res5_1_branch2c_bn_b"
  output: "gpu_1/res5_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_bn"
  input: "gpu_1/res5_0_branch2c_bn"
  output: "gpu_1/res5_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_bn"
  output: "gpu_1/res5_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_bn"
  input: "gpu_1/res5_2_branch2a_w"
  output: "gpu_1/res5_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a"
  input: "gpu_1/res5_2_branch2a_bn_s"
  input: "gpu_1/res5_2_branch2a_bn_b"
  output: "gpu_1/res5_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 300, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a"
  output: "gpu_1/res5_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 302, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a"
  input: "gpu_1/res5_2_branch2b_w"
  output: "gpu_1/res5_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b"
  input: "gpu_1/res5_2_branch2b_bn_s"
  input: "gpu_1/res5_2_branch2b_bn_b"
  output: "gpu_1/res5_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 315, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b"
  output: "gpu_1/res5_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 317, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b"
  input: "gpu_1/res5_2_branch2c_w"
  output: "gpu_1/res5_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 407, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2c"
  input: "gpu_1/res5_2_branch2c_bn_s"
  input: "gpu_1/res5_2_branch2c_bn_b"
  output: "gpu_1/res5_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 330, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 410, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/MyDetectron/lib/modeling/detector.py\", line 105, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2c_bn"
  input: "gpu_1/res5_1_branch2c_bn"
  output: "gpu_1/res5_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_sum"
  output: "gpu_1/res5_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 145, in add_ResNet_roi_conv5_head\n    stride_init\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 84, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 193, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_sum"
  output: "gpu_1/res5_pool"
  name: ""
  type: "AveragePool"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 301, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/MyDetectron/lib/modeling/ResNet.py\", line 147, in add_ResNet_roi_conv5_head\n    s = model.AveragePool(s, \'res5_pool\', kernel=7)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 220, in AveragePool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 42, in average_pool\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_pool"
  input: "gpu_1/cls_score_w"
  input: "gpu_1/cls_score_b"
  output: "gpu_1/cls_score"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 54, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_pool"
  input: "gpu_1/bbox_pred_w"
  input: "gpu_1/bbox_pred_b"
  output: "gpu_1/bbox_pred"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 304, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 66, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score"
  input: "gpu_1/labels_int32"
  output: "gpu_1/cls_prob"
  output: "gpu_1/loss_cls"
  name: ""
  type: "SoftmaxWithLoss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 74, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred"
  input: "gpu_1/bbox_targets"
  input: "gpu_1/bbox_inside_weights"
  input: "gpu_1/bbox_outside_weights"
  output: "gpu_1/loss_bbox"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 82, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/loss_cls"
  output: "gpu_1/loss_cls_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 84, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/loss_bbox"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 84, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/MyDetectron/lib/utils/blob.py\", line 165, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_prob"
  input: "gpu_1/labels_int32"
  output: "gpu_1/accuracy_cls"
  name: ""
  type: "Accuracy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 226, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 309, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/fast_rcnn_heads.py\", line 85, in add_fast_rcnn_losses\n    model.Accuracy([\'cls_prob\', \'labels_int32\'], \'accuracy_cls\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 208, in Accuracy\n    return brew.accuracy(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/train.py\", line 70, in accuracy\n    model.net.Accuracy(blob_in, blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred"
  input: "gpu_1/bbox_targets"
  input: "gpu_1/bbox_inside_weights"
  input: "gpu_1/bbox_outside_weights"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/cls_score"
  input: "gpu_1/labels_int32"
  input: "gpu_1/cls_prob"
  input: "gpu_1/loss_cls_grad"
  output: "gpu_1/cls_score_grad"
  name: ""
  type: "SoftmaxWithLossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_pool"
  input: "gpu_1/bbox_pred_w"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/bbox_pred_w_grad"
  output: "gpu_1/bbox_pred_b_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_pool"
  input: "gpu_1/cls_score_w"
  input: "gpu_1/cls_score_grad"
  output: "gpu_1/cls_score_w_grad"
  output: "gpu_1/cls_score_b_grad"
  output: "_gpu_1/res5_pool_grad_autosplit_0"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/__m3_shared"
  input: "_gpu_1/res5_pool_grad_autosplit_0"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res5_2_sum"
  input: "gpu_1/res5_pool"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "AveragePoolGradient"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_sum"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2c_bn_s"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2b"
  input: "gpu_1/res5_2_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res5_2_branch2c_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2b"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2b_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2a"
  input: "gpu_1/res5_2_branch2b_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res5_2_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_2_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2c_bn"
  input: "gpu_1/res5_2_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res5_2_branch2a_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res5_1_branch2c_bn"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2c_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2b"
  input: "gpu_1/res5_1_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res5_1_branch2c_w_grad"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2b"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2b_bn_s"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2a"
  input: "gpu_1/res5_1_branch2b_w"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/res5_1_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_1_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2c_bn"
  input: "gpu_1/res5_1_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res5_1_branch2a_w_grad"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m6_shared"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res5_0_branch2c_bn"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch1_bn_s"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/pool5"
  input: "gpu_1/res5_0_branch1_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res5_0_branch1_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2c_bn_s"
  input: "gpu_1/__m6_shared"
  output: "gpu_1/__m1_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2b"
  input: "gpu_1/res5_0_branch2c_w"
  input: "gpu_1/__m1_shared"
  output: "gpu_1/res5_0_branch2c_w_grad"
  output: "gpu_1/res5_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2b"
  input: "gpu_1/res5_0_branch2b_grad"
  output: "gpu_1/res5_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2b_bn_s"
  input: "gpu_1/res5_0_branch2b_grad"
  output: "gpu_1/res5_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2a"
  input: "gpu_1/res5_0_branch2b_w"
  input: "gpu_1/res5_0_branch2b_grad"
  output: "gpu_1/res5_0_branch2b_w_grad"
  output: "gpu_1/__m1_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2a"
  input: "gpu_1/__m1_shared"
  output: "gpu_1/__m1_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res5_0_branch2a_bn_s"
  input: "gpu_1/__m1_shared"
  output: "gpu_1/__m1_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/pool5"
  input: "gpu_1/res5_0_branch2a_w"
  input: "gpu_1/__m1_shared"
  output: "gpu_1/res5_0_branch2a_w_grad"
  output: "_gpu_1/pool5_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "_gpu_1/pool5_grad_autosplit_0"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_5_sum"
  input: "gpu_1/rois"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 0
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/rpn_bbox_pred"
  input: "gpu_1/rpn_bbox_targets"
  input: "gpu_1/rpn_bbox_inside_weights"
  input: "gpu_1/rpn_bbox_outside_weights"
  input: "gpu_1/__m0_shared"
  output: "gpu_1/rpn_bbox_pred_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/rpn_cls_logits"
  input: "gpu_1/rpn_labels_int32"
  input: "gpu_1/loss_rpn_cls_grad"
  output: "gpu_1/rpn_cls_logits_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/conv_rpn"
  input: "gpu_1/rpn_bbox_pred_w"
  input: "gpu_1/rpn_bbox_pred_grad"
  output: "gpu_1/rpn_bbox_pred_w_grad"
  output: "gpu_1/rpn_bbox_pred_b_grad"
  output: "gpu_1/__m0_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/conv_rpn"
  input: "gpu_1/rpn_cls_logits_w"
  input: "gpu_1/rpn_cls_logits_grad"
  output: "gpu_1/rpn_cls_logits_w_grad"
  output: "gpu_1/rpn_cls_logits_b_grad"
  output: "_gpu_1/conv_rpn_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m0_shared"
  input: "_gpu_1/conv_rpn_grad_autosplit_0"
  output: "gpu_1/__m0_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/conv_rpn"
  input: "gpu_1/__m0_shared"
  output: "gpu_1/__m0_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_sum"
  input: "gpu_1/conv_rpn_w"
  input: "gpu_1/__m0_shared"
  output: "gpu_1/conv_rpn_w_grad"
  output: "gpu_1/conv_rpn_b_grad"
  output: "_gpu_1/res4_5_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m3_shared"
  input: "_gpu_1/res4_5_sum_grad_autosplit_0"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_5_sum"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2c_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2b"
  input: "gpu_1/res4_5_branch2c_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res4_5_branch2c_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2b"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2b_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2a"
  input: "gpu_1/res4_5_branch2b_w"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/res4_5_branch2b_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2a"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_5_branch2a_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2c_bn"
  input: "gpu_1/res4_5_branch2a_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res4_5_branch2a_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m5_shared"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_4_branch2c_bn"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2c_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2b"
  input: "gpu_1/res4_4_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_4_branch2c_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2b"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2b_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2a"
  input: "gpu_1/res4_4_branch2b_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res4_4_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_4_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2c_bn"
  input: "gpu_1/res4_4_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_4_branch2a_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_3_branch2c_bn"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2c_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2b"
  input: "gpu_1/res4_3_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_3_branch2c_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2b"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2b_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2a"
  input: "gpu_1/res4_3_branch2b_w"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/res4_3_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_3_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2c_bn"
  input: "gpu_1/res4_3_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_3_branch2a_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m5_shared"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_2_branch2c_bn"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2c_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2b"
  input: "gpu_1/res4_2_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_2_branch2c_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2b"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2b_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2a"
  input: "gpu_1/res4_2_branch2b_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res4_2_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_2_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2c_bn"
  input: "gpu_1/res4_2_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_2_branch2a_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_1_branch2c_bn"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2c_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2b"
  input: "gpu_1/res4_1_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_1_branch2c_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2b"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2b_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2a"
  input: "gpu_1/res4_1_branch2b_w"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/res4_1_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_1_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2c_bn"
  input: "gpu_1/res4_1_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_1_branch2a_w_grad"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m5_shared"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res4_0_branch2c_bn"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch1_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_sum"
  input: "gpu_1/res4_0_branch1_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res4_0_branch1_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2c_bn_s"
  input: "gpu_1/__m5_shared"
  output: "gpu_1/__m7_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2b"
  input: "gpu_1/res4_0_branch2c_w"
  input: "gpu_1/__m7_shared"
  output: "gpu_1/res4_0_branch2c_w_grad"
  output: "gpu_1/res4_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2b"
  input: "gpu_1/res4_0_branch2b_grad"
  output: "gpu_1/res4_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2b_bn_s"
  input: "gpu_1/res4_0_branch2b_grad"
  output: "gpu_1/res4_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2a"
  input: "gpu_1/res4_0_branch2b_w"
  input: "gpu_1/res4_0_branch2b_grad"
  output: "gpu_1/res4_0_branch2b_w_grad"
  output: "gpu_1/__m7_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2a"
  input: "gpu_1/__m7_shared"
  output: "gpu_1/__m7_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res4_0_branch2a_bn_s"
  input: "gpu_1/__m7_shared"
  output: "gpu_1/__m7_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_sum"
  input: "gpu_1/res4_0_branch2a_w"
  input: "gpu_1/__m7_shared"
  output: "gpu_1/res4_0_branch2a_w_grad"
  output: "_gpu_1/res3_3_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "_gpu_1/res3_3_sum_grad_autosplit_0"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res3_3_sum"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2c_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2b"
  input: "gpu_1/res3_3_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_3_branch2c_w_grad"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2b"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2b_bn_s"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2a"
  input: "gpu_1/res3_3_branch2b_w"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/res3_3_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_3_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2c_bn"
  input: "gpu_1/res3_3_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_3_branch2a_w_grad"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m8_shared"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res3_2_branch2c_bn"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2c_bn_s"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2b"
  input: "gpu_1/res3_2_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_2_branch2c_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2b"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2b_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2a"
  input: "gpu_1/res3_2_branch2b_w"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/res3_2_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_2_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2c_bn"
  input: "gpu_1/res3_2_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_2_branch2a_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res3_1_branch2c_bn"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2c_bn_s"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2b"
  input: "gpu_1/res3_1_branch2c_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_1_branch2c_w_grad"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2b"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2b_bn_s"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2a"
  input: "gpu_1/res3_1_branch2b_w"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/res3_1_branch2b_w_grad"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2a"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_1_branch2a_bn_s"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2c_bn"
  input: "gpu_1/res3_1_branch2a_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_1_branch2a_w_grad"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m8_shared"
  input: "gpu_1/__m4_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_1/res3_0_branch2c_bn"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch1_bn_s"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res2_2_sum"
  input: "gpu_1/res3_0_branch1_w"
  input: "gpu_1/__m3_shared"
  output: "gpu_1/res3_0_branch1_w_grad"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2c_bn_s"
  input: "gpu_1/__m8_shared"
  output: "gpu_1/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2b"
  input: "gpu_1/res3_0_branch2c_w"
  input: "gpu_1/__m2_shared"
  output: "gpu_1/res3_0_branch2c_w_grad"
  output: "gpu_1/res3_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2b"
  input: "gpu_1/res3_0_branch2b_grad"
  output: "gpu_1/res3_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2b_bn_s"
  input: "gpu_1/res3_0_branch2b_grad"
  output: "gpu_1/res3_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2a"
  input: "gpu_1/res3_0_branch2b_w"
  input: "gpu_1/res3_0_branch2b_grad"
  output: "gpu_1/res3_0_branch2b_w_grad"
  output: "gpu_1/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2a"
  input: "gpu_1/__m2_shared"
  output: "gpu_1/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/res3_0_branch2a_bn_s"
  input: "gpu_1/__m2_shared"
  output: "gpu_1/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  is_gradient_op: true
}
op {
  input: "gpu_1/res2_2_sum"
  input: "gpu_1/res3_0_branch2a_w"
  input: "gpu_1/__m2_shared"
  output: "gpu_1/res3_0_branch2a_w_grad"
  output: "_gpu_1/res2_2_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_1/__m4_shared"
  input: "_gpu_1/res2_2_sum_grad_autosplit_0"
  output: "gpu_1/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/bbox_pred"
  input: "gpu_0/bbox_targets"
  input: "gpu_0/bbox_inside_weights"
  input: "gpu_0/bbox_outside_weights"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/cls_score"
  input: "gpu_0/labels_int32"
  input: "gpu_0/cls_prob"
  input: "gpu_0/loss_cls_grad"
  output: "gpu_0/cls_score_grad"
  name: ""
  type: "SoftmaxWithLossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_pool"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/bbox_pred_w_grad"
  output: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_pool"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/cls_score_grad"
  output: "gpu_0/cls_score_w_grad"
  output: "gpu_0/cls_score_b_grad"
  output: "_gpu_0/res5_pool_grad_autosplit_0"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m2_shared"
  input: "_gpu_0/res5_pool_grad_autosplit_0"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res5_2_sum"
  input: "gpu_0/res5_pool"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AveragePoolGradient"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_sum"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2c_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_2_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res5_2_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_2_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_2_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_1_branch2c_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2b_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res5_1_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_1_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_1_branch2a_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m5_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch1_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/pool5"
  input: "gpu_0/res5_0_branch1_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_0_branch1_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2c_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2c_w"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/res5_0_branch2c_w_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b_bn_s"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2b_w"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_w_grad"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a_bn_s"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/pool5"
  input: "gpu_0/res5_0_branch2a_w"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/res5_0_branch2a_w_grad"
  output: "_gpu_0/pool5_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "_gpu_0/pool5_grad_autosplit_0"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/rois"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 0
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred"
  input: "gpu_0/rpn_bbox_targets"
  input: "gpu_0/rpn_bbox_inside_weights"
  input: "gpu_0/rpn_bbox_outside_weights"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/rpn_bbox_pred_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits"
  input: "gpu_0/rpn_labels_int32"
  input: "gpu_0/loss_rpn_cls_grad"
  output: "gpu_0/rpn_cls_logits_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "scale"
    f: 0.5
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn"
  input: "gpu_0/rpn_bbox_pred_w"
  input: "gpu_0/rpn_bbox_pred_grad"
  output: "gpu_0/rpn_bbox_pred_w_grad"
  output: "gpu_0/rpn_bbox_pred_b_grad"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn"
  input: "gpu_0/rpn_cls_logits_w"
  input: "gpu_0/rpn_cls_logits_grad"
  output: "gpu_0/rpn_cls_logits_w_grad"
  output: "gpu_0/rpn_cls_logits_b_grad"
  output: "_gpu_0/conv_rpn_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m8_shared"
  input: "_gpu_0/conv_rpn_grad_autosplit_0"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/conv_rpn_w"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/conv_rpn_w_grad"
  output: "gpu_0/conv_rpn_b_grad"
  output: "_gpu_0/res4_5_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m2_shared"
  input: "_gpu_0/res4_5_sum_grad_autosplit_0"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2c_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2c_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_5_branch2c_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2b_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_5_branch2b_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_5_branch2a_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_5_branch2a_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m3_shared"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2c_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_4_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_4_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_4_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_4_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_3_branch2c_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2b_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_3_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_3_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_3_branch2a_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m3_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2c_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_2_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_2_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_2_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_2_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_1_branch2c_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2b_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_1_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_1_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_1_branch2a_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m3_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch1_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch1_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res4_0_branch1_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2c_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2c_w"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/res4_0_branch2c_w_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b_bn_s"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2b_w"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_w_grad"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a_bn_s"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch2a_w"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/res4_0_branch2a_w_grad"
  output: "_gpu_0/res3_3_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "_gpu_0/res3_3_sum_grad_autosplit_0"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_3_branch2c_w_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b_bn_s"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2b_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/res3_3_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_3_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_3_branch2a_w_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m6_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2c_bn_s"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_2_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res3_2_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_2_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_2_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_1_branch2c_w_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b_bn_s"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2b_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/res3_1_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_1_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_1_branch2a_w_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m6_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch1_bn_s"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch1_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res3_0_branch1_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2c_bn_s"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2c_w"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/res3_0_branch2c_w_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b_bn_s"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2b_w"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_w_grad"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a_bn_s"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch2a_w"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/res3_0_branch2a_w_grad"
  output: "_gpu_0/res2_2_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "_gpu_0/res2_2_sum_grad_autosplit_0"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  input: "gpu_1/res3_0_branch2a_w_grad"
  output: "gpu_0/res3_0_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  output: "gpu_1/res3_0_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  input: "gpu_1/res3_0_branch2b_w_grad"
  output: "gpu_0/res3_0_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  output: "gpu_1/res3_0_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  input: "gpu_1/res3_0_branch2c_w_grad"
  output: "gpu_0/res3_0_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  output: "gpu_1/res3_0_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  input: "gpu_1/res3_0_branch1_w_grad"
  output: "gpu_0/res3_0_branch1_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  output: "gpu_1/res3_0_branch1_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  input: "gpu_1/res3_1_branch2a_w_grad"
  output: "gpu_0/res3_1_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  output: "gpu_1/res3_1_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  input: "gpu_1/res3_1_branch2b_w_grad"
  output: "gpu_0/res3_1_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  output: "gpu_1/res3_1_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  input: "gpu_1/res3_1_branch2c_w_grad"
  output: "gpu_0/res3_1_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  output: "gpu_1/res3_1_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  input: "gpu_1/res3_2_branch2a_w_grad"
  output: "gpu_0/res3_2_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  output: "gpu_1/res3_2_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  input: "gpu_1/res3_2_branch2b_w_grad"
  output: "gpu_0/res3_2_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  output: "gpu_1/res3_2_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  input: "gpu_1/res3_2_branch2c_w_grad"
  output: "gpu_0/res3_2_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  output: "gpu_1/res3_2_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  input: "gpu_1/res3_3_branch2a_w_grad"
  output: "gpu_0/res3_3_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  output: "gpu_1/res3_3_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  input: "gpu_1/res3_3_branch2b_w_grad"
  output: "gpu_0/res3_3_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  output: "gpu_1/res3_3_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  input: "gpu_1/res3_3_branch2c_w_grad"
  output: "gpu_0/res3_3_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  output: "gpu_1/res3_3_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  input: "gpu_1/res4_0_branch2a_w_grad"
  output: "gpu_0/res4_0_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  output: "gpu_1/res4_0_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  input: "gpu_1/res4_0_branch2b_w_grad"
  output: "gpu_0/res4_0_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  output: "gpu_1/res4_0_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  input: "gpu_1/res4_0_branch2c_w_grad"
  output: "gpu_0/res4_0_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  output: "gpu_1/res4_0_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  input: "gpu_1/res4_0_branch1_w_grad"
  output: "gpu_0/res4_0_branch1_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  output: "gpu_1/res4_0_branch1_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  input: "gpu_1/res4_1_branch2a_w_grad"
  output: "gpu_0/res4_1_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  output: "gpu_1/res4_1_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  input: "gpu_1/res4_1_branch2b_w_grad"
  output: "gpu_0/res4_1_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  output: "gpu_1/res4_1_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  input: "gpu_1/res4_1_branch2c_w_grad"
  output: "gpu_0/res4_1_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  output: "gpu_1/res4_1_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  input: "gpu_1/res4_2_branch2a_w_grad"
  output: "gpu_0/res4_2_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  output: "gpu_1/res4_2_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  input: "gpu_1/res4_2_branch2b_w_grad"
  output: "gpu_0/res4_2_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  output: "gpu_1/res4_2_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  input: "gpu_1/res4_2_branch2c_w_grad"
  output: "gpu_0/res4_2_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  output: "gpu_1/res4_2_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  input: "gpu_1/res4_3_branch2a_w_grad"
  output: "gpu_0/res4_3_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  output: "gpu_1/res4_3_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  input: "gpu_1/res4_3_branch2b_w_grad"
  output: "gpu_0/res4_3_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  output: "gpu_1/res4_3_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  input: "gpu_1/res4_3_branch2c_w_grad"
  output: "gpu_0/res4_3_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  output: "gpu_1/res4_3_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  input: "gpu_1/res4_4_branch2a_w_grad"
  output: "gpu_0/res4_4_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  output: "gpu_1/res4_4_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  input: "gpu_1/res4_4_branch2b_w_grad"
  output: "gpu_0/res4_4_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  output: "gpu_1/res4_4_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  input: "gpu_1/res4_4_branch2c_w_grad"
  output: "gpu_0/res4_4_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  output: "gpu_1/res4_4_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  input: "gpu_1/res4_5_branch2a_w_grad"
  output: "gpu_0/res4_5_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  output: "gpu_1/res4_5_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  input: "gpu_1/res4_5_branch2b_w_grad"
  output: "gpu_0/res4_5_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  output: "gpu_1/res4_5_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  input: "gpu_1/res4_5_branch2c_w_grad"
  output: "gpu_0/res4_5_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  output: "gpu_1/res4_5_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_w_grad"
  input: "gpu_1/conv_rpn_w_grad"
  output: "gpu_0/conv_rpn_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_w_grad"
  output: "gpu_1/conv_rpn_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_b_grad"
  input: "gpu_1/conv_rpn_b_grad"
  output: "gpu_0/conv_rpn_b_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_b_grad"
  output: "gpu_1/conv_rpn_b_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_w_grad"
  input: "gpu_1/rpn_cls_logits_w_grad"
  output: "gpu_0/rpn_cls_logits_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_w_grad"
  output: "gpu_1/rpn_cls_logits_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_b_grad"
  input: "gpu_1/rpn_cls_logits_b_grad"
  output: "gpu_0/rpn_cls_logits_b_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_b_grad"
  output: "gpu_1/rpn_cls_logits_b_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_w_grad"
  input: "gpu_1/rpn_bbox_pred_w_grad"
  output: "gpu_0/rpn_bbox_pred_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_w_grad"
  output: "gpu_1/rpn_bbox_pred_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_b_grad"
  input: "gpu_1/rpn_bbox_pred_b_grad"
  output: "gpu_0/rpn_bbox_pred_b_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_b_grad"
  output: "gpu_1/rpn_bbox_pred_b_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  input: "gpu_1/res5_0_branch2a_w_grad"
  output: "gpu_0/res5_0_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  output: "gpu_1/res5_0_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  input: "gpu_1/res5_0_branch2b_w_grad"
  output: "gpu_0/res5_0_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  output: "gpu_1/res5_0_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  input: "gpu_1/res5_0_branch2c_w_grad"
  output: "gpu_0/res5_0_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  output: "gpu_1/res5_0_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  input: "gpu_1/res5_0_branch1_w_grad"
  output: "gpu_0/res5_0_branch1_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  output: "gpu_1/res5_0_branch1_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  input: "gpu_1/res5_1_branch2a_w_grad"
  output: "gpu_0/res5_1_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  output: "gpu_1/res5_1_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  input: "gpu_1/res5_1_branch2b_w_grad"
  output: "gpu_0/res5_1_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  output: "gpu_1/res5_1_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  input: "gpu_1/res5_1_branch2c_w_grad"
  output: "gpu_0/res5_1_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  output: "gpu_1/res5_1_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  input: "gpu_1/res5_2_branch2a_w_grad"
  output: "gpu_0/res5_2_branch2a_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  output: "gpu_1/res5_2_branch2a_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  input: "gpu_1/res5_2_branch2b_w_grad"
  output: "gpu_0/res5_2_branch2b_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  output: "gpu_1/res5_2_branch2b_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  input: "gpu_1/res5_2_branch2c_w_grad"
  output: "gpu_0/res5_2_branch2c_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  output: "gpu_1/res5_2_branch2c_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  input: "gpu_1/cls_score_w_grad"
  output: "gpu_0/cls_score_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  output: "gpu_1/cls_score_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  input: "gpu_1/cls_score_b_grad"
  output: "gpu_0/cls_score_b_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  output: "gpu_1/cls_score_b_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  input: "gpu_1/bbox_pred_w_grad"
  output: "gpu_0/bbox_pred_w_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  output: "gpu_1/bbox_pred_w_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  input: "gpu_1/bbox_pred_b_grad"
  output: "gpu_0/bbox_pred_b_grad"
  name: ""
  type: "Add"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 74, in Allreduce2\n    a_reduced = net.Add([a, b], a + reduced_affix, device_option=OnGPU(gpu_a))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  output: "gpu_1/bbox_pred_b_grad"
  name: ""
  type: "Copy"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 44, in build_data_parallel_model\n    _add_allreduce_graph(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 87, in _add_allreduce_graph\n    muji.Allreduce(model.net, gradients, reduced_affix=\'\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 58, in Allreduce\n    return Allreduce2(net, blobs, reduced_affix, gpu_indices)\n  File \"/home/pding/download/caffe2/build/caffe2/python/muji.py\", line 78, in Allreduce2\n    device_option=OnGPU(gpu_b)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 251, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 227, in _CreateAndAddToNet\n    return self._from_net.__getattr__(op_type)(inputs, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  input: "gpu_0/res3_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a_w_grad"
  output: "gpu_0/res3_0_branch2a_w_momentum"
  output: "gpu_0/res3_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  input: "gpu_0/res3_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b_w_grad"
  output: "gpu_0/res3_0_branch2b_w_momentum"
  output: "gpu_0/res3_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  input: "gpu_0/res3_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c_w_grad"
  output: "gpu_0/res3_0_branch2c_w_momentum"
  output: "gpu_0/res3_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  input: "gpu_0/res3_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1_w_grad"
  output: "gpu_0/res3_0_branch1_w_momentum"
  output: "gpu_0/res3_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  input: "gpu_0/res3_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a_w_grad"
  output: "gpu_0/res3_1_branch2a_w_momentum"
  output: "gpu_0/res3_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  input: "gpu_0/res3_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b_w_grad"
  output: "gpu_0/res3_1_branch2b_w_momentum"
  output: "gpu_0/res3_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  input: "gpu_0/res3_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c_w_grad"
  output: "gpu_0/res3_1_branch2c_w_momentum"
  output: "gpu_0/res3_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  input: "gpu_0/res3_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a_w_grad"
  output: "gpu_0/res3_2_branch2a_w_momentum"
  output: "gpu_0/res3_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  input: "gpu_0/res3_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b_w_grad"
  output: "gpu_0/res3_2_branch2b_w_momentum"
  output: "gpu_0/res3_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  input: "gpu_0/res3_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c_w_grad"
  output: "gpu_0/res3_2_branch2c_w_momentum"
  output: "gpu_0/res3_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  input: "gpu_0/res3_3_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a_w_grad"
  output: "gpu_0/res3_3_branch2a_w_momentum"
  output: "gpu_0/res3_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  input: "gpu_0/res3_3_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b_w_grad"
  output: "gpu_0/res3_3_branch2b_w_momentum"
  output: "gpu_0/res3_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  input: "gpu_0/res3_3_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c_w_grad"
  output: "gpu_0/res3_3_branch2c_w_momentum"
  output: "gpu_0/res3_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  input: "gpu_0/res4_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a_w_grad"
  output: "gpu_0/res4_0_branch2a_w_momentum"
  output: "gpu_0/res4_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  input: "gpu_0/res4_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b_w_grad"
  output: "gpu_0/res4_0_branch2b_w_momentum"
  output: "gpu_0/res4_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  input: "gpu_0/res4_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c_w_grad"
  output: "gpu_0/res4_0_branch2c_w_momentum"
  output: "gpu_0/res4_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  input: "gpu_0/res4_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1_w_grad"
  output: "gpu_0/res4_0_branch1_w_momentum"
  output: "gpu_0/res4_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  input: "gpu_0/res4_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a_w_grad"
  output: "gpu_0/res4_1_branch2a_w_momentum"
  output: "gpu_0/res4_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  input: "gpu_0/res4_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b_w_grad"
  output: "gpu_0/res4_1_branch2b_w_momentum"
  output: "gpu_0/res4_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  input: "gpu_0/res4_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c_w_grad"
  output: "gpu_0/res4_1_branch2c_w_momentum"
  output: "gpu_0/res4_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  input: "gpu_0/res4_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a_w_grad"
  output: "gpu_0/res4_2_branch2a_w_momentum"
  output: "gpu_0/res4_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  input: "gpu_0/res4_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b_w_grad"
  output: "gpu_0/res4_2_branch2b_w_momentum"
  output: "gpu_0/res4_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  input: "gpu_0/res4_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c_w_grad"
  output: "gpu_0/res4_2_branch2c_w_momentum"
  output: "gpu_0/res4_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  input: "gpu_0/res4_3_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a_w_grad"
  output: "gpu_0/res4_3_branch2a_w_momentum"
  output: "gpu_0/res4_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  input: "gpu_0/res4_3_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b_w_grad"
  output: "gpu_0/res4_3_branch2b_w_momentum"
  output: "gpu_0/res4_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  input: "gpu_0/res4_3_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c_w_grad"
  output: "gpu_0/res4_3_branch2c_w_momentum"
  output: "gpu_0/res4_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  input: "gpu_0/res4_4_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a_w_grad"
  output: "gpu_0/res4_4_branch2a_w_momentum"
  output: "gpu_0/res4_4_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  input: "gpu_0/res4_4_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b_w_grad"
  output: "gpu_0/res4_4_branch2b_w_momentum"
  output: "gpu_0/res4_4_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  input: "gpu_0/res4_4_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c_w_grad"
  output: "gpu_0/res4_4_branch2c_w_momentum"
  output: "gpu_0/res4_4_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  input: "gpu_0/res4_5_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a_w_grad"
  output: "gpu_0/res4_5_branch2a_w_momentum"
  output: "gpu_0/res4_5_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  input: "gpu_0/res4_5_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b_w_grad"
  output: "gpu_0/res4_5_branch2b_w_momentum"
  output: "gpu_0/res4_5_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  input: "gpu_0/res4_5_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c_w_grad"
  output: "gpu_0/res4_5_branch2c_w_momentum"
  output: "gpu_0/res4_5_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/conv_rpn_w"
  input: "gpu_0/wd"
  output: "gpu_0/conv_rpn_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_w_grad"
  input: "gpu_0/conv_rpn_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv_rpn_w"
  output: "gpu_0/conv_rpn_w_grad"
  output: "gpu_0/conv_rpn_w_momentum"
  output: "gpu_0/conv_rpn_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_b_grad"
  output: "gpu_0/conv_rpn_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_b_grad"
  input: "gpu_0/conv_rpn_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv_rpn_b"
  output: "gpu_0/conv_rpn_b_grad"
  output: "gpu_0/conv_rpn_b_momentum"
  output: "gpu_0/conv_rpn_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/rpn_cls_logits_w"
  input: "gpu_0/wd"
  output: "gpu_0/rpn_cls_logits_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_w_grad"
  input: "gpu_0/rpn_cls_logits_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_cls_logits_w"
  output: "gpu_0/rpn_cls_logits_w_grad"
  output: "gpu_0/rpn_cls_logits_w_momentum"
  output: "gpu_0/rpn_cls_logits_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_b_grad"
  output: "gpu_0/rpn_cls_logits_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_b_grad"
  input: "gpu_0/rpn_cls_logits_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_cls_logits_b"
  output: "gpu_0/rpn_cls_logits_b_grad"
  output: "gpu_0/rpn_cls_logits_b_momentum"
  output: "gpu_0/rpn_cls_logits_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/rpn_bbox_pred_w"
  input: "gpu_0/wd"
  output: "gpu_0/rpn_bbox_pred_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_w_grad"
  input: "gpu_0/rpn_bbox_pred_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_bbox_pred_w"
  output: "gpu_0/rpn_bbox_pred_w_grad"
  output: "gpu_0/rpn_bbox_pred_w_momentum"
  output: "gpu_0/rpn_bbox_pred_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_b_grad"
  output: "gpu_0/rpn_bbox_pred_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_b_grad"
  input: "gpu_0/rpn_bbox_pred_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_bbox_pred_b"
  output: "gpu_0/rpn_bbox_pred_b_grad"
  output: "gpu_0/rpn_bbox_pred_b_momentum"
  output: "gpu_0/rpn_bbox_pred_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  input: "gpu_0/res5_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a_w_grad"
  output: "gpu_0/res5_0_branch2a_w_momentum"
  output: "gpu_0/res5_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  input: "gpu_0/res5_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b_w_grad"
  output: "gpu_0/res5_0_branch2b_w_momentum"
  output: "gpu_0/res5_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  input: "gpu_0/res5_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c_w_grad"
  output: "gpu_0/res5_0_branch2c_w_momentum"
  output: "gpu_0/res5_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  input: "gpu_0/res5_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1_w_grad"
  output: "gpu_0/res5_0_branch1_w_momentum"
  output: "gpu_0/res5_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  input: "gpu_0/res5_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a_w_grad"
  output: "gpu_0/res5_1_branch2a_w_momentum"
  output: "gpu_0/res5_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  input: "gpu_0/res5_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b_w_grad"
  output: "gpu_0/res5_1_branch2b_w_momentum"
  output: "gpu_0/res5_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  input: "gpu_0/res5_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c_w_grad"
  output: "gpu_0/res5_1_branch2c_w_momentum"
  output: "gpu_0/res5_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  input: "gpu_0/res5_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a_w_grad"
  output: "gpu_0/res5_2_branch2a_w_momentum"
  output: "gpu_0/res5_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  input: "gpu_0/res5_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b_w_grad"
  output: "gpu_0/res5_2_branch2b_w_momentum"
  output: "gpu_0/res5_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  input: "gpu_0/res5_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c_w_grad"
  output: "gpu_0/res5_2_branch2c_w_momentum"
  output: "gpu_0/res5_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/wd"
  output: "gpu_0/cls_score_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  input: "gpu_0/cls_score_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/cls_score_w"
  output: "gpu_0/cls_score_w_grad"
  output: "gpu_0/cls_score_w_momentum"
  output: "gpu_0/cls_score_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  output: "gpu_0/cls_score_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  input: "gpu_0/cls_score_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score_b_grad"
  output: "gpu_0/cls_score_b_momentum"
  output: "gpu_0/cls_score_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/wd"
  output: "gpu_0/bbox_pred_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  input: "gpu_0/bbox_pred_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/bbox_pred_w"
  output: "gpu_0/bbox_pred_w_grad"
  output: "gpu_0/bbox_pred_w_momentum"
  output: "gpu_0/bbox_pred_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/bbox_pred_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  input: "gpu_0/bbox_pred_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/bbox_pred_b_momentum"
  output: "gpu_0/bbox_pred_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_0_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2a_w_grad"
  input: "gpu_1/res3_0_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_0_branch2a_w"
  output: "gpu_1/res3_0_branch2a_w_grad"
  output: "gpu_1/res3_0_branch2a_w_momentum"
  output: "gpu_1/res3_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_0_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2b_w_grad"
  input: "gpu_1/res3_0_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_0_branch2b_w"
  output: "gpu_1/res3_0_branch2b_w_grad"
  output: "gpu_1/res3_0_branch2b_w_momentum"
  output: "gpu_1/res3_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_0_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch2c_w_grad"
  input: "gpu_1/res3_0_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_0_branch2c_w"
  output: "gpu_1/res3_0_branch2c_w_grad"
  output: "gpu_1/res3_0_branch2c_w_momentum"
  output: "gpu_1/res3_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch1_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_0_branch1_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_0_branch1_w_grad"
  input: "gpu_1/res3_0_branch1_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_0_branch1_w"
  output: "gpu_1/res3_0_branch1_w_grad"
  output: "gpu_1/res3_0_branch1_w_momentum"
  output: "gpu_1/res3_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_1_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2a_w_grad"
  input: "gpu_1/res3_1_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_1_branch2a_w"
  output: "gpu_1/res3_1_branch2a_w_grad"
  output: "gpu_1/res3_1_branch2a_w_momentum"
  output: "gpu_1/res3_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_1_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2b_w_grad"
  input: "gpu_1/res3_1_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_1_branch2b_w"
  output: "gpu_1/res3_1_branch2b_w_grad"
  output: "gpu_1/res3_1_branch2b_w_momentum"
  output: "gpu_1/res3_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_1_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_1_branch2c_w_grad"
  input: "gpu_1/res3_1_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_1_branch2c_w"
  output: "gpu_1/res3_1_branch2c_w_grad"
  output: "gpu_1/res3_1_branch2c_w_momentum"
  output: "gpu_1/res3_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_2_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2a_w_grad"
  input: "gpu_1/res3_2_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_2_branch2a_w"
  output: "gpu_1/res3_2_branch2a_w_grad"
  output: "gpu_1/res3_2_branch2a_w_momentum"
  output: "gpu_1/res3_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_2_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2b_w_grad"
  input: "gpu_1/res3_2_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_2_branch2b_w"
  output: "gpu_1/res3_2_branch2b_w_grad"
  output: "gpu_1/res3_2_branch2b_w_momentum"
  output: "gpu_1/res3_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_2_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_2_branch2c_w_grad"
  input: "gpu_1/res3_2_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_2_branch2c_w"
  output: "gpu_1/res3_2_branch2c_w_grad"
  output: "gpu_1/res3_2_branch2c_w_momentum"
  output: "gpu_1/res3_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_3_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2a_w_grad"
  input: "gpu_1/res3_3_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_3_branch2a_w"
  output: "gpu_1/res3_3_branch2a_w_grad"
  output: "gpu_1/res3_3_branch2a_w_momentum"
  output: "gpu_1/res3_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_3_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2b_w_grad"
  input: "gpu_1/res3_3_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_3_branch2b_w"
  output: "gpu_1/res3_3_branch2b_w_grad"
  output: "gpu_1/res3_3_branch2b_w_momentum"
  output: "gpu_1/res3_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res3_3_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res3_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res3_3_branch2c_w_grad"
  input: "gpu_1/res3_3_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res3_3_branch2c_w"
  output: "gpu_1/res3_3_branch2c_w_grad"
  output: "gpu_1/res3_3_branch2c_w_momentum"
  output: "gpu_1/res3_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_0_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2a_w_grad"
  input: "gpu_1/res4_0_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_0_branch2a_w"
  output: "gpu_1/res4_0_branch2a_w_grad"
  output: "gpu_1/res4_0_branch2a_w_momentum"
  output: "gpu_1/res4_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_0_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2b_w_grad"
  input: "gpu_1/res4_0_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_0_branch2b_w"
  output: "gpu_1/res4_0_branch2b_w_grad"
  output: "gpu_1/res4_0_branch2b_w_momentum"
  output: "gpu_1/res4_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_0_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch2c_w_grad"
  input: "gpu_1/res4_0_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_0_branch2c_w"
  output: "gpu_1/res4_0_branch2c_w_grad"
  output: "gpu_1/res4_0_branch2c_w_momentum"
  output: "gpu_1/res4_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch1_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_0_branch1_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_0_branch1_w_grad"
  input: "gpu_1/res4_0_branch1_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_0_branch1_w"
  output: "gpu_1/res4_0_branch1_w_grad"
  output: "gpu_1/res4_0_branch1_w_momentum"
  output: "gpu_1/res4_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_1_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2a_w_grad"
  input: "gpu_1/res4_1_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_1_branch2a_w"
  output: "gpu_1/res4_1_branch2a_w_grad"
  output: "gpu_1/res4_1_branch2a_w_momentum"
  output: "gpu_1/res4_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_1_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2b_w_grad"
  input: "gpu_1/res4_1_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_1_branch2b_w"
  output: "gpu_1/res4_1_branch2b_w_grad"
  output: "gpu_1/res4_1_branch2b_w_momentum"
  output: "gpu_1/res4_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_1_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_1_branch2c_w_grad"
  input: "gpu_1/res4_1_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_1_branch2c_w"
  output: "gpu_1/res4_1_branch2c_w_grad"
  output: "gpu_1/res4_1_branch2c_w_momentum"
  output: "gpu_1/res4_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_2_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2a_w_grad"
  input: "gpu_1/res4_2_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_2_branch2a_w"
  output: "gpu_1/res4_2_branch2a_w_grad"
  output: "gpu_1/res4_2_branch2a_w_momentum"
  output: "gpu_1/res4_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_2_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2b_w_grad"
  input: "gpu_1/res4_2_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_2_branch2b_w"
  output: "gpu_1/res4_2_branch2b_w_grad"
  output: "gpu_1/res4_2_branch2b_w_momentum"
  output: "gpu_1/res4_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_2_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_2_branch2c_w_grad"
  input: "gpu_1/res4_2_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_2_branch2c_w"
  output: "gpu_1/res4_2_branch2c_w_grad"
  output: "gpu_1/res4_2_branch2c_w_momentum"
  output: "gpu_1/res4_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_3_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2a_w_grad"
  input: "gpu_1/res4_3_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_3_branch2a_w"
  output: "gpu_1/res4_3_branch2a_w_grad"
  output: "gpu_1/res4_3_branch2a_w_momentum"
  output: "gpu_1/res4_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_3_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2b_w_grad"
  input: "gpu_1/res4_3_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_3_branch2b_w"
  output: "gpu_1/res4_3_branch2b_w_grad"
  output: "gpu_1/res4_3_branch2b_w_momentum"
  output: "gpu_1/res4_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_3_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_3_branch2c_w_grad"
  input: "gpu_1/res4_3_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_3_branch2c_w"
  output: "gpu_1/res4_3_branch2c_w_grad"
  output: "gpu_1/res4_3_branch2c_w_momentum"
  output: "gpu_1/res4_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_4_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_4_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2a_w_grad"
  input: "gpu_1/res4_4_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_4_branch2a_w"
  output: "gpu_1/res4_4_branch2a_w_grad"
  output: "gpu_1/res4_4_branch2a_w_momentum"
  output: "gpu_1/res4_4_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_4_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_4_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2b_w_grad"
  input: "gpu_1/res4_4_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_4_branch2b_w"
  output: "gpu_1/res4_4_branch2b_w_grad"
  output: "gpu_1/res4_4_branch2b_w_momentum"
  output: "gpu_1/res4_4_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_4_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_4_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_4_branch2c_w_grad"
  input: "gpu_1/res4_4_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_4_branch2c_w"
  output: "gpu_1/res4_4_branch2c_w_grad"
  output: "gpu_1/res4_4_branch2c_w_momentum"
  output: "gpu_1/res4_4_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_5_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_5_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2a_w_grad"
  input: "gpu_1/res4_5_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_5_branch2a_w"
  output: "gpu_1/res4_5_branch2a_w_grad"
  output: "gpu_1/res4_5_branch2a_w_momentum"
  output: "gpu_1/res4_5_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_5_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_5_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2b_w_grad"
  input: "gpu_1/res4_5_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_5_branch2b_w"
  output: "gpu_1/res4_5_branch2b_w_grad"
  output: "gpu_1/res4_5_branch2b_w_momentum"
  output: "gpu_1/res4_5_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res4_5_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res4_5_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res4_5_branch2c_w_grad"
  input: "gpu_1/res4_5_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res4_5_branch2c_w"
  output: "gpu_1/res4_5_branch2c_w_grad"
  output: "gpu_1/res4_5_branch2c_w_momentum"
  output: "gpu_1/res4_5_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/conv_rpn_w"
  input: "gpu_1/wd"
  output: "gpu_1/conv_rpn_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_w_grad"
  input: "gpu_1/conv_rpn_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/conv_rpn_w"
  output: "gpu_1/conv_rpn_w_grad"
  output: "gpu_1/conv_rpn_w_momentum"
  output: "gpu_1/conv_rpn_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_b_grad"
  output: "gpu_1/conv_rpn_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/conv_rpn_b_grad"
  input: "gpu_1/conv_rpn_b_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/conv_rpn_b"
  output: "gpu_1/conv_rpn_b_grad"
  output: "gpu_1/conv_rpn_b_momentum"
  output: "gpu_1/conv_rpn_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/rpn_cls_logits_w"
  input: "gpu_1/wd"
  output: "gpu_1/rpn_cls_logits_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_w_grad"
  input: "gpu_1/rpn_cls_logits_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/rpn_cls_logits_w"
  output: "gpu_1/rpn_cls_logits_w_grad"
  output: "gpu_1/rpn_cls_logits_w_momentum"
  output: "gpu_1/rpn_cls_logits_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_b_grad"
  output: "gpu_1/rpn_cls_logits_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_cls_logits_b_grad"
  input: "gpu_1/rpn_cls_logits_b_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/rpn_cls_logits_b"
  output: "gpu_1/rpn_cls_logits_b_grad"
  output: "gpu_1/rpn_cls_logits_b_momentum"
  output: "gpu_1/rpn_cls_logits_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/rpn_bbox_pred_w"
  input: "gpu_1/wd"
  output: "gpu_1/rpn_bbox_pred_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_w_grad"
  input: "gpu_1/rpn_bbox_pred_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/rpn_bbox_pred_w"
  output: "gpu_1/rpn_bbox_pred_w_grad"
  output: "gpu_1/rpn_bbox_pred_w_momentum"
  output: "gpu_1/rpn_bbox_pred_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_b_grad"
  output: "gpu_1/rpn_bbox_pred_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/rpn_bbox_pred_b_grad"
  input: "gpu_1/rpn_bbox_pred_b_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/rpn_bbox_pred_b"
  output: "gpu_1/rpn_bbox_pred_b_grad"
  output: "gpu_1/rpn_bbox_pred_b_momentum"
  output: "gpu_1/rpn_bbox_pred_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_0_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2a_w_grad"
  input: "gpu_1/res5_0_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_0_branch2a_w"
  output: "gpu_1/res5_0_branch2a_w_grad"
  output: "gpu_1/res5_0_branch2a_w_momentum"
  output: "gpu_1/res5_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_0_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2b_w_grad"
  input: "gpu_1/res5_0_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_0_branch2b_w"
  output: "gpu_1/res5_0_branch2b_w_grad"
  output: "gpu_1/res5_0_branch2b_w_momentum"
  output: "gpu_1/res5_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_0_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch2c_w_grad"
  input: "gpu_1/res5_0_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_0_branch2c_w"
  output: "gpu_1/res5_0_branch2c_w_grad"
  output: "gpu_1/res5_0_branch2c_w_momentum"
  output: "gpu_1/res5_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch1_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_0_branch1_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_0_branch1_w_grad"
  input: "gpu_1/res5_0_branch1_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_0_branch1_w"
  output: "gpu_1/res5_0_branch1_w_grad"
  output: "gpu_1/res5_0_branch1_w_momentum"
  output: "gpu_1/res5_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_1_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2a_w_grad"
  input: "gpu_1/res5_1_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_1_branch2a_w"
  output: "gpu_1/res5_1_branch2a_w_grad"
  output: "gpu_1/res5_1_branch2a_w_momentum"
  output: "gpu_1/res5_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_1_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2b_w_grad"
  input: "gpu_1/res5_1_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_1_branch2b_w"
  output: "gpu_1/res5_1_branch2b_w_grad"
  output: "gpu_1/res5_1_branch2b_w_momentum"
  output: "gpu_1/res5_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_1_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_1_branch2c_w_grad"
  input: "gpu_1/res5_1_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_1_branch2c_w"
  output: "gpu_1/res5_1_branch2c_w_grad"
  output: "gpu_1/res5_1_branch2c_w_momentum"
  output: "gpu_1/res5_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_2_branch2a_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2a_w_grad"
  input: "gpu_1/res5_2_branch2a_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_2_branch2a_w"
  output: "gpu_1/res5_2_branch2a_w_grad"
  output: "gpu_1/res5_2_branch2a_w_momentum"
  output: "gpu_1/res5_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_2_branch2b_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2b_w_grad"
  input: "gpu_1/res5_2_branch2b_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_2_branch2b_w"
  output: "gpu_1/res5_2_branch2b_w_grad"
  output: "gpu_1/res5_2_branch2b_w_momentum"
  output: "gpu_1/res5_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2c_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/res5_2_branch2c_w"
  input: "gpu_1/wd"
  output: "gpu_1/res5_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/res5_2_branch2c_w_grad"
  input: "gpu_1/res5_2_branch2c_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/res5_2_branch2c_w"
  output: "gpu_1/res5_2_branch2c_w_grad"
  output: "gpu_1/res5_2_branch2c_w_momentum"
  output: "gpu_1/res5_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/cls_score_w"
  input: "gpu_1/wd"
  output: "gpu_1/cls_score_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_w_grad"
  input: "gpu_1/cls_score_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/cls_score_w"
  output: "gpu_1/cls_score_w_grad"
  output: "gpu_1/cls_score_w_momentum"
  output: "gpu_1/cls_score_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_b_grad"
  output: "gpu_1/cls_score_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/cls_score_b_grad"
  input: "gpu_1/cls_score_b_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/cls_score_b"
  output: "gpu_1/cls_score_b_grad"
  output: "gpu_1/cls_score_b_momentum"
  output: "gpu_1/cls_score_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_w_grad"
  input: "gpu_1/one"
  input: "gpu_1/bbox_pred_w"
  input: "gpu_1/wd"
  output: "gpu_1/bbox_pred_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 124, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_w_grad"
  input: "gpu_1/bbox_pred_w_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/bbox_pred_w"
  output: "gpu_1/bbox_pred_w_grad"
  output: "gpu_1/bbox_pred_w_momentum"
  output: "gpu_1/bbox_pred_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_b_grad"
  output: "gpu_1/bbox_pred_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 118, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_1/bbox_pred_b_grad"
  input: "gpu_1/bbox_pred_b_momentum"
  input: "gpu_1/lr"
  input: "gpu_1/bbox_pred_b"
  output: "gpu_1/bbox_pred_b_grad"
  output: "gpu_1/bbox_pred_b_momentum"
  output: "gpu_1/bbox_pred_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 1
  }
  debug_info: "  File \"tools/train_net.py\", line 128, in <module>\n    main()\n  File \"tools/train_net.py\", line 110, in main\n    checkpoints = utils.train.train_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"/home/pding/download/MyDetectron/lib/utils/train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 135, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 99, in generalized_rcnn\n    add_roi_clsn_head_func=get_func(cfg.CLSN.ROI_CLSN_HEAD)\n  File \"/home/pding/download/MyDetectron/lib/modeling/model_builder.py\", line 275, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/MyDetectron/lib/modeling/optimizer.py\", line 129, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
type: "dag"
num_workers: 8
external_input: "gpu_0/data"
external_input: "gpu_0/conv1_w"
external_input: "gpu_0/res_conv1_bn_s"
external_input: "gpu_0/res_conv1_bn_b"
external_input: "gpu_0/res2_0_branch2a_w"
external_input: "gpu_0/res2_0_branch2a_bn_s"
external_input: "gpu_0/res2_0_branch2a_bn_b"
external_input: "gpu_0/res2_0_branch2b_w"
external_input: "gpu_0/res2_0_branch2b_bn_s"
external_input: "gpu_0/res2_0_branch2b_bn_b"
external_input: "gpu_0/res2_0_branch2c_w"
external_input: "gpu_0/res2_0_branch2c_bn_s"
external_input: "gpu_0/res2_0_branch2c_bn_b"
external_input: "gpu_0/res2_0_branch1_w"
external_input: "gpu_0/res2_0_branch1_bn_s"
external_input: "gpu_0/res2_0_branch1_bn_b"
external_input: "gpu_0/res2_1_branch2a_w"
external_input: "gpu_0/res2_1_branch2a_bn_s"
external_input: "gpu_0/res2_1_branch2a_bn_b"
external_input: "gpu_0/res2_1_branch2b_w"
external_input: "gpu_0/res2_1_branch2b_bn_s"
external_input: "gpu_0/res2_1_branch2b_bn_b"
external_input: "gpu_0/res2_1_branch2c_w"
external_input: "gpu_0/res2_1_branch2c_bn_s"
external_input: "gpu_0/res2_1_branch2c_bn_b"
external_input: "gpu_0/res2_2_branch2a_w"
external_input: "gpu_0/res2_2_branch2a_bn_s"
external_input: "gpu_0/res2_2_branch2a_bn_b"
external_input: "gpu_0/res2_2_branch2b_w"
external_input: "gpu_0/res2_2_branch2b_bn_s"
external_input: "gpu_0/res2_2_branch2b_bn_b"
external_input: "gpu_0/res2_2_branch2c_w"
external_input: "gpu_0/res2_2_branch2c_bn_s"
external_input: "gpu_0/res2_2_branch2c_bn_b"
external_input: "gpu_0/res3_0_branch2a_w"
external_input: "gpu_0/res3_0_branch2a_bn_s"
external_input: "gpu_0/res3_0_branch2a_bn_b"
external_input: "gpu_0/res3_0_branch2b_w"
external_input: "gpu_0/res3_0_branch2b_bn_s"
external_input: "gpu_0/res3_0_branch2b_bn_b"
external_input: "gpu_0/res3_0_branch2c_w"
external_input: "gpu_0/res3_0_branch2c_bn_s"
external_input: "gpu_0/res3_0_branch2c_bn_b"
external_input: "gpu_0/res3_0_branch1_w"
external_input: "gpu_0/res3_0_branch1_bn_s"
external_input: "gpu_0/res3_0_branch1_bn_b"
external_input: "gpu_0/res3_1_branch2a_w"
external_input: "gpu_0/res3_1_branch2a_bn_s"
external_input: "gpu_0/res3_1_branch2a_bn_b"
external_input: "gpu_0/res3_1_branch2b_w"
external_input: "gpu_0/res3_1_branch2b_bn_s"
external_input: "gpu_0/res3_1_branch2b_bn_b"
external_input: "gpu_0/res3_1_branch2c_w"
external_input: "gpu_0/res3_1_branch2c_bn_s"
external_input: "gpu_0/res3_1_branch2c_bn_b"
external_input: "gpu_0/res3_2_branch2a_w"
external_input: "gpu_0/res3_2_branch2a_bn_s"
external_input: "gpu_0/res3_2_branch2a_bn_b"
external_input: "gpu_0/res3_2_branch2b_w"
external_input: "gpu_0/res3_2_branch2b_bn_s"
external_input: "gpu_0/res3_2_branch2b_bn_b"
external_input: "gpu_0/res3_2_branch2c_w"
external_input: "gpu_0/res3_2_branch2c_bn_s"
external_input: "gpu_0/res3_2_branch2c_bn_b"
external_input: "gpu_0/res3_3_branch2a_w"
external_input: "gpu_0/res3_3_branch2a_bn_s"
external_input: "gpu_0/res3_3_branch2a_bn_b"
external_input: "gpu_0/res3_3_branch2b_w"
external_input: "gpu_0/res3_3_branch2b_bn_s"
external_input: "gpu_0/res3_3_branch2b_bn_b"
external_input: "gpu_0/res3_3_branch2c_w"
external_input: "gpu_0/res3_3_branch2c_bn_s"
external_input: "gpu_0/res3_3_branch2c_bn_b"
external_input: "gpu_0/res4_0_branch2a_w"
external_input: "gpu_0/res4_0_branch2a_bn_s"
external_input: "gpu_0/res4_0_branch2a_bn_b"
external_input: "gpu_0/res4_0_branch2b_w"
external_input: "gpu_0/res4_0_branch2b_bn_s"
external_input: "gpu_0/res4_0_branch2b_bn_b"
external_input: "gpu_0/res4_0_branch2c_w"
external_input: "gpu_0/res4_0_branch2c_bn_s"
external_input: "gpu_0/res4_0_branch2c_bn_b"
external_input: "gpu_0/res4_0_branch1_w"
external_input: "gpu_0/res4_0_branch1_bn_s"
external_input: "gpu_0/res4_0_branch1_bn_b"
external_input: "gpu_0/res4_1_branch2a_w"
external_input: "gpu_0/res4_1_branch2a_bn_s"
external_input: "gpu_0/res4_1_branch2a_bn_b"
external_input: "gpu_0/res4_1_branch2b_w"
external_input: "gpu_0/res4_1_branch2b_bn_s"
external_input: "gpu_0/res4_1_branch2b_bn_b"
external_input: "gpu_0/res4_1_branch2c_w"
external_input: "gpu_0/res4_1_branch2c_bn_s"
external_input: "gpu_0/res4_1_branch2c_bn_b"
external_input: "gpu_0/res4_2_branch2a_w"
external_input: "gpu_0/res4_2_branch2a_bn_s"
external_input: "gpu_0/res4_2_branch2a_bn_b"
external_input: "gpu_0/res4_2_branch2b_w"
external_input: "gpu_0/res4_2_branch2b_bn_s"
external_input: "gpu_0/res4_2_branch2b_bn_b"
external_input: "gpu_0/res4_2_branch2c_w"
external_input: "gpu_0/res4_2_branch2c_bn_s"
external_input: "gpu_0/res4_2_branch2c_bn_b"
external_input: "gpu_0/res4_3_branch2a_w"
external_input: "gpu_0/res4_3_branch2a_bn_s"
external_input: "gpu_0/res4_3_branch2a_bn_b"
external_input: "gpu_0/res4_3_branch2b_w"
external_input: "gpu_0/res4_3_branch2b_bn_s"
external_input: "gpu_0/res4_3_branch2b_bn_b"
external_input: "gpu_0/res4_3_branch2c_w"
external_input: "gpu_0/res4_3_branch2c_bn_s"
external_input: "gpu_0/res4_3_branch2c_bn_b"
external_input: "gpu_0/res4_4_branch2a_w"
external_input: "gpu_0/res4_4_branch2a_bn_s"
external_input: "gpu_0/res4_4_branch2a_bn_b"
external_input: "gpu_0/res4_4_branch2b_w"
external_input: "gpu_0/res4_4_branch2b_bn_s"
external_input: "gpu_0/res4_4_branch2b_bn_b"
external_input: "gpu_0/res4_4_branch2c_w"
external_input: "gpu_0/res4_4_branch2c_bn_s"
external_input: "gpu_0/res4_4_branch2c_bn_b"
external_input: "gpu_0/res4_5_branch2a_w"
external_input: "gpu_0/res4_5_branch2a_bn_s"
external_input: "gpu_0/res4_5_branch2a_bn_b"
external_input: "gpu_0/res4_5_branch2b_w"
external_input: "gpu_0/res4_5_branch2b_bn_s"
external_input: "gpu_0/res4_5_branch2b_bn_b"
external_input: "gpu_0/res4_5_branch2c_w"
external_input: "gpu_0/res4_5_branch2c_bn_s"
external_input: "gpu_0/res4_5_branch2c_bn_b"
external_input: "gpu_0/conv_rpn_w"
external_input: "gpu_0/conv_rpn_b"
external_input: "gpu_0/rpn_cls_logits_w"
external_input: "gpu_0/rpn_cls_logits_b"
external_input: "gpu_0/rpn_bbox_pred_w"
external_input: "gpu_0/rpn_bbox_pred_b"
external_input: "gpu_0/im_info"
external_input: "gpu_0/roidb"
external_input: "gpu_0/rpn_labels_int32_wide"
external_input: "gpu_0/rpn_bbox_targets_wide"
external_input: "gpu_0/rpn_bbox_inside_weights_wide"
external_input: "gpu_0/rpn_bbox_outside_weights_wide"
external_input: "gpu_0/res5_0_branch2a_w"
external_input: "gpu_0/res5_0_branch2a_bn_s"
external_input: "gpu_0/res5_0_branch2a_bn_b"
external_input: "gpu_0/res5_0_branch2b_w"
external_input: "gpu_0/res5_0_branch2b_bn_s"
external_input: "gpu_0/res5_0_branch2b_bn_b"
external_input: "gpu_0/res5_0_branch2c_w"
external_input: "gpu_0/res5_0_branch2c_bn_s"
external_input: "gpu_0/res5_0_branch2c_bn_b"
external_input: "gpu_0/res5_0_branch1_w"
external_input: "gpu_0/res5_0_branch1_bn_s"
external_input: "gpu_0/res5_0_branch1_bn_b"
external_input: "gpu_0/res5_1_branch2a_w"
external_input: "gpu_0/res5_1_branch2a_bn_s"
external_input: "gpu_0/res5_1_branch2a_bn_b"
external_input: "gpu_0/res5_1_branch2b_w"
external_input: "gpu_0/res5_1_branch2b_bn_s"
external_input: "gpu_0/res5_1_branch2b_bn_b"
external_input: "gpu_0/res5_1_branch2c_w"
external_input: "gpu_0/res5_1_branch2c_bn_s"
external_input: "gpu_0/res5_1_branch2c_bn_b"
external_input: "gpu_0/res5_2_branch2a_w"
external_input: "gpu_0/res5_2_branch2a_bn_s"
external_input: "gpu_0/res5_2_branch2a_bn_b"
external_input: "gpu_0/res5_2_branch2b_w"
external_input: "gpu_0/res5_2_branch2b_bn_s"
external_input: "gpu_0/res5_2_branch2b_bn_b"
external_input: "gpu_0/res5_2_branch2c_w"
external_input: "gpu_0/res5_2_branch2c_bn_s"
external_input: "gpu_0/res5_2_branch2c_bn_b"
external_input: "gpu_0/cls_score_w"
external_input: "gpu_0/cls_score_b"
external_input: "gpu_0/bbox_pred_w"
external_input: "gpu_0/bbox_pred_b"
external_input: "gpu_1/data"
external_input: "gpu_1/conv1_w"
external_input: "gpu_1/res_conv1_bn_s"
external_input: "gpu_1/res_conv1_bn_b"
external_input: "gpu_1/res2_0_branch2a_w"
external_input: "gpu_1/res2_0_branch2a_bn_s"
external_input: "gpu_1/res2_0_branch2a_bn_b"
external_input: "gpu_1/res2_0_branch2b_w"
external_input: "gpu_1/res2_0_branch2b_bn_s"
external_input: "gpu_1/res2_0_branch2b_bn_b"
external_input: "gpu_1/res2_0_branch2c_w"
external_input: "gpu_1/res2_0_branch2c_bn_s"
external_input: "gpu_1/res2_0_branch2c_bn_b"
external_input: "gpu_1/res2_0_branch1_w"
external_input: "gpu_1/res2_0_branch1_bn_s"
external_input: "gpu_1/res2_0_branch1_bn_b"
external_input: "gpu_1/res2_1_branch2a_w"
external_input: "gpu_1/res2_1_branch2a_bn_s"
external_input: "gpu_1/res2_1_branch2a_bn_b"
external_input: "gpu_1/res2_1_branch2b_w"
external_input: "gpu_1/res2_1_branch2b_bn_s"
external_input: "gpu_1/res2_1_branch2b_bn_b"
external_input: "gpu_1/res2_1_branch2c_w"
external_input: "gpu_1/res2_1_branch2c_bn_s"
external_input: "gpu_1/res2_1_branch2c_bn_b"
external_input: "gpu_1/res2_2_branch2a_w"
external_input: "gpu_1/res2_2_branch2a_bn_s"
external_input: "gpu_1/res2_2_branch2a_bn_b"
external_input: "gpu_1/res2_2_branch2b_w"
external_input: "gpu_1/res2_2_branch2b_bn_s"
external_input: "gpu_1/res2_2_branch2b_bn_b"
external_input: "gpu_1/res2_2_branch2c_w"
external_input: "gpu_1/res2_2_branch2c_bn_s"
external_input: "gpu_1/res2_2_branch2c_bn_b"
external_input: "gpu_1/res3_0_branch2a_w"
external_input: "gpu_1/res3_0_branch2a_bn_s"
external_input: "gpu_1/res3_0_branch2a_bn_b"
external_input: "gpu_1/res3_0_branch2b_w"
external_input: "gpu_1/res3_0_branch2b_bn_s"
external_input: "gpu_1/res3_0_branch2b_bn_b"
external_input: "gpu_1/res3_0_branch2c_w"
external_input: "gpu_1/res3_0_branch2c_bn_s"
external_input: "gpu_1/res3_0_branch2c_bn_b"
external_input: "gpu_1/res3_0_branch1_w"
external_input: "gpu_1/res3_0_branch1_bn_s"
external_input: "gpu_1/res3_0_branch1_bn_b"
external_input: "gpu_1/res3_1_branch2a_w"
external_input: "gpu_1/res3_1_branch2a_bn_s"
external_input: "gpu_1/res3_1_branch2a_bn_b"
external_input: "gpu_1/res3_1_branch2b_w"
external_input: "gpu_1/res3_1_branch2b_bn_s"
external_input: "gpu_1/res3_1_branch2b_bn_b"
external_input: "gpu_1/res3_1_branch2c_w"
external_input: "gpu_1/res3_1_branch2c_bn_s"
external_input: "gpu_1/res3_1_branch2c_bn_b"
external_input: "gpu_1/res3_2_branch2a_w"
external_input: "gpu_1/res3_2_branch2a_bn_s"
external_input: "gpu_1/res3_2_branch2a_bn_b"
external_input: "gpu_1/res3_2_branch2b_w"
external_input: "gpu_1/res3_2_branch2b_bn_s"
external_input: "gpu_1/res3_2_branch2b_bn_b"
external_input: "gpu_1/res3_2_branch2c_w"
external_input: "gpu_1/res3_2_branch2c_bn_s"
external_input: "gpu_1/res3_2_branch2c_bn_b"
external_input: "gpu_1/res3_3_branch2a_w"
external_input: "gpu_1/res3_3_branch2a_bn_s"
external_input: "gpu_1/res3_3_branch2a_bn_b"
external_input: "gpu_1/res3_3_branch2b_w"
external_input: "gpu_1/res3_3_branch2b_bn_s"
external_input: "gpu_1/res3_3_branch2b_bn_b"
external_input: "gpu_1/res3_3_branch2c_w"
external_input: "gpu_1/res3_3_branch2c_bn_s"
external_input: "gpu_1/res3_3_branch2c_bn_b"
external_input: "gpu_1/res4_0_branch2a_w"
external_input: "gpu_1/res4_0_branch2a_bn_s"
external_input: "gpu_1/res4_0_branch2a_bn_b"
external_input: "gpu_1/res4_0_branch2b_w"
external_input: "gpu_1/res4_0_branch2b_bn_s"
external_input: "gpu_1/res4_0_branch2b_bn_b"
external_input: "gpu_1/res4_0_branch2c_w"
external_input: "gpu_1/res4_0_branch2c_bn_s"
external_input: "gpu_1/res4_0_branch2c_bn_b"
external_input: "gpu_1/res4_0_branch1_w"
external_input: "gpu_1/res4_0_branch1_bn_s"
external_input: "gpu_1/res4_0_branch1_bn_b"
external_input: "gpu_1/res4_1_branch2a_w"
external_input: "gpu_1/res4_1_branch2a_bn_s"
external_input: "gpu_1/res4_1_branch2a_bn_b"
external_input: "gpu_1/res4_1_branch2b_w"
external_input: "gpu_1/res4_1_branch2b_bn_s"
external_input: "gpu_1/res4_1_branch2b_bn_b"
external_input: "gpu_1/res4_1_branch2c_w"
external_input: "gpu_1/res4_1_branch2c_bn_s"
external_input: "gpu_1/res4_1_branch2c_bn_b"
external_input: "gpu_1/res4_2_branch2a_w"
external_input: "gpu_1/res4_2_branch2a_bn_s"
external_input: "gpu_1/res4_2_branch2a_bn_b"
external_input: "gpu_1/res4_2_branch2b_w"
external_input: "gpu_1/res4_2_branch2b_bn_s"
external_input: "gpu_1/res4_2_branch2b_bn_b"
external_input: "gpu_1/res4_2_branch2c_w"
external_input: "gpu_1/res4_2_branch2c_bn_s"
external_input: "gpu_1/res4_2_branch2c_bn_b"
external_input: "gpu_1/res4_3_branch2a_w"
external_input: "gpu_1/res4_3_branch2a_bn_s"
external_input: "gpu_1/res4_3_branch2a_bn_b"
external_input: "gpu_1/res4_3_branch2b_w"
external_input: "gpu_1/res4_3_branch2b_bn_s"
external_input: "gpu_1/res4_3_branch2b_bn_b"
external_input: "gpu_1/res4_3_branch2c_w"
external_input: "gpu_1/res4_3_branch2c_bn_s"
external_input: "gpu_1/res4_3_branch2c_bn_b"
external_input: "gpu_1/res4_4_branch2a_w"
external_input: "gpu_1/res4_4_branch2a_bn_s"
external_input: "gpu_1/res4_4_branch2a_bn_b"
external_input: "gpu_1/res4_4_branch2b_w"
external_input: "gpu_1/res4_4_branch2b_bn_s"
external_input: "gpu_1/res4_4_branch2b_bn_b"
external_input: "gpu_1/res4_4_branch2c_w"
external_input: "gpu_1/res4_4_branch2c_bn_s"
external_input: "gpu_1/res4_4_branch2c_bn_b"
external_input: "gpu_1/res4_5_branch2a_w"
external_input: "gpu_1/res4_5_branch2a_bn_s"
external_input: "gpu_1/res4_5_branch2a_bn_b"
external_input: "gpu_1/res4_5_branch2b_w"
external_input: "gpu_1/res4_5_branch2b_bn_s"
external_input: "gpu_1/res4_5_branch2b_bn_b"
external_input: "gpu_1/res4_5_branch2c_w"
external_input: "gpu_1/res4_5_branch2c_bn_s"
external_input: "gpu_1/res4_5_branch2c_bn_b"
external_input: "gpu_1/conv_rpn_w"
external_input: "gpu_1/conv_rpn_b"
external_input: "gpu_1/rpn_cls_logits_w"
external_input: "gpu_1/rpn_cls_logits_b"
external_input: "gpu_1/rpn_bbox_pred_w"
external_input: "gpu_1/rpn_bbox_pred_b"
external_input: "gpu_1/im_info"
external_input: "gpu_1/roidb"
external_input: "gpu_1/rpn_labels_int32_wide"
external_input: "gpu_1/rpn_bbox_targets_wide"
external_input: "gpu_1/rpn_bbox_inside_weights_wide"
external_input: "gpu_1/rpn_bbox_outside_weights_wide"
external_input: "gpu_1/res5_0_branch2a_w"
external_input: "gpu_1/res5_0_branch2a_bn_s"
external_input: "gpu_1/res5_0_branch2a_bn_b"
external_input: "gpu_1/res5_0_branch2b_w"
external_input: "gpu_1/res5_0_branch2b_bn_s"
external_input: "gpu_1/res5_0_branch2b_bn_b"
external_input: "gpu_1/res5_0_branch2c_w"
external_input: "gpu_1/res5_0_branch2c_bn_s"
external_input: "gpu_1/res5_0_branch2c_bn_b"
external_input: "gpu_1/res5_0_branch1_w"
external_input: "gpu_1/res5_0_branch1_bn_s"
external_input: "gpu_1/res5_0_branch1_bn_b"
external_input: "gpu_1/res5_1_branch2a_w"
external_input: "gpu_1/res5_1_branch2a_bn_s"
external_input: "gpu_1/res5_1_branch2a_bn_b"
external_input: "gpu_1/res5_1_branch2b_w"
external_input: "gpu_1/res5_1_branch2b_bn_s"
external_input: "gpu_1/res5_1_branch2b_bn_b"
external_input: "gpu_1/res5_1_branch2c_w"
external_input: "gpu_1/res5_1_branch2c_bn_s"
external_input: "gpu_1/res5_1_branch2c_bn_b"
external_input: "gpu_1/res5_2_branch2a_w"
external_input: "gpu_1/res5_2_branch2a_bn_s"
external_input: "gpu_1/res5_2_branch2a_bn_b"
external_input: "gpu_1/res5_2_branch2b_w"
external_input: "gpu_1/res5_2_branch2b_bn_s"
external_input: "gpu_1/res5_2_branch2b_bn_b"
external_input: "gpu_1/res5_2_branch2c_w"
external_input: "gpu_1/res5_2_branch2c_bn_s"
external_input: "gpu_1/res5_2_branch2c_bn_b"
external_input: "gpu_1/cls_score_w"
external_input: "gpu_1/cls_score_b"
external_input: "gpu_1/bbox_pred_w"
external_input: "gpu_1/bbox_pred_b"
external_input: "gpu_0/one"
external_input: "gpu_0/wd"
external_input: "gpu_0/res3_0_branch2a_w_momentum"
external_input: "gpu_0/lr"
external_input: "gpu_0/res3_0_branch2b_w_momentum"
external_input: "gpu_0/res3_0_branch2c_w_momentum"
external_input: "gpu_0/res3_0_branch1_w_momentum"
external_input: "gpu_0/res3_1_branch2a_w_momentum"
external_input: "gpu_0/res3_1_branch2b_w_momentum"
external_input: "gpu_0/res3_1_branch2c_w_momentum"
external_input: "gpu_0/res3_2_branch2a_w_momentum"
external_input: "gpu_0/res3_2_branch2b_w_momentum"
external_input: "gpu_0/res3_2_branch2c_w_momentum"
external_input: "gpu_0/res3_3_branch2a_w_momentum"
external_input: "gpu_0/res3_3_branch2b_w_momentum"
external_input: "gpu_0/res3_3_branch2c_w_momentum"
external_input: "gpu_0/res4_0_branch2a_w_momentum"
external_input: "gpu_0/res4_0_branch2b_w_momentum"
external_input: "gpu_0/res4_0_branch2c_w_momentum"
external_input: "gpu_0/res4_0_branch1_w_momentum"
external_input: "gpu_0/res4_1_branch2a_w_momentum"
external_input: "gpu_0/res4_1_branch2b_w_momentum"
external_input: "gpu_0/res4_1_branch2c_w_momentum"
external_input: "gpu_0/res4_2_branch2a_w_momentum"
external_input: "gpu_0/res4_2_branch2b_w_momentum"
external_input: "gpu_0/res4_2_branch2c_w_momentum"
external_input: "gpu_0/res4_3_branch2a_w_momentum"
external_input: "gpu_0/res4_3_branch2b_w_momentum"
external_input: "gpu_0/res4_3_branch2c_w_momentum"
external_input: "gpu_0/res4_4_branch2a_w_momentum"
external_input: "gpu_0/res4_4_branch2b_w_momentum"
external_input: "gpu_0/res4_4_branch2c_w_momentum"
external_input: "gpu_0/res4_5_branch2a_w_momentum"
external_input: "gpu_0/res4_5_branch2b_w_momentum"
external_input: "gpu_0/res4_5_branch2c_w_momentum"
external_input: "gpu_0/conv_rpn_w_momentum"
external_input: "gpu_0/conv_rpn_b_momentum"
external_input: "gpu_0/rpn_cls_logits_w_momentum"
external_input: "gpu_0/rpn_cls_logits_b_momentum"
external_input: "gpu_0/rpn_bbox_pred_w_momentum"
external_input: "gpu_0/rpn_bbox_pred_b_momentum"
external_input: "gpu_0/res5_0_branch2a_w_momentum"
external_input: "gpu_0/res5_0_branch2b_w_momentum"
external_input: "gpu_0/res5_0_branch2c_w_momentum"
external_input: "gpu_0/res5_0_branch1_w_momentum"
external_input: "gpu_0/res5_1_branch2a_w_momentum"
external_input: "gpu_0/res5_1_branch2b_w_momentum"
external_input: "gpu_0/res5_1_branch2c_w_momentum"
external_input: "gpu_0/res5_2_branch2a_w_momentum"
external_input: "gpu_0/res5_2_branch2b_w_momentum"
external_input: "gpu_0/res5_2_branch2c_w_momentum"
external_input: "gpu_0/cls_score_w_momentum"
external_input: "gpu_0/cls_score_b_momentum"
external_input: "gpu_0/bbox_pred_w_momentum"
external_input: "gpu_0/bbox_pred_b_momentum"
external_input: "gpu_1/one"
external_input: "gpu_1/wd"
external_input: "gpu_1/res3_0_branch2a_w_momentum"
external_input: "gpu_1/lr"
external_input: "gpu_1/res3_0_branch2b_w_momentum"
external_input: "gpu_1/res3_0_branch2c_w_momentum"
external_input: "gpu_1/res3_0_branch1_w_momentum"
external_input: "gpu_1/res3_1_branch2a_w_momentum"
external_input: "gpu_1/res3_1_branch2b_w_momentum"
external_input: "gpu_1/res3_1_branch2c_w_momentum"
external_input: "gpu_1/res3_2_branch2a_w_momentum"
external_input: "gpu_1/res3_2_branch2b_w_momentum"
external_input: "gpu_1/res3_2_branch2c_w_momentum"
external_input: "gpu_1/res3_3_branch2a_w_momentum"
external_input: "gpu_1/res3_3_branch2b_w_momentum"
external_input: "gpu_1/res3_3_branch2c_w_momentum"
external_input: "gpu_1/res4_0_branch2a_w_momentum"
external_input: "gpu_1/res4_0_branch2b_w_momentum"
external_input: "gpu_1/res4_0_branch2c_w_momentum"
external_input: "gpu_1/res4_0_branch1_w_momentum"
external_input: "gpu_1/res4_1_branch2a_w_momentum"
external_input: "gpu_1/res4_1_branch2b_w_momentum"
external_input: "gpu_1/res4_1_branch2c_w_momentum"
external_input: "gpu_1/res4_2_branch2a_w_momentum"
external_input: "gpu_1/res4_2_branch2b_w_momentum"
external_input: "gpu_1/res4_2_branch2c_w_momentum"
external_input: "gpu_1/res4_3_branch2a_w_momentum"
external_input: "gpu_1/res4_3_branch2b_w_momentum"
external_input: "gpu_1/res4_3_branch2c_w_momentum"
external_input: "gpu_1/res4_4_branch2a_w_momentum"
external_input: "gpu_1/res4_4_branch2b_w_momentum"
external_input: "gpu_1/res4_4_branch2c_w_momentum"
external_input: "gpu_1/res4_5_branch2a_w_momentum"
external_input: "gpu_1/res4_5_branch2b_w_momentum"
external_input: "gpu_1/res4_5_branch2c_w_momentum"
external_input: "gpu_1/conv_rpn_w_momentum"
external_input: "gpu_1/conv_rpn_b_momentum"
external_input: "gpu_1/rpn_cls_logits_w_momentum"
external_input: "gpu_1/rpn_cls_logits_b_momentum"
external_input: "gpu_1/rpn_bbox_pred_w_momentum"
external_input: "gpu_1/rpn_bbox_pred_b_momentum"
external_input: "gpu_1/res5_0_branch2a_w_momentum"
external_input: "gpu_1/res5_0_branch2b_w_momentum"
external_input: "gpu_1/res5_0_branch2c_w_momentum"
external_input: "gpu_1/res5_0_branch1_w_momentum"
external_input: "gpu_1/res5_1_branch2a_w_momentum"
external_input: "gpu_1/res5_1_branch2b_w_momentum"
external_input: "gpu_1/res5_1_branch2c_w_momentum"
external_input: "gpu_1/res5_2_branch2a_w_momentum"
external_input: "gpu_1/res5_2_branch2b_w_momentum"
external_input: "gpu_1/res5_2_branch2c_w_momentum"
external_input: "gpu_1/cls_score_w_momentum"
external_input: "gpu_1/cls_score_b_momentum"
external_input: "gpu_1/bbox_pred_w_momentum"
external_input: "gpu_1/bbox_pred_b_momentum"
external_input: "gpu_0/roi_blobs_queue_bd38e172-b764-4488-bc63-d8f6c02f6ebd"
external_input: "gpu_1/roi_blobs_queue_bd38e172-b764-4488-bc63-d8f6c02f6ebd"
