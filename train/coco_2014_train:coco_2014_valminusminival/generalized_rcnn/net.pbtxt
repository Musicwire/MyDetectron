name: "generalized_rcnn"
op {
  input: "gpu_0/roi_blobs_queue_365552d1-b4da-4b3e-938a-61b098b02f38"
  output: "gpu_0/data"
  output: "gpu_0/im_info"
  output: "gpu_0/roidb"
  output: "gpu_0/rpn_labels_int32_wide_fpn2"
  output: "gpu_0/rpn_bbox_targets_wide_fpn2"
  output: "gpu_0/rpn_bbox_inside_weights_wide_fpn2"
  output: "gpu_0/rpn_bbox_outside_weights_wide_fpn2"
  output: "gpu_0/rpn_labels_int32_wide_fpn3"
  output: "gpu_0/rpn_bbox_targets_wide_fpn3"
  output: "gpu_0/rpn_bbox_inside_weights_wide_fpn3"
  output: "gpu_0/rpn_bbox_outside_weights_wide_fpn3"
  output: "gpu_0/rpn_labels_int32_wide_fpn4"
  output: "gpu_0/rpn_bbox_targets_wide_fpn4"
  output: "gpu_0/rpn_bbox_inside_weights_wide_fpn4"
  output: "gpu_0/rpn_bbox_outside_weights_wide_fpn4"
  output: "gpu_0/rpn_labels_int32_wide_fpn5"
  output: "gpu_0/rpn_bbox_targets_wide_fpn5"
  output: "gpu_0/rpn_bbox_inside_weights_wide_fpn5"
  output: "gpu_0/rpn_bbox_outside_weights_wide_fpn5"
  output: "gpu_0/rpn_labels_int32_wide_fpn6"
  output: "gpu_0/rpn_bbox_targets_wide_fpn6"
  output: "gpu_0/rpn_bbox_inside_weights_wide_fpn6"
  output: "gpu_0/rpn_bbox_outside_weights_wide_fpn6"
  name: ""
  type: "DequeueBlobs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 134, in train_model\n    setup_model_for_training(model, output_dir)\n  File \"tools/train_net.py\", line 235, in setup_model_for_training\n    add_model_training_inputs(model)\n  File \"tools/train_net.py\", line 263, in add_model_training_inputs\n    model_builder.add_training_inputs(model, roidb=roidb)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 396, in add_training_inputs\n    model.roi_data_loader._blobs_queue_name, blob_names\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/data"
  input: "gpu_0/conv1_w"
  output: "gpu_0/conv1"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 7
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 94, in add_ResNet_convX_body\n    p = model.Conv(\'data\', \'conv1\', 3, 64, 7, pad=3, stride=2, no_bias=1)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  input: "gpu_0/res_conv1_bn_s"
  input: "gpu_0/res_conv1_bn_b"
  output: "gpu_0/conv1"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 95, in add_ResNet_convX_body\n    p = model.AffineChannel(p, \'res_conv1_bn\', dim=64, inplace=True)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  output: "gpu_0/conv1"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 96, in add_ResNet_convX_body\n    p = model.Relu(p, p)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv1"
  output: "gpu_0/pool1"
  name: ""
  type: "MaxPool"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 97, in add_ResNet_convX_body\n    p = model.MaxPool(p, \'pool1\', kernel=3, pad=1, stride=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 212, in MaxPool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 30, in max_pool\n    return model.net.MaxPool(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool1"
  input: "gpu_0/res2_0_branch2a_w"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  input: "gpu_0/res2_0_branch2a_bn_s"
  input: "gpu_0/res2_0_branch2a_bn_b"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  output: "gpu_0/res2_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2a"
  input: "gpu_0/res2_0_branch2b_w"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  input: "gpu_0/res2_0_branch2b_bn_s"
  input: "gpu_0/res2_0_branch2b_bn_b"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  output: "gpu_0/res2_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2b"
  input: "gpu_0/res2_0_branch2c_w"
  output: "gpu_0/res2_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c"
  input: "gpu_0/res2_0_branch2c_bn_s"
  input: "gpu_0/res2_0_branch2c_bn_b"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/pool1"
  input: "gpu_0/res2_0_branch1_w"
  output: "gpu_0/res2_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch1"
  input: "gpu_0/res2_0_branch1_bn_s"
  input: "gpu_0/res2_0_branch1_bn_b"
  output: "gpu_0/res2_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  input: "gpu_0/res2_0_branch1_bn"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  output: "gpu_0/res2_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_0_branch2c_bn"
  input: "gpu_0/res2_1_branch2a_w"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  input: "gpu_0/res2_1_branch2a_bn_s"
  input: "gpu_0/res2_1_branch2a_bn_b"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  output: "gpu_0/res2_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2a"
  input: "gpu_0/res2_1_branch2b_w"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  input: "gpu_0/res2_1_branch2b_bn_s"
  input: "gpu_0/res2_1_branch2b_bn_b"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  output: "gpu_0/res2_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2b"
  input: "gpu_0/res2_1_branch2c_w"
  output: "gpu_0/res2_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c"
  input: "gpu_0/res2_1_branch2c_bn_s"
  input: "gpu_0/res2_1_branch2c_bn_b"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  input: "gpu_0/res2_0_branch2c_bn"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  output: "gpu_0/res2_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_1_branch2c_bn"
  input: "gpu_0/res2_2_branch2a_w"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  input: "gpu_0/res2_2_branch2a_bn_s"
  input: "gpu_0/res2_2_branch2a_bn_b"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  output: "gpu_0/res2_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2a"
  input: "gpu_0/res2_2_branch2b_w"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  input: "gpu_0/res2_2_branch2b_bn_s"
  input: "gpu_0/res2_2_branch2b_bn_b"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  output: "gpu_0/res2_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2b"
  input: "gpu_0/res2_2_branch2c_w"
  output: "gpu_0/res2_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2c"
  input: "gpu_0/res2_2_branch2c_bn_s"
  input: "gpu_0/res2_2_branch2c_bn_b"
  output: "gpu_0/res2_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_branch2c_bn"
  input: "gpu_0/res2_1_branch2c_bn"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 101, in add_ResNet_convX_body\n    s, dim_in = add_stage(model, \'res2\', p, n1, dim_in, 256, dim_bottleneck, 1)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  output: "gpu_0/res2_2_sum"
  name: ""
  type: "StopGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 103, in add_ResNet_convX_body\n    model.StopGradient(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2a_bn_s"
  input: "gpu_0/res3_0_branch2a_bn_b"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  output: "gpu_0/res3_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2b_bn_s"
  input: "gpu_0/res3_0_branch2b_bn_b"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  output: "gpu_0/res3_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c"
  input: "gpu_0/res3_0_branch2c_bn_s"
  input: "gpu_0/res3_0_branch2c_bn_b"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1"
  input: "gpu_0/res3_0_branch1_bn_s"
  input: "gpu_0/res3_0_branch1_bn_b"
  output: "gpu_0/res3_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_0_branch1_bn"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  output: "gpu_0/res3_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2a_bn_s"
  input: "gpu_0/res3_1_branch2a_bn_b"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  output: "gpu_0/res3_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2b_bn_s"
  input: "gpu_0/res3_1_branch2b_bn_b"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  output: "gpu_0/res3_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c"
  input: "gpu_0/res3_1_branch2c_bn_s"
  input: "gpu_0/res3_1_branch2c_bn_b"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_0_branch2c_bn"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  output: "gpu_0/res3_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2a_bn_s"
  input: "gpu_0/res3_2_branch2a_bn_b"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  output: "gpu_0/res3_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2b_bn_s"
  input: "gpu_0/res3_2_branch2b_bn_b"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  output: "gpu_0/res3_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c"
  input: "gpu_0/res3_2_branch2c_bn_s"
  input: "gpu_0/res3_2_branch2c_bn_b"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_1_branch2c_bn"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  output: "gpu_0/res3_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2a_bn_s"
  input: "gpu_0/res3_3_branch2a_bn_b"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  output: "gpu_0/res3_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2b_bn_s"
  input: "gpu_0/res3_3_branch2b_bn_b"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  output: "gpu_0/res3_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c"
  input: "gpu_0/res3_3_branch2c_bn_s"
  input: "gpu_0/res3_3_branch2c_bn_b"
  output: "gpu_0/res3_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_bn"
  input: "gpu_0/res3_2_branch2c_bn"
  output: "gpu_0/res3_3_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  output: "gpu_0/res3_3_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 105, in add_ResNet_convX_body\n    model, \'res3\', s, n2, dim_in, 512, dim_bottleneck * 2, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2a_bn_s"
  input: "gpu_0/res4_0_branch2a_bn_b"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  output: "gpu_0/res4_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2b_bn_s"
  input: "gpu_0/res4_0_branch2b_bn_b"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  output: "gpu_0/res4_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c"
  input: "gpu_0/res4_0_branch2c_bn_s"
  input: "gpu_0/res4_0_branch2c_bn_b"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1"
  input: "gpu_0/res4_0_branch1_bn_s"
  input: "gpu_0/res4_0_branch1_bn_b"
  output: "gpu_0/res4_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_0_branch1_bn"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  output: "gpu_0/res4_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2a_bn_s"
  input: "gpu_0/res4_1_branch2a_bn_b"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  output: "gpu_0/res4_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2b_bn_s"
  input: "gpu_0/res4_1_branch2b_bn_b"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  output: "gpu_0/res4_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c"
  input: "gpu_0/res4_1_branch2c_bn_s"
  input: "gpu_0/res4_1_branch2c_bn_b"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_0_branch2c_bn"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  output: "gpu_0/res4_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2a_bn_s"
  input: "gpu_0/res4_2_branch2a_bn_b"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  output: "gpu_0/res4_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2b_bn_s"
  input: "gpu_0/res4_2_branch2b_bn_b"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  output: "gpu_0/res4_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c"
  input: "gpu_0/res4_2_branch2c_bn_s"
  input: "gpu_0/res4_2_branch2c_bn_b"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_1_branch2c_bn"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  output: "gpu_0/res4_2_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2a_bn_s"
  input: "gpu_0/res4_3_branch2a_bn_b"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  output: "gpu_0/res4_3_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2b_bn_s"
  input: "gpu_0/res4_3_branch2b_bn_b"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  output: "gpu_0/res4_3_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c"
  input: "gpu_0/res4_3_branch2c_bn_s"
  input: "gpu_0/res4_3_branch2c_bn_b"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_2_branch2c_bn"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  output: "gpu_0/res4_3_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2a_bn_s"
  input: "gpu_0/res4_4_branch2a_bn_b"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  output: "gpu_0/res4_4_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2b_bn_s"
  input: "gpu_0/res4_4_branch2b_bn_b"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  output: "gpu_0/res4_4_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c"
  input: "gpu_0/res4_4_branch2c_bn_s"
  input: "gpu_0/res4_4_branch2c_bn_b"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_3_branch2c_bn"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  output: "gpu_0/res4_4_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2a_bn_s"
  input: "gpu_0/res4_5_branch2a_bn_b"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  output: "gpu_0/res4_5_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2b_bn_s"
  input: "gpu_0/res4_5_branch2b_bn_b"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  output: "gpu_0/res4_5_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c"
  input: "gpu_0/res4_5_branch2c_bn_s"
  input: "gpu_0/res4_5_branch2c_bn_b"
  output: "gpu_0/res4_5_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_bn"
  input: "gpu_0/res4_4_branch2c_bn"
  output: "gpu_0/res4_5_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  output: "gpu_0/res4_5_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 110, in add_ResNet_convX_body\n    model, \'res4\', s, n3, dim_in, 1024, dim_bottleneck * 4, 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2a_bn_s"
  input: "gpu_0/res5_0_branch2a_bn_b"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  output: "gpu_0/res5_0_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2b_bn_s"
  input: "gpu_0/res5_0_branch2b_bn_b"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  output: "gpu_0/res5_0_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c"
  input: "gpu_0/res5_0_branch2c_bn_s"
  input: "gpu_0/res5_0_branch2c_bn_b"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1"
  name: ""
  type: "Conv"
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 205, in add_shortcut\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1"
  input: "gpu_0/res5_0_branch1_bn_s"
  input: "gpu_0/res5_0_branch1_bn_b"
  output: "gpu_0/res5_0_branch1_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 185, in add_residual_block\n    sc = add_shortcut(model, prefix, blob_in, dim_in, dim_out, stride)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 207, in add_shortcut\n    return model.AffineChannel(c, prefix + \'_branch1_bn\', dim=dim_out)\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_0_branch1_bn"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  output: "gpu_0/res5_0_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2a_bn_s"
  input: "gpu_0/res5_1_branch2a_bn_b"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  output: "gpu_0/res5_1_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2b_bn_s"
  input: "gpu_0/res5_1_branch2b_bn_b"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  output: "gpu_0/res5_1_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c"
  input: "gpu_0/res5_1_branch2c_bn_s"
  input: "gpu_0/res5_1_branch2c_bn_b"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_0_branch2c_bn"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 187, in add_residual_block\n    s = model.net.Sum([tr, sc], tr)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  output: "gpu_0/res5_1_branch2c_bn"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2a_bn_s"
  input: "gpu_0/res5_2_branch2a_bn_b"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 240, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  output: "gpu_0/res5_2_branch2a"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 242, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2b_bn_s"
  input: "gpu_0/res5_2_branch2b_bn_b"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 255, in bottleneck_transformation\n    inplace=True\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 102, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  output: "gpu_0/res5_2_branch2b"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 257, in bottleneck_transformation\n    cur = model.Relu(cur, cur)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 406, in ConvAffine\n    no_bias=1\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c"
  input: "gpu_0/res5_2_branch2c_bn_s"
  input: "gpu_0/res5_2_branch2c_bn_b"
  output: "gpu_0/res5_2_branch2c_bn"
  name: ""
  type: "AffineChannel"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 181, in add_residual_block\n    dilation=dilation\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 270, in bottleneck_transformation\n    inplace=False\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 409, in ConvAffine\n    conv_blob, prefix + suffix, dim=dim_out, inplace=inplace\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 104, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_bn"
  input: "gpu_0/res5_1_branch2c_bn"
  output: "gpu_0/res5_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 189, in add_residual_block\n    s = model.net.Sum([tr, sc], prefix + \'_sum\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_sum"
  output: "gpu_0/res5_2_sum"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 103, in add_fpn_onto_conv_body\n    conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 38, in add_ResNet50_conv5_body\n    return add_ResNet_convX_body(model, (3, 4, 6, 3))\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 118, in add_ResNet_convX_body\n    cfg.RESNETS.RES5_DILATION\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 83, in add_stage\n    inplace_sum=i < n - 1\n  File \"/home/pding/download/Detectron/lib/modeling/ResNet.py\", line 191, in add_residual_block\n    return model.Relu(s, s)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_sum"
  input: "gpu_0/fpn_inner_res5_2_sum_w"
  input: "gpu_0/fpn_inner_res5_2_sum_b"
  output: "gpu_0/fpn_inner_res5_2_sum"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 151, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum"
  output: "gpu_0/fpn_inner_res4_5_sum_topdown"
  name: ""
  type: "UpsampleNearest"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 247, in add_topdown_lateral_module\n    td = model.net.UpsampleNearest(fpn_top, fpn_bottom + \'_topdown\', scale=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral"
  input: "gpu_0/fpn_inner_res4_5_sum_topdown"
  output: "gpu_0/fpn_inner_res4_5_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 249, in add_topdown_lateral_module\n    model.net.Sum([lat, td], fpn_bottom)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum"
  output: "gpu_0/fpn_inner_res3_3_sum_topdown"
  name: ""
  type: "UpsampleNearest"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 247, in add_topdown_lateral_module\n    td = model.net.UpsampleNearest(fpn_top, fpn_bottom + \'_topdown\', scale=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral"
  input: "gpu_0/fpn_inner_res3_3_sum_topdown"
  output: "gpu_0/fpn_inner_res3_3_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 249, in add_topdown_lateral_module\n    model.net.Sum([lat, td], fpn_bottom)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 244, in add_topdown_lateral_module\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum"
  output: "gpu_0/fpn_inner_res2_2_sum_topdown"
  name: ""
  type: "UpsampleNearest"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 247, in add_topdown_lateral_module\n    td = model.net.UpsampleNearest(fpn_top, fpn_bottom + \'_topdown\', scale=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral"
  input: "gpu_0/fpn_inner_res2_2_sum_topdown"
  output: "gpu_0/fpn_inner_res2_2_sum"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 166, in add_fpn\n    fpn_dim_lateral[i + 1]       # lateral input dimension\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 249, in add_topdown_lateral_module\n    model.net.Sum([lat, td], fpn_bottom)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum"
  input: "gpu_0/fpn_res5_2_sum_w"
  input: "gpu_0/fpn_res5_2_sum_b"
  output: "gpu_0/fpn_res5_2_sum"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum"
  input: "gpu_0/fpn_res4_5_sum_w"
  input: "gpu_0/fpn_res4_5_sum_b"
  output: "gpu_0/fpn_res4_5_sum"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum"
  input: "gpu_0/fpn_res3_3_sum_w"
  input: "gpu_0/fpn_res3_3_sum_b"
  output: "gpu_0/fpn_res3_3_sum"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum"
  input: "gpu_0/fpn_res2_2_sum_w"
  input: "gpu_0/fpn_res2_2_sum_b"
  output: "gpu_0/fpn_res2_2_sum"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 182, in add_fpn\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  output: "gpu_0/fpn_res5_2_sum_subsampled_2x"
  name: ""
  type: "MaxPool"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 47, in add_fpn_ResNet50_conv5_body\n    model, ResNet.add_ResNet50_conv5_body, fpn_level_info_ResNet50_conv5\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 105, in add_fpn_onto_conv_body\n    model, fpn_level_info_func()\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 197, in add_fpn\n    P6_blob = model.MaxPool(P6_blob_in, P6_name, kernel=1, pad=0, stride=2)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 212, in MaxPool\n    self, *args, use_cudnn=self.use_cudnn, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/pooling.py\", line 30, in max_pool\n    return model.net.MaxPool(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn2"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 301, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  output: "gpu_0/conv_rpn_fpn2"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 303, in add_fpn_rpn_outputs\n    model.Relu(conv_rpn_fpn, conv_rpn_fpn)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn2"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 314, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn2"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 326, in add_fpn_rpn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2"
  output: "gpu_0/rpn_cls_probs_fpn2"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 381, in add_fpn_rpn_outputs\n    rpn_cls_logits_fpn, \'rpn_cls_probs_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois_fpn2"
  output: "gpu_0/rpn_roi_probs_fpn2"
  name: "GenerateProposalsOp:gpu_0/rpn_cls_probs_fpn2,gpu_0/rpn_bbox_pred_fpn2,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward"
  }
  arg {
    name: "spatial_scale"
    f: 0.25
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 387, in add_fpn_rpn_outputs\n    spatial_scale=sc\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 136, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn3"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 341, in add_fpn_rpn_outputs\n    bias=\'conv_rpn_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  output: "gpu_0/conv_rpn_fpn3"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 343, in add_fpn_rpn_outputs\n    model.Relu(conv_rpn_fpn, conv_rpn_fpn)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn3"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 354, in add_fpn_rpn_outputs\n    bias=\'rpn_cls_logits_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn3"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 366, in add_fpn_rpn_outputs\n    bias=\'rpn_bbox_pred_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn3"
  output: "gpu_0/rpn_cls_probs_fpn3"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 381, in add_fpn_rpn_outputs\n    rpn_cls_logits_fpn, \'rpn_cls_probs_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn3"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois_fpn3"
  output: "gpu_0/rpn_roi_probs_fpn3"
  name: "GenerateProposalsOp:gpu_0/rpn_cls_probs_fpn3,gpu_0/rpn_bbox_pred_fpn3,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:1"
  }
  arg {
    name: "spatial_scale"
    f: 0.125
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 387, in add_fpn_rpn_outputs\n    spatial_scale=sc\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 136, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn4"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 341, in add_fpn_rpn_outputs\n    bias=\'conv_rpn_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  output: "gpu_0/conv_rpn_fpn4"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 343, in add_fpn_rpn_outputs\n    model.Relu(conv_rpn_fpn, conv_rpn_fpn)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn4"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 354, in add_fpn_rpn_outputs\n    bias=\'rpn_cls_logits_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn4"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 366, in add_fpn_rpn_outputs\n    bias=\'rpn_bbox_pred_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn4"
  output: "gpu_0/rpn_cls_probs_fpn4"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 381, in add_fpn_rpn_outputs\n    rpn_cls_logits_fpn, \'rpn_cls_probs_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn4"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois_fpn4"
  output: "gpu_0/rpn_roi_probs_fpn4"
  name: "GenerateProposalsOp:gpu_0/rpn_cls_probs_fpn4,gpu_0/rpn_bbox_pred_fpn4,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:2"
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 387, in add_fpn_rpn_outputs\n    spatial_scale=sc\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 136, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn5"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 341, in add_fpn_rpn_outputs\n    bias=\'conv_rpn_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  output: "gpu_0/conv_rpn_fpn5"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 343, in add_fpn_rpn_outputs\n    model.Relu(conv_rpn_fpn, conv_rpn_fpn)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn5"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 354, in add_fpn_rpn_outputs\n    bias=\'rpn_cls_logits_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn5"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 366, in add_fpn_rpn_outputs\n    bias=\'rpn_bbox_pred_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn5"
  output: "gpu_0/rpn_cls_probs_fpn5"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 381, in add_fpn_rpn_outputs\n    rpn_cls_logits_fpn, \'rpn_cls_probs_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn5"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois_fpn5"
  output: "gpu_0/rpn_roi_probs_fpn5"
  name: "GenerateProposalsOp:gpu_0/rpn_cls_probs_fpn5,gpu_0/rpn_bbox_pred_fpn5,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:3"
  }
  arg {
    name: "spatial_scale"
    f: 0.03125
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 387, in add_fpn_rpn_outputs\n    spatial_scale=sc\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 136, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_subsampled_2x"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn6"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 341, in add_fpn_rpn_outputs\n    bias=\'conv_rpn_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  output: "gpu_0/conv_rpn_fpn6"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 343, in add_fpn_rpn_outputs\n    model.Relu(conv_rpn_fpn, conv_rpn_fpn)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn6"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 354, in add_fpn_rpn_outputs\n    bias=\'rpn_cls_logits_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn6"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 366, in add_fpn_rpn_outputs\n    bias=\'rpn_bbox_pred_fpn\' + sk_min + \'_b\'\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 334, in ConvShared\n    blobs_in, blob_out, kernel=kernel, order=self.order, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn6"
  output: "gpu_0/rpn_cls_probs_fpn6"
  name: ""
  type: "Sigmoid"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 381, in add_fpn_rpn_outputs\n    rpn_cls_logits_fpn, \'rpn_cls_probs_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_probs_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn6"
  input: "gpu_0/im_info"
  output: "gpu_0/rpn_rois_fpn6"
  output: "gpu_0/rpn_roi_probs_fpn6"
  name: "GenerateProposalsOp:gpu_0/rpn_cls_probs_fpn6,gpu_0/rpn_bbox_pred_fpn6,im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:4"
  }
  arg {
    name: "spatial_scale"
    f: 0.015625
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 40, in add_generic_rpn_outputs\n    FPN.add_fpn_rpn_outputs(model, blob_in, dim_in, spatial_scale_in)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 387, in add_fpn_rpn_outputs\n    spatial_scale=sc\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 136, in GenerateProposals\n    )(blobs_in, blobs_out, name=name, spatial_scale=spatial_scale)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_rois_fpn2"
  input: "gpu_0/rpn_rois_fpn3"
  input: "gpu_0/rpn_rois_fpn4"
  input: "gpu_0/rpn_rois_fpn5"
  input: "gpu_0/rpn_rois_fpn6"
  input: "gpu_0/rpn_roi_probs_fpn2"
  input: "gpu_0/rpn_roi_probs_fpn3"
  input: "gpu_0/rpn_roi_probs_fpn4"
  input: "gpu_0/rpn_roi_probs_fpn5"
  input: "gpu_0/rpn_roi_probs_fpn6"
  input: "gpu_0/roidb"
  input: "gpu_0/im_info"
  output: "gpu_0/rois"
  output: "gpu_0/labels_int32"
  output: "gpu_0/bbox_targets"
  output: "gpu_0/bbox_inside_weights"
  output: "gpu_0/bbox_outside_weights"
  output: "gpu_0/mask_rois"
  output: "gpu_0/roi_has_mask_int32"
  output: "gpu_0/masks_int32"
  output: "gpu_0/rois_fpn2"
  output: "gpu_0/rois_fpn3"
  output: "gpu_0/rois_fpn4"
  output: "gpu_0/rois_fpn5"
  output: "gpu_0/rois_idx_restore_int32"
  output: "gpu_0/mask_rois_fpn2"
  output: "gpu_0/mask_rois_fpn3"
  output: "gpu_0/mask_rois_fpn4"
  output: "gpu_0/mask_rois_fpn5"
  output: "gpu_0/mask_rois_idx_restore_int32"
  name: "CollectAndDistributeFpnRpnProposalsOp:gpu_0/rpn_rois_fpn2,gpu_0/rpn_rois_fpn3,gpu_0/rpn_rois_fpn4,gpu_0/rpn_rois_fpn5,gpu_0/rpn_rois_fpn6,gpu_0/rpn_roi_probs_fpn2,gpu_0/rpn_roi_probs_fpn3,gpu_0/rpn_roi_probs_fpn4,gpu_0/rpn_roi_probs_fpn5,gpu_0/rpn_roi_probs_fpn6,gpu_0/roidb,gpu_0/im_info"
  type: "Python"
  arg {
    name: "grad_input_indices"
  }
  arg {
    name: "token"
    s: "forward:5"
  }
  arg {
    name: "grad_output_indices"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 44, in add_generic_rpn_outputs\n    model.CollectAndDistributeFpnRpnProposals()\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 223, in CollectAndDistributeFpnRpnProposals\n    )(blobs_in, blobs_out, name=name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2137, in <lambda>\n    **dict(chain(viewitems(kwargs), viewitems(core_kwargs)))\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide_fpn2"
  input: "gpu_0/rpn_cls_logits_fpn2"
  output: "gpu_0/rpn_labels_int32_fpn2"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 400, in add_fpn_rpn_losses\n    \'rpn_labels_int32_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2"
  output: "gpu_0/rpn_bbox_targets_fpn2"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2"
  output: "gpu_0/rpn_bbox_inside_weights_fpn2"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2"
  output: "gpu_0/rpn_bbox_outside_weights_fpn2"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2"
  input: "gpu_0/rpn_labels_int32_fpn2"
  output: "gpu_0/loss_rpn_cls_fpn2"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 416, in add_fpn_rpn_losses\n    cfg.TRAIN.IMS_PER_BATCH\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2"
  input: "gpu_0/rpn_bbox_targets_fpn2"
  input: "gpu_0/rpn_bbox_inside_weights_fpn2"
  input: "gpu_0/rpn_bbox_outside_weights_fpn2"
  output: "gpu_0/loss_rpn_bbox_fpn2"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 430, in add_fpn_rpn_losses\n    scale=model.GetLossScale(),\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls_fpn2"
  output: "gpu_0/loss_rpn_cls_fpn2_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox_fpn2"
  output: "gpu_0/__m20_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide_fpn3"
  input: "gpu_0/rpn_cls_logits_fpn3"
  output: "gpu_0/rpn_labels_int32_fpn3"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 400, in add_fpn_rpn_losses\n    \'rpn_labels_int32_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn3"
  output: "gpu_0/rpn_bbox_targets_fpn3"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn3"
  output: "gpu_0/rpn_bbox_inside_weights_fpn3"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn3"
  output: "gpu_0/rpn_bbox_outside_weights_fpn3"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn3"
  input: "gpu_0/rpn_labels_int32_fpn3"
  output: "gpu_0/loss_rpn_cls_fpn3"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 416, in add_fpn_rpn_losses\n    cfg.TRAIN.IMS_PER_BATCH\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn3"
  input: "gpu_0/rpn_bbox_targets_fpn3"
  input: "gpu_0/rpn_bbox_inside_weights_fpn3"
  input: "gpu_0/rpn_bbox_outside_weights_fpn3"
  output: "gpu_0/loss_rpn_bbox_fpn3"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 430, in add_fpn_rpn_losses\n    scale=model.GetLossScale(),\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls_fpn3"
  output: "gpu_0/loss_rpn_cls_fpn3_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox_fpn3"
  output: "gpu_0/__m11_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide_fpn4"
  input: "gpu_0/rpn_cls_logits_fpn4"
  output: "gpu_0/rpn_labels_int32_fpn4"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 400, in add_fpn_rpn_losses\n    \'rpn_labels_int32_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn4"
  output: "gpu_0/rpn_bbox_targets_fpn4"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn4"
  output: "gpu_0/rpn_bbox_inside_weights_fpn4"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn4"
  output: "gpu_0/rpn_bbox_outside_weights_fpn4"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn4"
  input: "gpu_0/rpn_labels_int32_fpn4"
  output: "gpu_0/loss_rpn_cls_fpn4"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 416, in add_fpn_rpn_losses\n    cfg.TRAIN.IMS_PER_BATCH\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn4"
  input: "gpu_0/rpn_bbox_targets_fpn4"
  input: "gpu_0/rpn_bbox_inside_weights_fpn4"
  input: "gpu_0/rpn_bbox_outside_weights_fpn4"
  output: "gpu_0/loss_rpn_bbox_fpn4"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 430, in add_fpn_rpn_losses\n    scale=model.GetLossScale(),\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls_fpn4"
  output: "gpu_0/loss_rpn_cls_fpn4_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox_fpn4"
  output: "gpu_0/__m16_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide_fpn5"
  input: "gpu_0/rpn_cls_logits_fpn5"
  output: "gpu_0/rpn_labels_int32_fpn5"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 400, in add_fpn_rpn_losses\n    \'rpn_labels_int32_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn5"
  output: "gpu_0/rpn_bbox_targets_fpn5"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn5"
  output: "gpu_0/rpn_bbox_inside_weights_fpn5"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn5"
  output: "gpu_0/rpn_bbox_outside_weights_fpn5"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn5"
  input: "gpu_0/rpn_labels_int32_fpn5"
  output: "gpu_0/loss_rpn_cls_fpn5"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 416, in add_fpn_rpn_losses\n    cfg.TRAIN.IMS_PER_BATCH\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn5"
  input: "gpu_0/rpn_bbox_targets_fpn5"
  input: "gpu_0/rpn_bbox_inside_weights_fpn5"
  input: "gpu_0/rpn_bbox_outside_weights_fpn5"
  output: "gpu_0/loss_rpn_bbox_fpn5"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 430, in add_fpn_rpn_losses\n    scale=model.GetLossScale(),\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls_fpn5"
  output: "gpu_0/loss_rpn_cls_fpn5_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox_fpn5"
  output: "gpu_0/__m14_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_labels_int32_wide_fpn6"
  input: "gpu_0/rpn_cls_logits_fpn6"
  output: "gpu_0/rpn_labels_int32_fpn6"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 400, in add_fpn_rpn_losses\n    \'rpn_labels_int32_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_targets_wide_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn6"
  output: "gpu_0/rpn_bbox_targets_fpn6"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_inside_weights_wide_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn6"
  output: "gpu_0/rpn_bbox_inside_weights_fpn6"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_outside_weights_wide_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn6"
  output: "gpu_0/rpn_bbox_outside_weights_fpn6"
  name: ""
  type: "SpatialNarrowAs"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 408, in add_fpn_rpn_losses\n    \'rpn_bbox_\' + key + \'_fpn\' + slvl\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn6"
  input: "gpu_0/rpn_labels_int32_fpn6"
  output: "gpu_0/loss_rpn_cls_fpn6"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 416, in add_fpn_rpn_losses\n    cfg.TRAIN.IMS_PER_BATCH\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn6"
  input: "gpu_0/rpn_bbox_targets_fpn6"
  input: "gpu_0/rpn_bbox_inside_weights_fpn6"
  input: "gpu_0/rpn_bbox_outside_weights_fpn6"
  output: "gpu_0/loss_rpn_bbox_fpn6"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 430, in add_fpn_rpn_losses\n    scale=model.GetLossScale(),\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_cls_fpn6"
  output: "gpu_0/loss_rpn_cls_fpn6_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_rpn_bbox_fpn6"
  output: "gpu_0/__m10_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 189, in _single_gpu_build_func\n    model, blob_conv, dim_conv, spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/rpn_heads.py\", line 46, in add_generic_rpn_outputs\n    loss_gradients = FPN.add_fpn_rpn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/FPN.py\", line 434, in add_fpn_rpn_losses\n    get_loss_gradients(model, [loss_rpn_cls_fpn, loss_rpn_bbox_fpn])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/rois_fpn2"
  output: "gpu_0/roi_feat_fpn2"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.25
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/rois_fpn3"
  output: "gpu_0/roi_feat_fpn3"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.125
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/rois_fpn4"
  output: "gpu_0/roi_feat_fpn4"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/rois_fpn5"
  output: "gpu_0/roi_feat_fpn5"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.03125
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/roi_feat_fpn2"
  input: "gpu_0/roi_feat_fpn3"
  input: "gpu_0/roi_feat_fpn4"
  input: "gpu_0/roi_feat_fpn5"
  output: "gpu_0/roi_feat_shuffled"
  output: "gpu_0/_concat_roi_feat"
  name: ""
  type: "Concat"
  arg {
    name: "axis"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 281, in RoIFeatureTransform\n    axis=0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/roi_feat_shuffled"
  input: "gpu_0/rois_idx_restore_int32"
  output: "gpu_0/roi_feat"
  name: ""
  type: "BatchPermutation"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 105, in add_roi_2mlp_head\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 286, in RoIFeatureTransform\n    [xform_shuffled, restore_bl], blob_out\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/roi_feat"
  input: "gpu_0/fc6_w"
  input: "gpu_0/fc6_b"
  output: "gpu_0/fc6"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 107, in add_roi_2mlp_head\n    model.FC(roi_feat, \'fc6\', dim_in * roi_size * roi_size, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6"
  output: "gpu_0/fc6"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 108, in add_roi_2mlp_head\n    model.Relu(\'fc6\', \'fc6\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6"
  input: "gpu_0/fc7_w"
  input: "gpu_0/fc7_b"
  output: "gpu_0/fc7"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 109, in add_roi_2mlp_head\n    model.FC(\'fc6\', \'fc7\', hidden_dim, hidden_dim)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7"
  output: "gpu_0/fc7"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 254, in _add_fast_rcnn_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 110, in add_roi_2mlp_head\n    model.Relu(\'fc7\', \'fc7\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 53, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred"
  name: ""
  type: "FC"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 256, in _add_fast_rcnn_head\n    fast_rcnn_heads.add_fast_rcnn_outputs(model, blob_frcn, dim_frcn)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 65, in add_fast_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 149, in FC\n    return brew.fc(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 73, in fc\n    return _FC_or_packed_FC(model, model.net.FC, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/fc.py\", line 69, in _FC_or_packed_FC\n    return op_call([blob_in, weight, bias], blob_out, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score"
  input: "gpu_0/labels_int32"
  output: "gpu_0/cls_prob"
  output: "gpu_0/loss_cls"
  name: ""
  type: "SoftmaxWithLoss"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 258, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 73, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred"
  input: "gpu_0/bbox_targets"
  input: "gpu_0/bbox_inside_weights"
  input: "gpu_0/bbox_outside_weights"
  output: "gpu_0/loss_bbox"
  name: ""
  type: "SmoothL1Loss"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 258, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 81, in add_fast_rcnn_losses\n    scale=model.GetLossScale()\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_cls"
  output: "gpu_0/loss_cls_grad"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 258, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 83, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_bbox"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 258, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 83, in add_fast_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_cls, loss_bbox])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_prob"
  input: "gpu_0/labels_int32"
  output: "gpu_0/accuracy_cls"
  name: ""
  type: "Accuracy"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 203, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 258, in _add_fast_rcnn_head\n    loss_gradients = fast_rcnn_heads.add_fast_rcnn_losses(model)\n  File \"/home/pding/download/Detectron/lib/modeling/fast_rcnn_heads.py\", line 84, in add_fast_rcnn_losses\n    model.Accuracy([\'cls_prob\', \'labels_int32\'], \'accuracy_cls\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 208, in Accuracy\n    return brew.accuracy(self, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/train.py\", line 70, in accuracy\n    model.net.Accuracy(blob_in, blob_out)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/mask_rois_fpn2"
  output: "gpu_0/_[mask]_roi_feat_fpn2"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.25
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/mask_rois_fpn3"
  output: "gpu_0/_[mask]_roi_feat_fpn3"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.125
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/mask_rois_fpn4"
  output: "gpu_0/_[mask]_roi_feat_fpn4"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/mask_rois_fpn5"
  output: "gpu_0/_[mask]_roi_feat_fpn5"
  name: ""
  type: "RoIAlign"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.03125
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 275, in RoIFeatureTransform\n    sampling_ratio=sampling_ratio\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_roi_feat_fpn2"
  input: "gpu_0/_[mask]_roi_feat_fpn3"
  input: "gpu_0/_[mask]_roi_feat_fpn4"
  input: "gpu_0/_[mask]_roi_feat_fpn5"
  output: "gpu_0/_[mask]_roi_feat_shuffled"
  output: "gpu_0/_concat__[mask]_roi_feat"
  name: ""
  type: "Concat"
  arg {
    name: "axis"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 281, in RoIFeatureTransform\n    axis=0\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_roi_feat_shuffled"
  input: "gpu_0/mask_rois_idx_restore_int32"
  output: "gpu_0/_[mask]_roi_feat"
  name: ""
  type: "BatchPermutation"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 135, in mask_rcnn_fcn_head_v1upXconvs\n    spatial_scale=spatial_scale\n  File \"/home/pding/download/Detectron/lib/modeling/detector.py\", line 286, in RoIFeatureTransform\n    [xform_shuffled, restore_bl], blob_out\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_roi_feat"
  input: "gpu_0/_[mask]_fcn1_w"
  input: "gpu_0/_[mask]_fcn1_b"
  output: "gpu_0/_[mask]_fcn1"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1"
  output: "gpu_0/_[mask]_fcn1"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 153, in mask_rcnn_fcn_head_v1upXconvs\n    current = model.Relu(current, current)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1"
  input: "gpu_0/_[mask]_fcn2_w"
  input: "gpu_0/_[mask]_fcn2_b"
  output: "gpu_0/_[mask]_fcn2"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2"
  output: "gpu_0/_[mask]_fcn2"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 153, in mask_rcnn_fcn_head_v1upXconvs\n    current = model.Relu(current, current)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2"
  input: "gpu_0/_[mask]_fcn3_w"
  input: "gpu_0/_[mask]_fcn3_b"
  output: "gpu_0/_[mask]_fcn3"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3"
  output: "gpu_0/_[mask]_fcn3"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 153, in mask_rcnn_fcn_head_v1upXconvs\n    current = model.Relu(current, current)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3"
  input: "gpu_0/_[mask]_fcn4_w"
  input: "gpu_0/_[mask]_fcn4_b"
  output: "gpu_0/_[mask]_fcn4"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 151, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=(\'ConstantFill\', {\'value\': 0.})\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4"
  output: "gpu_0/_[mask]_fcn4"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 153, in mask_rcnn_fcn_head_v1upXconvs\n    current = model.Relu(current, current)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4"
  input: "gpu_0/conv5_mask_w"
  input: "gpu_0/conv5_mask_b"
  output: "gpu_0/conv5_mask"
  name: ""
  type: "ConvTranspose"
  arg {
    name: "kernel"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 166, in mask_rcnn_fcn_head_v1upXconvs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 123, in ConvTranspose\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 258, in conv_transpose\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask"
  output: "gpu_0/conv5_mask"
  name: ""
  type: "Relu"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 272, in _add_roi_mask_head\n    model, blob_in, dim_in, spatial_scale_in\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 113, in mask_rcnn_fcn_head_v1up4convs\n    model, blob_in, dim_in, spatial_scale, 4\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 168, in mask_rcnn_fcn_head_v1upXconvs\n    blob_mask = model.Relu(\'conv5_mask\', \'conv5_mask\')\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 184, in Relu\n    self, *args, order=self.order, use_cudnn=self.use_cudnn, **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/nonlinearity.py\", line 51, in relu\n    return model.net.Relu(blob_in, blob_out, order=order, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask"
  input: "gpu_0/mask_fcn_logits_w"
  input: "gpu_0/mask_fcn_logits_b"
  output: "gpu_0/mask_fcn_logits"
  name: ""
  type: "Conv"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 276, in _add_roi_mask_head\n    model, blob_mask_head, dim_mask_head\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 79, in add_mask_rcnn_outputs\n    bias_init=const_fill(0.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/cnn.py\", line 112, in Conv\n    **kwargs\n  File \"/home/pding/download/caffe2/build/caffe2/python/brew.py\", line 121, in scope_wrapper\n    return func(*args, **new_kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 201, in conv\n    group, transform_inputs, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/helpers/conv.py\", line 154, in _ConvBase\n    **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits"
  input: "gpu_0/masks_int32"
  output: "gpu_0/loss_mask"
  name: ""
  type: "SigmoidCrossEntropyLoss"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 290, in _add_roi_mask_head\n    loss_gradients = mask_rcnn_heads.add_mask_rcnn_losses(model, blob_mask)\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 99, in add_mask_rcnn_losses\n    scale=model.GetLossScale() * cfg.MRCNN.WEIGHT_LOSS_MASK\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/loss_mask"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConstantFill"
  arg {
    name: "value"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 210, in _single_gpu_build_func\n    spatial_scale_conv\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 290, in _add_roi_mask_head\n    loss_gradients = mask_rcnn_heads.add_mask_rcnn_losses(model, blob_mask)\n  File \"/home/pding/download/Detectron/lib/modeling/mask_rcnn_heads.py\", line 101, in add_mask_rcnn_losses\n    loss_gradients = blob_utils.get_loss_gradients(model, [loss_mask])\n  File \"/home/pding/download/Detectron/lib/utils/blob.py\", line 135, in get_loss_gradients\n    loss_grad = model.net.ConstantFill(b, [b + \'_grad\'], value=1.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits"
  input: "gpu_0/masks_int32"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/conv5_mask"
  input: "gpu_0/mask_fcn_logits_w"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/mask_fcn_logits_w_grad"
  output: "gpu_0/mask_fcn_logits_b_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv5_mask"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn4"
  input: "gpu_0/conv5_mask_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/conv5_mask_w_grad"
  output: "gpu_0/conv5_mask_b_grad"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConvTransposeGradient"
  arg {
    name: "kernel"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn4"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn3"
  input: "gpu_0/_[mask]_fcn4_w"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/_[mask]_fcn4_w_grad"
  output: "gpu_0/_[mask]_fcn4_b_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn3"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn2"
  input: "gpu_0/_[mask]_fcn3_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/_[mask]_fcn3_w_grad"
  output: "gpu_0/_[mask]_fcn3_b_grad"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn2"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn1"
  input: "gpu_0/_[mask]_fcn2_w"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/_[mask]_fcn2_w_grad"
  output: "gpu_0/_[mask]_fcn2_b_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_fcn1"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/_[mask]_roi_feat"
  input: "gpu_0/_[mask]_fcn1_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/_[mask]_fcn1_w_grad"
  output: "gpu_0/_[mask]_fcn1_b_grad"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/mask_rois_idx_restore_int32"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "BatchPermutationGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m6_shared"
  input: "gpu_0/_concat__[mask]_roi_feat"
  output: "gpu_0/__m8_shared"
  output: "gpu_0/__m18_shared"
  output: "gpu_0/__m19_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "Split"
  arg {
    name: "axis"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/mask_rois_fpn5"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.03125
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/mask_rois_fpn4"
  input: "gpu_0/__m19_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/mask_rois_fpn3"
  input: "gpu_0/__m18_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.125
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/mask_rois_fpn2"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 14
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.25
  }
  arg {
    name: "pooled_w"
    i: 14
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/bbox_pred"
  input: "gpu_0/bbox_targets"
  input: "gpu_0/bbox_inside_weights"
  input: "gpu_0/bbox_outside_weights"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/__m15_shared"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/cls_score"
  input: "gpu_0/labels_int32"
  input: "gpu_0/cls_prob"
  input: "gpu_0/loss_cls_grad"
  output: "gpu_0/cls_score_grad"
  name: ""
  type: "SoftmaxWithLossGradient"
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fc7"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/__m15_shared"
  output: "gpu_0/bbox_pred_w_grad"
  output: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fc7"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/cls_score_grad"
  output: "gpu_0/cls_score_w_grad"
  output: "gpu_0/cls_score_b_grad"
  output: "_gpu_0/fc7_grad_autosplit_0"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m7_shared"
  input: "_gpu_0/fc7_grad_autosplit_0"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/fc7"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fc6"
  input: "gpu_0/fc7_w"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/fc7_w_grad"
  output: "gpu_0/fc7_b_grad"
  output: "gpu_0/__m15_shared"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fc6"
  input: "gpu_0/__m15_shared"
  output: "gpu_0/__m15_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/roi_feat"
  input: "gpu_0/fc6_w"
  input: "gpu_0/__m15_shared"
  output: "gpu_0/fc6_w_grad"
  output: "gpu_0/fc6_b_grad"
  output: "gpu_0/__m7_shared"
  name: ""
  type: "FCGradient"
  arg {
    name: "use_cudnn"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rois_idx_restore_int32"
  input: "gpu_0/__m7_shared"
  output: "gpu_0/__m15_shared"
  name: ""
  type: "BatchPermutationGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m15_shared"
  input: "gpu_0/_concat_roi_feat"
  output: "gpu_0/__m7_shared"
  output: "gpu_0/roi_feat_fpn3_grad"
  output: "gpu_0/roi_feat_fpn4_grad"
  output: "gpu_0/roi_feat_fpn5_grad"
  name: ""
  type: "Split"
  arg {
    name: "axis"
    i: 0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/rois_fpn5"
  input: "gpu_0/roi_feat_fpn5_grad"
  output: "_gpu_0/fpn_res5_2_sum_grad_autosplit_0"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.03125
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/rois_fpn4"
  input: "gpu_0/roi_feat_fpn4_grad"
  output: "_gpu_0/fpn_res4_5_sum_grad_autosplit_0"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.0625
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/rois_fpn3"
  input: "gpu_0/roi_feat_fpn3_grad"
  output: "_gpu_0/fpn_res3_3_sum_grad_autosplit_0"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.125
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/rois_fpn2"
  input: "gpu_0/__m7_shared"
  output: "_gpu_0/fpn_res2_2_sum_grad_autosplit_0"
  name: ""
  type: "RoIAlignGradient"
  arg {
    name: "pooled_h"
    i: 7
  }
  arg {
    name: "sampling_ratio"
    i: 2
  }
  arg {
    name: "spatial_scale"
    f: 0.25
  }
  arg {
    name: "pooled_w"
    i: 7
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn6"
  input: "gpu_0/rpn_bbox_targets_fpn6"
  input: "gpu_0/rpn_bbox_inside_weights_fpn6"
  input: "gpu_0/rpn_bbox_outside_weights_fpn6"
  input: "gpu_0/__m10_shared"
  output: "gpu_0/__m13_shared"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn6"
  input: "gpu_0/rpn_labels_int32_fpn6"
  input: "gpu_0/loss_rpn_cls_fpn6_grad"
  output: "gpu_0/rpn_cls_logits_fpn6_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn5"
  input: "gpu_0/rpn_bbox_targets_fpn5"
  input: "gpu_0/rpn_bbox_inside_weights_fpn5"
  input: "gpu_0/rpn_bbox_outside_weights_fpn5"
  input: "gpu_0/__m14_shared"
  output: "gpu_0/rpn_bbox_pred_fpn5_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn5"
  input: "gpu_0/rpn_labels_int32_fpn5"
  input: "gpu_0/loss_rpn_cls_fpn5_grad"
  output: "gpu_0/rpn_cls_logits_fpn5_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn4"
  input: "gpu_0/rpn_bbox_targets_fpn4"
  input: "gpu_0/rpn_bbox_inside_weights_fpn4"
  input: "gpu_0/rpn_bbox_outside_weights_fpn4"
  input: "gpu_0/__m16_shared"
  output: "gpu_0/rpn_bbox_pred_fpn4_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn4"
  input: "gpu_0/rpn_labels_int32_fpn4"
  input: "gpu_0/loss_rpn_cls_fpn4_grad"
  output: "gpu_0/rpn_cls_logits_fpn4_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn3"
  input: "gpu_0/rpn_bbox_targets_fpn3"
  input: "gpu_0/rpn_bbox_inside_weights_fpn3"
  input: "gpu_0/rpn_bbox_outside_weights_fpn3"
  input: "gpu_0/__m11_shared"
  output: "gpu_0/rpn_bbox_pred_fpn3_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn3"
  input: "gpu_0/rpn_labels_int32_fpn3"
  input: "gpu_0/loss_rpn_cls_fpn3_grad"
  output: "gpu_0/rpn_cls_logits_fpn3_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2"
  input: "gpu_0/rpn_bbox_targets_fpn2"
  input: "gpu_0/rpn_bbox_inside_weights_fpn2"
  input: "gpu_0/rpn_bbox_outside_weights_fpn2"
  input: "gpu_0/__m20_shared"
  output: "gpu_0/rpn_bbox_pred_fpn2_grad"
  name: ""
  type: "SmoothL1LossGradient"
  arg {
    name: "beta"
    f: 0.111111111939
  }
  arg {
    name: "scale"
    f: 1.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2"
  input: "gpu_0/rpn_labels_int32_fpn2"
  input: "gpu_0/loss_rpn_cls_fpn2_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_grad"
  name: ""
  type: "SigmoidCrossEntropyLossGradient"
  arg {
    name: "normalize"
    i: 0
  }
  arg {
    name: "scale"
    f: 0.001953125
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/__m13_shared"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  output: "gpu_0/__m10_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn6_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  output: "_gpu_0/conv_rpn_fpn6_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m10_shared"
  input: "_gpu_0/conv_rpn_fpn6_grad_autosplit_0"
  output: "gpu_0/__m10_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn6"
  input: "gpu_0/__m10_shared"
  output: "gpu_0/__m10_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res5_2_sum_subsampled_2x"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/__m10_shared"
  output: "gpu_0/conv_rpn_fpn2_w_grad"
  output: "gpu_0/conv_rpn_fpn2_b_grad"
  output: "gpu_0/__m13_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn5_grad"
  output: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_0"
  output: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_0"
  output: "gpu_0/__m14_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn5_grad"
  output: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_0"
  output: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_0"
  output: "_gpu_0/conv_rpn_fpn5_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m14_shared"
  input: "_gpu_0/conv_rpn_fpn5_grad_autosplit_0"
  output: "gpu_0/__m14_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn5"
  input: "gpu_0/__m14_shared"
  output: "gpu_0/__m14_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/__m14_shared"
  output: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_0"
  output: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_0"
  output: "_gpu_0/fpn_res5_2_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn4_grad"
  output: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_1"
  output: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_1"
  output: "gpu_0/__m16_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn4_grad"
  output: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_1"
  output: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_1"
  output: "_gpu_0/conv_rpn_fpn4_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m16_shared"
  input: "_gpu_0/conv_rpn_fpn4_grad_autosplit_0"
  output: "gpu_0/__m16_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn4"
  input: "gpu_0/__m16_shared"
  output: "gpu_0/__m16_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res4_5_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/__m16_shared"
  output: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_1"
  output: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_1"
  output: "_gpu_0/fpn_res4_5_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m5_shared"
  input: "_gpu_0/fpn_res4_5_sum_grad_autosplit_0"
  input: "_gpu_0/fpn_res4_5_sum_grad_autosplit_1"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn3_grad"
  output: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_2"
  output: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_2"
  output: "gpu_0/__m11_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn3_grad"
  output: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_2"
  output: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_2"
  output: "_gpu_0/conv_rpn_fpn3_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m11_shared"
  input: "_gpu_0/conv_rpn_fpn3_grad_autosplit_0"
  output: "gpu_0/__m11_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn3"
  input: "gpu_0/__m11_shared"
  output: "gpu_0/__m11_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res3_3_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/__m11_shared"
  output: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_2"
  output: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_2"
  output: "_gpu_0/fpn_res3_3_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m9_shared"
  input: "_gpu_0/fpn_res3_3_sum_grad_autosplit_0"
  input: "_gpu_0/fpn_res3_3_sum_grad_autosplit_1"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/rpn_bbox_pred_fpn2_grad"
  output: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_3"
  output: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_3"
  output: "gpu_0/__m20_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  input: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_0"
  input: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_1"
  input: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_2"
  input: "_gpu_0/rpn_bbox_pred_fpn2_b_grad_autosplit_3"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  input: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_0"
  input: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_1"
  input: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_2"
  input: "_gpu_0/rpn_bbox_pred_fpn2_w_grad_autosplit_3"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/rpn_cls_logits_fpn2_grad"
  output: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_3"
  output: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_3"
  output: "_gpu_0/conv_rpn_fpn2_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  input: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_0"
  input: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_1"
  input: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_2"
  input: "_gpu_0/rpn_cls_logits_fpn2_w_grad_autosplit_3"
  output: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/__m20_shared"
  input: "_gpu_0/conv_rpn_fpn2_grad_autosplit_0"
  output: "gpu_0/__m20_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  input: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_0"
  input: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_1"
  input: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_2"
  input: "_gpu_0/rpn_cls_logits_fpn2_b_grad_autosplit_3"
  output: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2"
  input: "gpu_0/__m20_shared"
  output: "gpu_0/__m20_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_res2_2_sum"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/__m20_shared"
  output: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_3"
  output: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_3"
  output: "_gpu_0/fpn_res2_2_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/conv_rpn_fpn2_b_grad"
  input: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_0"
  input: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_1"
  input: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_2"
  input: "_gpu_0/conv_rpn_fpn2_b_grad_autosplit_3"
  output: "gpu_0/conv_rpn_fpn2_b_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/__m6_shared"
  input: "_gpu_0/fpn_res2_2_sum_grad_autosplit_0"
  input: "_gpu_0/fpn_res2_2_sum_grad_autosplit_1"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_w_grad"
  input: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_0"
  input: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_1"
  input: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_2"
  input: "_gpu_0/conv_rpn_fpn2_w_grad_autosplit_3"
  output: "gpu_0/conv_rpn_fpn2_w_grad"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum"
  input: "gpu_0/fpn_res5_2_sum_subsampled_2x"
  input: "gpu_0/__m13_shared"
  output: "_gpu_0/fpn_res5_2_sum_grad_autosplit_2"
  name: ""
  type: "MaxPoolGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m1_shared"
  input: "_gpu_0/fpn_res5_2_sum_grad_autosplit_0"
  input: "_gpu_0/fpn_res5_2_sum_grad_autosplit_1"
  input: "_gpu_0/fpn_res5_2_sum_grad_autosplit_2"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum"
  input: "gpu_0/fpn_res2_2_sum_w"
  input: "gpu_0/__m6_shared"
  output: "gpu_0/fpn_res2_2_sum_w_grad"
  output: "gpu_0/fpn_res2_2_sum_b_grad"
  output: "gpu_0/__m8_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum"
  input: "gpu_0/fpn_res3_3_sum_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/fpn_res3_3_sum_w_grad"
  output: "gpu_0/fpn_res3_3_sum_b_grad"
  output: "gpu_0/__m18_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum"
  input: "gpu_0/fpn_res4_5_sum_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/fpn_res4_5_sum_w_grad"
  output: "gpu_0/fpn_res4_5_sum_b_grad"
  output: "gpu_0/__m19_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum"
  input: "gpu_0/fpn_res5_2_sum_w"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/fpn_res5_2_sum_w_grad"
  output: "gpu_0/fpn_res5_2_sum_b_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum"
  input: "gpu_0/__m8_shared"
  output: "_gpu_0/fpn_inner_res3_3_sum_grad_autosplit_0"
  name: ""
  type: "UpsampleNearestGradient"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m18_shared"
  input: "_gpu_0/fpn_inner_res3_3_sum_grad_autosplit_0"
  output: "gpu_0/__m18_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  input: "gpu_0/__m8_shared"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b_grad"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum"
  input: "gpu_0/__m18_shared"
  output: "_gpu_0/fpn_inner_res4_5_sum_grad_autosplit_0"
  name: ""
  type: "UpsampleNearestGradient"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m19_shared"
  input: "_gpu_0/fpn_inner_res4_5_sum_grad_autosplit_0"
  output: "gpu_0/__m19_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  input: "gpu_0/__m18_shared"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b_grad"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum"
  input: "gpu_0/__m19_shared"
  output: "_gpu_0/fpn_inner_res5_2_sum_grad_autosplit_0"
  name: ""
  type: "UpsampleNearestGradient"
  arg {
    name: "scale"
    i: 2
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/__m2_shared"
  input: "_gpu_0/fpn_inner_res5_2_sum_grad_autosplit_0"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  input: "gpu_0/__m19_shared"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_sum"
  input: "gpu_0/fpn_inner_res5_2_sum_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/fpn_inner_res5_2_sum_w_grad"
  output: "gpu_0/fpn_inner_res5_2_sum_b_grad"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "stride"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_sum"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2c_bn_s"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/res5_2_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_2_branch2c_w_grad"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2b_bn_s"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/res5_2_branch2b_w"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/res5_2_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_2_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/res5_2_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_2_branch2a_w_grad"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m0_shared"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res5_1_branch2c_bn"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2c_bn_s"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/res5_1_branch2c_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_1_branch2c_w_grad"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2b_bn_s"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/res5_1_branch2b_w"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/res5_1_branch2b_w_grad"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_1_branch2a_bn_s"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/res5_1_branch2a_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_1_branch2a_w_grad"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m1_shared"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res5_0_branch2c_bn"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m1_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch1_bn_s"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m2_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/res5_0_branch1_w"
  input: "gpu_0/__m2_shared"
  output: "gpu_0/res5_0_branch1_w_grad"
  output: "_gpu_0/res4_5_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2c_bn_s"
  input: "gpu_0/__m1_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2c_w"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/res5_0_branch2c_w_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2b_bn_s"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/res5_0_branch2b_w"
  input: "gpu_0/res5_0_branch2b_grad"
  output: "gpu_0/res5_0_branch2b_w_grad"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res5_0_branch2a_bn_s"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/__m0_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/res5_0_branch2a_w"
  input: "gpu_0/__m0_shared"
  output: "gpu_0/res5_0_branch2a_w_grad"
  output: "_gpu_0/res4_5_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m5_shared"
  input: "_gpu_0/res4_5_sum_grad_autosplit_0"
  input: "_gpu_0/res4_5_sum_grad_autosplit_1"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_5_sum"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2c_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/res4_5_branch2c_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_5_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/res4_5_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_5_branch2b_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_5_branch2a_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/res4_5_branch2a_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_5_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_4_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/res4_4_branch2c_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_4_branch2c_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2b_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/res4_4_branch2b_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_4_branch2b_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_4_branch2a_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/res4_4_branch2a_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_4_branch2a_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m3_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_3_branch2c_bn"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2c_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/res4_3_branch2c_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_3_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/res4_3_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_3_branch2b_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_3_branch2a_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/res4_3_branch2a_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_3_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_2_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/res4_2_branch2c_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_2_branch2c_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2b_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/res4_2_branch2b_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_2_branch2b_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_2_branch2a_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/res4_2_branch2a_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_2_branch2a_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m3_shared"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_1_branch2c_bn"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2c_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/res4_1_branch2c_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_1_branch2c_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2b_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/res4_1_branch2b_w"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/res4_1_branch2b_w_grad"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_1_branch2a_bn_s"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/res4_1_branch2a_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_1_branch2a_w_grad"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m4_shared"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res4_0_branch2c_bn"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m4_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch1_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m5_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch1_w"
  input: "gpu_0/__m5_shared"
  output: "gpu_0/res4_0_branch1_w_grad"
  output: "_gpu_0/res3_3_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2c_bn_s"
  input: "gpu_0/__m4_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2c_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_0_branch2c_w_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2b_bn_s"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/res4_0_branch2b_w"
  input: "gpu_0/res4_0_branch2b_grad"
  output: "gpu_0/res4_0_branch2b_w_grad"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res4_0_branch2a_bn_s"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/__m3_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/res4_0_branch2a_w"
  input: "gpu_0/__m3_shared"
  output: "gpu_0/res4_0_branch2a_w_grad"
  output: "_gpu_0/res3_3_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m9_shared"
  input: "_gpu_0/res3_3_sum_grad_autosplit_0"
  input: "_gpu_0/res3_3_sum_grad_autosplit_1"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_3_sum"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2c_bn_s"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/res3_3_branch2c_w"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/res3_3_branch2c_w_grad"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2b_bn_s"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/res3_3_branch2b_w"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/res3_3_branch2b_w_grad"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_3_branch2a_bn_s"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/res3_3_branch2a_w"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/res3_3_branch2a_w_grad"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m17_shared"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_2_branch2c_bn"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2c_bn_s"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/res3_2_branch2c_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/res3_2_branch2c_w_grad"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2b_bn_s"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/res3_2_branch2b_w"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/res3_2_branch2b_w_grad"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_2_branch2a_bn_s"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/res3_2_branch2a_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/res3_2_branch2a_w_grad"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m12_shared"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_1_branch2c_bn"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2c_bn_s"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/res3_1_branch2c_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/res3_1_branch2c_w_grad"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2b_bn_s"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/res3_1_branch2b_w"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/res3_1_branch2b_w_grad"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_1_branch2a_bn_s"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/res3_1_branch2a_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/res3_1_branch2a_w_grad"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m17_shared"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_0_branch2c_bn"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m17_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch1_bn_s"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m9_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch1_w"
  input: "gpu_0/__m9_shared"
  output: "gpu_0/res3_0_branch1_w_grad"
  output: "_gpu_0/res2_2_sum_grad_autosplit_0"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "kernel"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2c_bn_s"
  input: "gpu_0/__m17_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2c_w"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/res3_0_branch2c_w_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2b_bn_s"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_grad"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/res3_0_branch2b_w"
  input: "gpu_0/res3_0_branch2b_grad"
  output: "gpu_0/res3_0_branch2b_w_grad"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 3
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 1
  }
  arg {
    name: "pad"
    i: 1
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "ReluGradient"
  arg {
    name: "cudnn_exhaustive_search"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/res3_0_branch2a_bn_s"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/__m12_shared"
  name: ""
  type: "AffineChannelGradient"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  is_gradient_op: true
}
op {
  input: "gpu_0/res2_2_sum"
  input: "gpu_0/res3_0_branch2a_w"
  input: "gpu_0/__m12_shared"
  output: "gpu_0/res3_0_branch2a_w_grad"
  output: "_gpu_0/res2_2_sum_grad_autosplit_1"
  name: ""
  type: "ConvGradient"
  arg {
    name: "no_bias"
    i: 1
  }
  arg {
    name: "kernel"
    i: 1
  }
  arg {
    name: "exhaustive_search"
    i: 0
  }
  arg {
    name: "stride"
    i: 2
  }
  arg {
    name: "pad"
    i: 0
  }
  arg {
    name: "order"
    s: "NCHW"
  }
  arg {
    name: "dilation"
    i: 1
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  engine: "CUDNN"
  is_gradient_op: true
}
op {
  input: "gpu_0/__m6_shared"
  input: "_gpu_0/res2_2_sum_grad_autosplit_0"
  input: "_gpu_0/res2_2_sum_grad_autosplit_1"
  output: "gpu_0/__m6_shared"
  name: ""
  type: "Sum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 42, in build_data_parallel_model\n    model.AddGradientOperators(all_loss_gradients)\n  File \"/home/pding/download/caffe2/build/caffe2/python/model_helper.py\", line 350, in AddGradientOperators\n    self.grad_map = self.net.AddGradientOperators(*args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1846, in AddGradientOperators\n    self._net.op[skip:], ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 1113, in GetBackwardPass\n    return ir.GetBackwardPass(ys)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 994, in GetBackwardPass\n    forward_op_idx)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 887, in DoGradientAccumulation\n    sum_ops, g = self._MakeSumOps(input_name, input_version)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 802, in _MakeSumOps\n    sum_ops, g = self._MakeDenseSumOps(generators, out_base_name)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 741, in _MakeDenseSumOps\n    BlobReference(out_base_name))]\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2a_w_grad"
  input: "gpu_0/res3_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2a_w"
  output: "gpu_0/res3_0_branch2a_w_grad"
  output: "gpu_0/res3_0_branch2a_w_momentum"
  output: "gpu_0/res3_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2b_w_grad"
  input: "gpu_0/res3_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2b_w"
  output: "gpu_0/res3_0_branch2b_w_grad"
  output: "gpu_0/res3_0_branch2b_w_momentum"
  output: "gpu_0/res3_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch2c_w_grad"
  input: "gpu_0/res3_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch2c_w"
  output: "gpu_0/res3_0_branch2c_w_grad"
  output: "gpu_0/res3_0_branch2c_w_momentum"
  output: "gpu_0/res3_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_0_branch1_w_grad"
  input: "gpu_0/res3_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_0_branch1_w"
  output: "gpu_0/res3_0_branch1_w_grad"
  output: "gpu_0/res3_0_branch1_w_momentum"
  output: "gpu_0/res3_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2a_w_grad"
  input: "gpu_0/res3_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2a_w"
  output: "gpu_0/res3_1_branch2a_w_grad"
  output: "gpu_0/res3_1_branch2a_w_momentum"
  output: "gpu_0/res3_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2b_w_grad"
  input: "gpu_0/res3_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2b_w"
  output: "gpu_0/res3_1_branch2b_w_grad"
  output: "gpu_0/res3_1_branch2b_w_momentum"
  output: "gpu_0/res3_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_1_branch2c_w_grad"
  input: "gpu_0/res3_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_1_branch2c_w"
  output: "gpu_0/res3_1_branch2c_w_grad"
  output: "gpu_0/res3_1_branch2c_w_momentum"
  output: "gpu_0/res3_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2a_w_grad"
  input: "gpu_0/res3_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2a_w"
  output: "gpu_0/res3_2_branch2a_w_grad"
  output: "gpu_0/res3_2_branch2a_w_momentum"
  output: "gpu_0/res3_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2b_w_grad"
  input: "gpu_0/res3_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2b_w"
  output: "gpu_0/res3_2_branch2b_w_grad"
  output: "gpu_0/res3_2_branch2b_w_momentum"
  output: "gpu_0/res3_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_2_branch2c_w_grad"
  input: "gpu_0/res3_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_2_branch2c_w"
  output: "gpu_0/res3_2_branch2c_w_grad"
  output: "gpu_0/res3_2_branch2c_w_momentum"
  output: "gpu_0/res3_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2a_w_grad"
  input: "gpu_0/res3_3_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2a_w"
  output: "gpu_0/res3_3_branch2a_w_grad"
  output: "gpu_0/res3_3_branch2a_w_momentum"
  output: "gpu_0/res3_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2b_w_grad"
  input: "gpu_0/res3_3_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2b_w"
  output: "gpu_0/res3_3_branch2b_w_grad"
  output: "gpu_0/res3_3_branch2b_w_momentum"
  output: "gpu_0/res3_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res3_3_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res3_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res3_3_branch2c_w_grad"
  input: "gpu_0/res3_3_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res3_3_branch2c_w"
  output: "gpu_0/res3_3_branch2c_w_grad"
  output: "gpu_0/res3_3_branch2c_w_momentum"
  output: "gpu_0/res3_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2a_w_grad"
  input: "gpu_0/res4_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2a_w"
  output: "gpu_0/res4_0_branch2a_w_grad"
  output: "gpu_0/res4_0_branch2a_w_momentum"
  output: "gpu_0/res4_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2b_w_grad"
  input: "gpu_0/res4_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2b_w"
  output: "gpu_0/res4_0_branch2b_w_grad"
  output: "gpu_0/res4_0_branch2b_w_momentum"
  output: "gpu_0/res4_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch2c_w_grad"
  input: "gpu_0/res4_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch2c_w"
  output: "gpu_0/res4_0_branch2c_w_grad"
  output: "gpu_0/res4_0_branch2c_w_momentum"
  output: "gpu_0/res4_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_0_branch1_w_grad"
  input: "gpu_0/res4_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_0_branch1_w"
  output: "gpu_0/res4_0_branch1_w_grad"
  output: "gpu_0/res4_0_branch1_w_momentum"
  output: "gpu_0/res4_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2a_w_grad"
  input: "gpu_0/res4_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2a_w"
  output: "gpu_0/res4_1_branch2a_w_grad"
  output: "gpu_0/res4_1_branch2a_w_momentum"
  output: "gpu_0/res4_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2b_w_grad"
  input: "gpu_0/res4_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2b_w"
  output: "gpu_0/res4_1_branch2b_w_grad"
  output: "gpu_0/res4_1_branch2b_w_momentum"
  output: "gpu_0/res4_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_1_branch2c_w_grad"
  input: "gpu_0/res4_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_1_branch2c_w"
  output: "gpu_0/res4_1_branch2c_w_grad"
  output: "gpu_0/res4_1_branch2c_w_momentum"
  output: "gpu_0/res4_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2a_w_grad"
  input: "gpu_0/res4_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2a_w"
  output: "gpu_0/res4_2_branch2a_w_grad"
  output: "gpu_0/res4_2_branch2a_w_momentum"
  output: "gpu_0/res4_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2b_w_grad"
  input: "gpu_0/res4_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2b_w"
  output: "gpu_0/res4_2_branch2b_w_grad"
  output: "gpu_0/res4_2_branch2b_w_momentum"
  output: "gpu_0/res4_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_2_branch2c_w_grad"
  input: "gpu_0/res4_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_2_branch2c_w"
  output: "gpu_0/res4_2_branch2c_w_grad"
  output: "gpu_0/res4_2_branch2c_w_momentum"
  output: "gpu_0/res4_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2a_w_grad"
  input: "gpu_0/res4_3_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2a_w"
  output: "gpu_0/res4_3_branch2a_w_grad"
  output: "gpu_0/res4_3_branch2a_w_momentum"
  output: "gpu_0/res4_3_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2b_w_grad"
  input: "gpu_0/res4_3_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2b_w"
  output: "gpu_0/res4_3_branch2b_w_grad"
  output: "gpu_0/res4_3_branch2b_w_momentum"
  output: "gpu_0/res4_3_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_3_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_3_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_3_branch2c_w_grad"
  input: "gpu_0/res4_3_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_3_branch2c_w"
  output: "gpu_0/res4_3_branch2c_w_grad"
  output: "gpu_0/res4_3_branch2c_w_momentum"
  output: "gpu_0/res4_3_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2a_w_grad"
  input: "gpu_0/res4_4_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2a_w"
  output: "gpu_0/res4_4_branch2a_w_grad"
  output: "gpu_0/res4_4_branch2a_w_momentum"
  output: "gpu_0/res4_4_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2b_w_grad"
  input: "gpu_0/res4_4_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2b_w"
  output: "gpu_0/res4_4_branch2b_w_grad"
  output: "gpu_0/res4_4_branch2b_w_momentum"
  output: "gpu_0/res4_4_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_4_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_4_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_4_branch2c_w_grad"
  input: "gpu_0/res4_4_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_4_branch2c_w"
  output: "gpu_0/res4_4_branch2c_w_grad"
  output: "gpu_0/res4_4_branch2c_w_momentum"
  output: "gpu_0/res4_4_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2a_w_grad"
  input: "gpu_0/res4_5_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2a_w"
  output: "gpu_0/res4_5_branch2a_w_grad"
  output: "gpu_0/res4_5_branch2a_w_momentum"
  output: "gpu_0/res4_5_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2b_w_grad"
  input: "gpu_0/res4_5_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2b_w"
  output: "gpu_0/res4_5_branch2b_w_grad"
  output: "gpu_0/res4_5_branch2b_w_momentum"
  output: "gpu_0/res4_5_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res4_5_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res4_5_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res4_5_branch2c_w_grad"
  input: "gpu_0/res4_5_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res4_5_branch2c_w"
  output: "gpu_0/res4_5_branch2c_w_grad"
  output: "gpu_0/res4_5_branch2c_w_momentum"
  output: "gpu_0/res4_5_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2a_w_grad"
  input: "gpu_0/res5_0_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2a_w"
  output: "gpu_0/res5_0_branch2a_w_grad"
  output: "gpu_0/res5_0_branch2a_w_momentum"
  output: "gpu_0/res5_0_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2b_w_grad"
  input: "gpu_0/res5_0_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2b_w"
  output: "gpu_0/res5_0_branch2b_w_grad"
  output: "gpu_0/res5_0_branch2b_w_momentum"
  output: "gpu_0/res5_0_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch2c_w_grad"
  input: "gpu_0/res5_0_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch2c_w"
  output: "gpu_0/res5_0_branch2c_w_grad"
  output: "gpu_0/res5_0_branch2c_w_momentum"
  output: "gpu_0/res5_0_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_0_branch1_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_0_branch1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_0_branch1_w_grad"
  input: "gpu_0/res5_0_branch1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_0_branch1_w"
  output: "gpu_0/res5_0_branch1_w_grad"
  output: "gpu_0/res5_0_branch1_w_momentum"
  output: "gpu_0/res5_0_branch1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2a_w_grad"
  input: "gpu_0/res5_1_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2a_w"
  output: "gpu_0/res5_1_branch2a_w_grad"
  output: "gpu_0/res5_1_branch2a_w_momentum"
  output: "gpu_0/res5_1_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2b_w_grad"
  input: "gpu_0/res5_1_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2b_w"
  output: "gpu_0/res5_1_branch2b_w_grad"
  output: "gpu_0/res5_1_branch2b_w_momentum"
  output: "gpu_0/res5_1_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_1_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_1_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_1_branch2c_w_grad"
  input: "gpu_0/res5_1_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_1_branch2c_w"
  output: "gpu_0/res5_1_branch2c_w_grad"
  output: "gpu_0/res5_1_branch2c_w_momentum"
  output: "gpu_0/res5_1_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2a_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2a_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2a_w_grad"
  input: "gpu_0/res5_2_branch2a_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2a_w"
  output: "gpu_0/res5_2_branch2a_w_grad"
  output: "gpu_0/res5_2_branch2a_w_momentum"
  output: "gpu_0/res5_2_branch2a_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2b_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2b_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2b_w_grad"
  input: "gpu_0/res5_2_branch2b_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2b_w"
  output: "gpu_0/res5_2_branch2b_w_grad"
  output: "gpu_0/res5_2_branch2b_w_momentum"
  output: "gpu_0/res5_2_branch2b_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/res5_2_branch2c_w"
  input: "gpu_0/wd"
  output: "gpu_0/res5_2_branch2c_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/res5_2_branch2c_w_grad"
  input: "gpu_0/res5_2_branch2c_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/res5_2_branch2c_w"
  output: "gpu_0/res5_2_branch2c_w_grad"
  output: "gpu_0/res5_2_branch2c_w_momentum"
  output: "gpu_0/res5_2_branch2c_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_inner_res5_2_sum_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_inner_res5_2_sum_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_w_grad"
  input: "gpu_0/fpn_inner_res5_2_sum_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res5_2_sum_w"
  output: "gpu_0/fpn_inner_res5_2_sum_w_grad"
  output: "gpu_0/fpn_inner_res5_2_sum_w_momentum"
  output: "gpu_0/fpn_inner_res5_2_sum_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_b_grad"
  output: "gpu_0/fpn_inner_res5_2_sum_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res5_2_sum_b_grad"
  input: "gpu_0/fpn_inner_res5_2_sum_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res5_2_sum_b"
  output: "gpu_0/fpn_inner_res5_2_sum_b_grad"
  output: "gpu_0/fpn_inner_res5_2_sum_b_momentum"
  output: "gpu_0/fpn_inner_res5_2_sum_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w_grad"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w_momentum"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b_grad"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b_momentum"
  output: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w_grad"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w_momentum"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b_grad"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b_momentum"
  output: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w_grad"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w_grad"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w_momentum"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b_grad"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b_grad"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b_momentum"
  output: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_res5_2_sum_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_res5_2_sum_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_w_grad"
  input: "gpu_0/fpn_res5_2_sum_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res5_2_sum_w"
  output: "gpu_0/fpn_res5_2_sum_w_grad"
  output: "gpu_0/fpn_res5_2_sum_w_momentum"
  output: "gpu_0/fpn_res5_2_sum_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_b_grad"
  output: "gpu_0/fpn_res5_2_sum_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res5_2_sum_b_grad"
  input: "gpu_0/fpn_res5_2_sum_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res5_2_sum_b"
  output: "gpu_0/fpn_res5_2_sum_b_grad"
  output: "gpu_0/fpn_res5_2_sum_b_momentum"
  output: "gpu_0/fpn_res5_2_sum_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_res4_5_sum_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_res4_5_sum_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_w_grad"
  input: "gpu_0/fpn_res4_5_sum_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res4_5_sum_w"
  output: "gpu_0/fpn_res4_5_sum_w_grad"
  output: "gpu_0/fpn_res4_5_sum_w_momentum"
  output: "gpu_0/fpn_res4_5_sum_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_b_grad"
  output: "gpu_0/fpn_res4_5_sum_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res4_5_sum_b_grad"
  input: "gpu_0/fpn_res4_5_sum_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res4_5_sum_b"
  output: "gpu_0/fpn_res4_5_sum_b_grad"
  output: "gpu_0/fpn_res4_5_sum_b_momentum"
  output: "gpu_0/fpn_res4_5_sum_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_res3_3_sum_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_res3_3_sum_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_w_grad"
  input: "gpu_0/fpn_res3_3_sum_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res3_3_sum_w"
  output: "gpu_0/fpn_res3_3_sum_w_grad"
  output: "gpu_0/fpn_res3_3_sum_w_momentum"
  output: "gpu_0/fpn_res3_3_sum_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_b_grad"
  output: "gpu_0/fpn_res3_3_sum_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res3_3_sum_b_grad"
  input: "gpu_0/fpn_res3_3_sum_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res3_3_sum_b"
  output: "gpu_0/fpn_res3_3_sum_b_grad"
  output: "gpu_0/fpn_res3_3_sum_b_momentum"
  output: "gpu_0/fpn_res3_3_sum_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fpn_res2_2_sum_w"
  input: "gpu_0/wd"
  output: "gpu_0/fpn_res2_2_sum_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_w_grad"
  input: "gpu_0/fpn_res2_2_sum_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res2_2_sum_w"
  output: "gpu_0/fpn_res2_2_sum_w_grad"
  output: "gpu_0/fpn_res2_2_sum_w_momentum"
  output: "gpu_0/fpn_res2_2_sum_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_b_grad"
  output: "gpu_0/fpn_res2_2_sum_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fpn_res2_2_sum_b_grad"
  input: "gpu_0/fpn_res2_2_sum_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fpn_res2_2_sum_b"
  output: "gpu_0/fpn_res2_2_sum_b_grad"
  output: "gpu_0/fpn_res2_2_sum_b_momentum"
  output: "gpu_0/fpn_res2_2_sum_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/conv_rpn_fpn2_w"
  input: "gpu_0/wd"
  output: "gpu_0/conv_rpn_fpn2_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_w_grad"
  input: "gpu_0/conv_rpn_fpn2_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv_rpn_fpn2_w"
  output: "gpu_0/conv_rpn_fpn2_w_grad"
  output: "gpu_0/conv_rpn_fpn2_w_momentum"
  output: "gpu_0/conv_rpn_fpn2_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_b_grad"
  output: "gpu_0/conv_rpn_fpn2_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv_rpn_fpn2_b_grad"
  input: "gpu_0/conv_rpn_fpn2_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv_rpn_fpn2_b"
  output: "gpu_0/conv_rpn_fpn2_b_grad"
  output: "gpu_0/conv_rpn_fpn2_b_momentum"
  output: "gpu_0/conv_rpn_fpn2_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  input: "gpu_0/wd"
  output: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  input: "gpu_0/rpn_cls_logits_fpn2_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_cls_logits_fpn2_w"
  output: "gpu_0/rpn_cls_logits_fpn2_w_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_w_momentum"
  output: "gpu_0/rpn_cls_logits_fpn2_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  input: "gpu_0/rpn_cls_logits_fpn2_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_cls_logits_fpn2_b"
  output: "gpu_0/rpn_cls_logits_fpn2_b_grad"
  output: "gpu_0/rpn_cls_logits_fpn2_b_momentum"
  output: "gpu_0/rpn_cls_logits_fpn2_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  input: "gpu_0/wd"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  input: "gpu_0/rpn_bbox_pred_fpn2_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_bbox_pred_fpn2_w"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_grad"
  output: "gpu_0/rpn_bbox_pred_fpn2_w_momentum"
  output: "gpu_0/rpn_bbox_pred_fpn2_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  input: "gpu_0/rpn_bbox_pred_fpn2_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/rpn_bbox_pred_fpn2_b"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_grad"
  output: "gpu_0/rpn_bbox_pred_fpn2_b_momentum"
  output: "gpu_0/rpn_bbox_pred_fpn2_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fc6_w"
  input: "gpu_0/wd"
  output: "gpu_0/fc6_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_w_grad"
  input: "gpu_0/fc6_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fc6_w"
  output: "gpu_0/fc6_w_grad"
  output: "gpu_0/fc6_w_momentum"
  output: "gpu_0/fc6_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_b_grad"
  output: "gpu_0/fc6_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc6_b_grad"
  input: "gpu_0/fc6_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fc6_b"
  output: "gpu_0/fc6_b_grad"
  output: "gpu_0/fc6_b_momentum"
  output: "gpu_0/fc6_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/fc7_w"
  input: "gpu_0/wd"
  output: "gpu_0/fc7_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_w_grad"
  input: "gpu_0/fc7_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fc7_w"
  output: "gpu_0/fc7_w_grad"
  output: "gpu_0/fc7_w_momentum"
  output: "gpu_0/fc7_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_b_grad"
  output: "gpu_0/fc7_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/fc7_b_grad"
  input: "gpu_0/fc7_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/fc7_b"
  output: "gpu_0/fc7_b_grad"
  output: "gpu_0/fc7_b_momentum"
  output: "gpu_0/fc7_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/cls_score_w"
  input: "gpu_0/wd"
  output: "gpu_0/cls_score_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_w_grad"
  input: "gpu_0/cls_score_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/cls_score_w"
  output: "gpu_0/cls_score_w_grad"
  output: "gpu_0/cls_score_w_momentum"
  output: "gpu_0/cls_score_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  output: "gpu_0/cls_score_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/cls_score_b_grad"
  input: "gpu_0/cls_score_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/cls_score_b"
  output: "gpu_0/cls_score_b_grad"
  output: "gpu_0/cls_score_b_momentum"
  output: "gpu_0/cls_score_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/bbox_pred_w"
  input: "gpu_0/wd"
  output: "gpu_0/bbox_pred_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_w_grad"
  input: "gpu_0/bbox_pred_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/bbox_pred_w"
  output: "gpu_0/bbox_pred_w_grad"
  output: "gpu_0/bbox_pred_w_momentum"
  output: "gpu_0/bbox_pred_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/bbox_pred_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/bbox_pred_b_grad"
  input: "gpu_0/bbox_pred_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/bbox_pred_b"
  output: "gpu_0/bbox_pred_b_grad"
  output: "gpu_0/bbox_pred_b_momentum"
  output: "gpu_0/bbox_pred_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/_[mask]_fcn1_w"
  input: "gpu_0/wd"
  output: "gpu_0/_[mask]_fcn1_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_w_grad"
  input: "gpu_0/_[mask]_fcn1_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn1_w"
  output: "gpu_0/_[mask]_fcn1_w_grad"
  output: "gpu_0/_[mask]_fcn1_w_momentum"
  output: "gpu_0/_[mask]_fcn1_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_b_grad"
  output: "gpu_0/_[mask]_fcn1_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn1_b_grad"
  input: "gpu_0/_[mask]_fcn1_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn1_b"
  output: "gpu_0/_[mask]_fcn1_b_grad"
  output: "gpu_0/_[mask]_fcn1_b_momentum"
  output: "gpu_0/_[mask]_fcn1_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/_[mask]_fcn2_w"
  input: "gpu_0/wd"
  output: "gpu_0/_[mask]_fcn2_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_w_grad"
  input: "gpu_0/_[mask]_fcn2_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn2_w"
  output: "gpu_0/_[mask]_fcn2_w_grad"
  output: "gpu_0/_[mask]_fcn2_w_momentum"
  output: "gpu_0/_[mask]_fcn2_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_b_grad"
  output: "gpu_0/_[mask]_fcn2_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn2_b_grad"
  input: "gpu_0/_[mask]_fcn2_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn2_b"
  output: "gpu_0/_[mask]_fcn2_b_grad"
  output: "gpu_0/_[mask]_fcn2_b_momentum"
  output: "gpu_0/_[mask]_fcn2_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/_[mask]_fcn3_w"
  input: "gpu_0/wd"
  output: "gpu_0/_[mask]_fcn3_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_w_grad"
  input: "gpu_0/_[mask]_fcn3_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn3_w"
  output: "gpu_0/_[mask]_fcn3_w_grad"
  output: "gpu_0/_[mask]_fcn3_w_momentum"
  output: "gpu_0/_[mask]_fcn3_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_b_grad"
  output: "gpu_0/_[mask]_fcn3_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn3_b_grad"
  input: "gpu_0/_[mask]_fcn3_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn3_b"
  output: "gpu_0/_[mask]_fcn3_b_grad"
  output: "gpu_0/_[mask]_fcn3_b_momentum"
  output: "gpu_0/_[mask]_fcn3_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/_[mask]_fcn4_w"
  input: "gpu_0/wd"
  output: "gpu_0/_[mask]_fcn4_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_w_grad"
  input: "gpu_0/_[mask]_fcn4_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn4_w"
  output: "gpu_0/_[mask]_fcn4_w_grad"
  output: "gpu_0/_[mask]_fcn4_w_momentum"
  output: "gpu_0/_[mask]_fcn4_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_b_grad"
  output: "gpu_0/_[mask]_fcn4_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/_[mask]_fcn4_b_grad"
  input: "gpu_0/_[mask]_fcn4_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/_[mask]_fcn4_b"
  output: "gpu_0/_[mask]_fcn4_b_grad"
  output: "gpu_0/_[mask]_fcn4_b_momentum"
  output: "gpu_0/_[mask]_fcn4_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/conv5_mask_w"
  input: "gpu_0/wd"
  output: "gpu_0/conv5_mask_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_w_grad"
  input: "gpu_0/conv5_mask_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv5_mask_w"
  output: "gpu_0/conv5_mask_w_grad"
  output: "gpu_0/conv5_mask_w_momentum"
  output: "gpu_0/conv5_mask_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_b_grad"
  output: "gpu_0/conv5_mask_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/conv5_mask_b_grad"
  input: "gpu_0/conv5_mask_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/conv5_mask_b"
  output: "gpu_0/conv5_mask_b_grad"
  output: "gpu_0/conv5_mask_b_momentum"
  output: "gpu_0/conv5_mask_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_w_grad"
  input: "gpu_0/one"
  input: "gpu_0/mask_fcn_logits_w"
  input: "gpu_0/wd"
  output: "gpu_0/mask_fcn_logits_w_grad"
  name: ""
  type: "WeightedSum"
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 117, in add_single_gpu_param_update_ops\n    model.WeightedSum([param_grad, one, param, wd], param_grad)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_w_grad"
  input: "gpu_0/mask_fcn_logits_w_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/mask_fcn_logits_w"
  output: "gpu_0/mask_fcn_logits_w_grad"
  output: "gpu_0/mask_fcn_logits_w_momentum"
  output: "gpu_0/mask_fcn_logits_w"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_b_grad"
  output: "gpu_0/mask_fcn_logits_b_grad"
  name: ""
  type: "Scale"
  arg {
    name: "scale"
    f: 2.0
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 114, in add_single_gpu_param_update_ops\n    model.Scale(param_grad, param_grad, scale=2.0)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
op {
  input: "gpu_0/mask_fcn_logits_b_grad"
  input: "gpu_0/mask_fcn_logits_b_momentum"
  input: "gpu_0/lr"
  input: "gpu_0/mask_fcn_logits_b"
  output: "gpu_0/mask_fcn_logits_b_grad"
  output: "gpu_0/mask_fcn_logits_b_momentum"
  output: "gpu_0/mask_fcn_logits_b"
  name: ""
  type: "MomentumSGDUpdate"
  arg {
    name: "momentum"
    f: 0.899999976158
  }
  device_option {
    device_type: 1
    cuda_gpu_id: 0
  }
  debug_info: "  File \"tools/train_net.py\", line 287, in <module>\n    main()\n  File \"tools/train_net.py\", line 119, in main\n    checkpoints = train_model()\n  File \"tools/train_net.py\", line 129, in train_model\n    model, start_iter, checkpoints, output_dir = create_model()\n  File \"tools/train_net.py\", line 208, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"/home/pding/download/Detectron/lib/modeling/model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 49, in build_data_parallel_model\n    add_single_gpu_param_update_ops(model, gpu_id)\n  File \"/home/pding/download/Detectron/lib/modeling/optimizer.py\", line 122, in add_single_gpu_param_update_ops\n    momentum=cfg.SOLVER.MOMENTUM\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2047, in <lambda>\n    op_type, *args, **kwargs)\n  File \"/home/pding/download/caffe2/build/caffe2/python/core.py\", line 2024, in _CreateAndAddToSelf\n    op = CreateOperator(op_type, inputs, outputs, **kwargs)\n"
}
type: "dag"
num_workers: 4
external_input: "gpu_0/data"
external_input: "gpu_0/conv1_w"
external_input: "gpu_0/res_conv1_bn_s"
external_input: "gpu_0/res_conv1_bn_b"
external_input: "gpu_0/res2_0_branch2a_w"
external_input: "gpu_0/res2_0_branch2a_bn_s"
external_input: "gpu_0/res2_0_branch2a_bn_b"
external_input: "gpu_0/res2_0_branch2b_w"
external_input: "gpu_0/res2_0_branch2b_bn_s"
external_input: "gpu_0/res2_0_branch2b_bn_b"
external_input: "gpu_0/res2_0_branch2c_w"
external_input: "gpu_0/res2_0_branch2c_bn_s"
external_input: "gpu_0/res2_0_branch2c_bn_b"
external_input: "gpu_0/res2_0_branch1_w"
external_input: "gpu_0/res2_0_branch1_bn_s"
external_input: "gpu_0/res2_0_branch1_bn_b"
external_input: "gpu_0/res2_1_branch2a_w"
external_input: "gpu_0/res2_1_branch2a_bn_s"
external_input: "gpu_0/res2_1_branch2a_bn_b"
external_input: "gpu_0/res2_1_branch2b_w"
external_input: "gpu_0/res2_1_branch2b_bn_s"
external_input: "gpu_0/res2_1_branch2b_bn_b"
external_input: "gpu_0/res2_1_branch2c_w"
external_input: "gpu_0/res2_1_branch2c_bn_s"
external_input: "gpu_0/res2_1_branch2c_bn_b"
external_input: "gpu_0/res2_2_branch2a_w"
external_input: "gpu_0/res2_2_branch2a_bn_s"
external_input: "gpu_0/res2_2_branch2a_bn_b"
external_input: "gpu_0/res2_2_branch2b_w"
external_input: "gpu_0/res2_2_branch2b_bn_s"
external_input: "gpu_0/res2_2_branch2b_bn_b"
external_input: "gpu_0/res2_2_branch2c_w"
external_input: "gpu_0/res2_2_branch2c_bn_s"
external_input: "gpu_0/res2_2_branch2c_bn_b"
external_input: "gpu_0/res3_0_branch2a_w"
external_input: "gpu_0/res3_0_branch2a_bn_s"
external_input: "gpu_0/res3_0_branch2a_bn_b"
external_input: "gpu_0/res3_0_branch2b_w"
external_input: "gpu_0/res3_0_branch2b_bn_s"
external_input: "gpu_0/res3_0_branch2b_bn_b"
external_input: "gpu_0/res3_0_branch2c_w"
external_input: "gpu_0/res3_0_branch2c_bn_s"
external_input: "gpu_0/res3_0_branch2c_bn_b"
external_input: "gpu_0/res3_0_branch1_w"
external_input: "gpu_0/res3_0_branch1_bn_s"
external_input: "gpu_0/res3_0_branch1_bn_b"
external_input: "gpu_0/res3_1_branch2a_w"
external_input: "gpu_0/res3_1_branch2a_bn_s"
external_input: "gpu_0/res3_1_branch2a_bn_b"
external_input: "gpu_0/res3_1_branch2b_w"
external_input: "gpu_0/res3_1_branch2b_bn_s"
external_input: "gpu_0/res3_1_branch2b_bn_b"
external_input: "gpu_0/res3_1_branch2c_w"
external_input: "gpu_0/res3_1_branch2c_bn_s"
external_input: "gpu_0/res3_1_branch2c_bn_b"
external_input: "gpu_0/res3_2_branch2a_w"
external_input: "gpu_0/res3_2_branch2a_bn_s"
external_input: "gpu_0/res3_2_branch2a_bn_b"
external_input: "gpu_0/res3_2_branch2b_w"
external_input: "gpu_0/res3_2_branch2b_bn_s"
external_input: "gpu_0/res3_2_branch2b_bn_b"
external_input: "gpu_0/res3_2_branch2c_w"
external_input: "gpu_0/res3_2_branch2c_bn_s"
external_input: "gpu_0/res3_2_branch2c_bn_b"
external_input: "gpu_0/res3_3_branch2a_w"
external_input: "gpu_0/res3_3_branch2a_bn_s"
external_input: "gpu_0/res3_3_branch2a_bn_b"
external_input: "gpu_0/res3_3_branch2b_w"
external_input: "gpu_0/res3_3_branch2b_bn_s"
external_input: "gpu_0/res3_3_branch2b_bn_b"
external_input: "gpu_0/res3_3_branch2c_w"
external_input: "gpu_0/res3_3_branch2c_bn_s"
external_input: "gpu_0/res3_3_branch2c_bn_b"
external_input: "gpu_0/res4_0_branch2a_w"
external_input: "gpu_0/res4_0_branch2a_bn_s"
external_input: "gpu_0/res4_0_branch2a_bn_b"
external_input: "gpu_0/res4_0_branch2b_w"
external_input: "gpu_0/res4_0_branch2b_bn_s"
external_input: "gpu_0/res4_0_branch2b_bn_b"
external_input: "gpu_0/res4_0_branch2c_w"
external_input: "gpu_0/res4_0_branch2c_bn_s"
external_input: "gpu_0/res4_0_branch2c_bn_b"
external_input: "gpu_0/res4_0_branch1_w"
external_input: "gpu_0/res4_0_branch1_bn_s"
external_input: "gpu_0/res4_0_branch1_bn_b"
external_input: "gpu_0/res4_1_branch2a_w"
external_input: "gpu_0/res4_1_branch2a_bn_s"
external_input: "gpu_0/res4_1_branch2a_bn_b"
external_input: "gpu_0/res4_1_branch2b_w"
external_input: "gpu_0/res4_1_branch2b_bn_s"
external_input: "gpu_0/res4_1_branch2b_bn_b"
external_input: "gpu_0/res4_1_branch2c_w"
external_input: "gpu_0/res4_1_branch2c_bn_s"
external_input: "gpu_0/res4_1_branch2c_bn_b"
external_input: "gpu_0/res4_2_branch2a_w"
external_input: "gpu_0/res4_2_branch2a_bn_s"
external_input: "gpu_0/res4_2_branch2a_bn_b"
external_input: "gpu_0/res4_2_branch2b_w"
external_input: "gpu_0/res4_2_branch2b_bn_s"
external_input: "gpu_0/res4_2_branch2b_bn_b"
external_input: "gpu_0/res4_2_branch2c_w"
external_input: "gpu_0/res4_2_branch2c_bn_s"
external_input: "gpu_0/res4_2_branch2c_bn_b"
external_input: "gpu_0/res4_3_branch2a_w"
external_input: "gpu_0/res4_3_branch2a_bn_s"
external_input: "gpu_0/res4_3_branch2a_bn_b"
external_input: "gpu_0/res4_3_branch2b_w"
external_input: "gpu_0/res4_3_branch2b_bn_s"
external_input: "gpu_0/res4_3_branch2b_bn_b"
external_input: "gpu_0/res4_3_branch2c_w"
external_input: "gpu_0/res4_3_branch2c_bn_s"
external_input: "gpu_0/res4_3_branch2c_bn_b"
external_input: "gpu_0/res4_4_branch2a_w"
external_input: "gpu_0/res4_4_branch2a_bn_s"
external_input: "gpu_0/res4_4_branch2a_bn_b"
external_input: "gpu_0/res4_4_branch2b_w"
external_input: "gpu_0/res4_4_branch2b_bn_s"
external_input: "gpu_0/res4_4_branch2b_bn_b"
external_input: "gpu_0/res4_4_branch2c_w"
external_input: "gpu_0/res4_4_branch2c_bn_s"
external_input: "gpu_0/res4_4_branch2c_bn_b"
external_input: "gpu_0/res4_5_branch2a_w"
external_input: "gpu_0/res4_5_branch2a_bn_s"
external_input: "gpu_0/res4_5_branch2a_bn_b"
external_input: "gpu_0/res4_5_branch2b_w"
external_input: "gpu_0/res4_5_branch2b_bn_s"
external_input: "gpu_0/res4_5_branch2b_bn_b"
external_input: "gpu_0/res4_5_branch2c_w"
external_input: "gpu_0/res4_5_branch2c_bn_s"
external_input: "gpu_0/res4_5_branch2c_bn_b"
external_input: "gpu_0/res5_0_branch2a_w"
external_input: "gpu_0/res5_0_branch2a_bn_s"
external_input: "gpu_0/res5_0_branch2a_bn_b"
external_input: "gpu_0/res5_0_branch2b_w"
external_input: "gpu_0/res5_0_branch2b_bn_s"
external_input: "gpu_0/res5_0_branch2b_bn_b"
external_input: "gpu_0/res5_0_branch2c_w"
external_input: "gpu_0/res5_0_branch2c_bn_s"
external_input: "gpu_0/res5_0_branch2c_bn_b"
external_input: "gpu_0/res5_0_branch1_w"
external_input: "gpu_0/res5_0_branch1_bn_s"
external_input: "gpu_0/res5_0_branch1_bn_b"
external_input: "gpu_0/res5_1_branch2a_w"
external_input: "gpu_0/res5_1_branch2a_bn_s"
external_input: "gpu_0/res5_1_branch2a_bn_b"
external_input: "gpu_0/res5_1_branch2b_w"
external_input: "gpu_0/res5_1_branch2b_bn_s"
external_input: "gpu_0/res5_1_branch2b_bn_b"
external_input: "gpu_0/res5_1_branch2c_w"
external_input: "gpu_0/res5_1_branch2c_bn_s"
external_input: "gpu_0/res5_1_branch2c_bn_b"
external_input: "gpu_0/res5_2_branch2a_w"
external_input: "gpu_0/res5_2_branch2a_bn_s"
external_input: "gpu_0/res5_2_branch2a_bn_b"
external_input: "gpu_0/res5_2_branch2b_w"
external_input: "gpu_0/res5_2_branch2b_bn_s"
external_input: "gpu_0/res5_2_branch2b_bn_b"
external_input: "gpu_0/res5_2_branch2c_w"
external_input: "gpu_0/res5_2_branch2c_bn_s"
external_input: "gpu_0/res5_2_branch2c_bn_b"
external_input: "gpu_0/fpn_inner_res5_2_sum_w"
external_input: "gpu_0/fpn_inner_res5_2_sum_b"
external_input: "gpu_0/fpn_inner_res4_5_sum_lateral_w"
external_input: "gpu_0/fpn_inner_res4_5_sum_lateral_b"
external_input: "gpu_0/fpn_inner_res3_3_sum_lateral_w"
external_input: "gpu_0/fpn_inner_res3_3_sum_lateral_b"
external_input: "gpu_0/fpn_inner_res2_2_sum_lateral_w"
external_input: "gpu_0/fpn_inner_res2_2_sum_lateral_b"
external_input: "gpu_0/fpn_res5_2_sum_w"
external_input: "gpu_0/fpn_res5_2_sum_b"
external_input: "gpu_0/fpn_res4_5_sum_w"
external_input: "gpu_0/fpn_res4_5_sum_b"
external_input: "gpu_0/fpn_res3_3_sum_w"
external_input: "gpu_0/fpn_res3_3_sum_b"
external_input: "gpu_0/fpn_res2_2_sum_w"
external_input: "gpu_0/fpn_res2_2_sum_b"
external_input: "gpu_0/conv_rpn_fpn2_w"
external_input: "gpu_0/conv_rpn_fpn2_b"
external_input: "gpu_0/rpn_cls_logits_fpn2_w"
external_input: "gpu_0/rpn_cls_logits_fpn2_b"
external_input: "gpu_0/rpn_bbox_pred_fpn2_w"
external_input: "gpu_0/rpn_bbox_pred_fpn2_b"
external_input: "gpu_0/im_info"
external_input: "gpu_0/roidb"
external_input: "gpu_0/rpn_labels_int32_wide_fpn2"
external_input: "gpu_0/rpn_bbox_targets_wide_fpn2"
external_input: "gpu_0/rpn_bbox_inside_weights_wide_fpn2"
external_input: "gpu_0/rpn_bbox_outside_weights_wide_fpn2"
external_input: "gpu_0/rpn_labels_int32_wide_fpn3"
external_input: "gpu_0/rpn_bbox_targets_wide_fpn3"
external_input: "gpu_0/rpn_bbox_inside_weights_wide_fpn3"
external_input: "gpu_0/rpn_bbox_outside_weights_wide_fpn3"
external_input: "gpu_0/rpn_labels_int32_wide_fpn4"
external_input: "gpu_0/rpn_bbox_targets_wide_fpn4"
external_input: "gpu_0/rpn_bbox_inside_weights_wide_fpn4"
external_input: "gpu_0/rpn_bbox_outside_weights_wide_fpn4"
external_input: "gpu_0/rpn_labels_int32_wide_fpn5"
external_input: "gpu_0/rpn_bbox_targets_wide_fpn5"
external_input: "gpu_0/rpn_bbox_inside_weights_wide_fpn5"
external_input: "gpu_0/rpn_bbox_outside_weights_wide_fpn5"
external_input: "gpu_0/rpn_labels_int32_wide_fpn6"
external_input: "gpu_0/rpn_bbox_targets_wide_fpn6"
external_input: "gpu_0/rpn_bbox_inside_weights_wide_fpn6"
external_input: "gpu_0/rpn_bbox_outside_weights_wide_fpn6"
external_input: "gpu_0/fc6_w"
external_input: "gpu_0/fc6_b"
external_input: "gpu_0/fc7_w"
external_input: "gpu_0/fc7_b"
external_input: "gpu_0/cls_score_w"
external_input: "gpu_0/cls_score_b"
external_input: "gpu_0/bbox_pred_w"
external_input: "gpu_0/bbox_pred_b"
external_input: "gpu_0/_[mask]_fcn1_w"
external_input: "gpu_0/_[mask]_fcn1_b"
external_input: "gpu_0/_[mask]_fcn2_w"
external_input: "gpu_0/_[mask]_fcn2_b"
external_input: "gpu_0/_[mask]_fcn3_w"
external_input: "gpu_0/_[mask]_fcn3_b"
external_input: "gpu_0/_[mask]_fcn4_w"
external_input: "gpu_0/_[mask]_fcn4_b"
external_input: "gpu_0/conv5_mask_w"
external_input: "gpu_0/conv5_mask_b"
external_input: "gpu_0/mask_fcn_logits_w"
external_input: "gpu_0/mask_fcn_logits_b"
external_input: "gpu_0/one"
external_input: "gpu_0/wd"
external_input: "gpu_0/res3_0_branch2a_w_momentum"
external_input: "gpu_0/lr"
external_input: "gpu_0/res3_0_branch2b_w_momentum"
external_input: "gpu_0/res3_0_branch2c_w_momentum"
external_input: "gpu_0/res3_0_branch1_w_momentum"
external_input: "gpu_0/res3_1_branch2a_w_momentum"
external_input: "gpu_0/res3_1_branch2b_w_momentum"
external_input: "gpu_0/res3_1_branch2c_w_momentum"
external_input: "gpu_0/res3_2_branch2a_w_momentum"
external_input: "gpu_0/res3_2_branch2b_w_momentum"
external_input: "gpu_0/res3_2_branch2c_w_momentum"
external_input: "gpu_0/res3_3_branch2a_w_momentum"
external_input: "gpu_0/res3_3_branch2b_w_momentum"
external_input: "gpu_0/res3_3_branch2c_w_momentum"
external_input: "gpu_0/res4_0_branch2a_w_momentum"
external_input: "gpu_0/res4_0_branch2b_w_momentum"
external_input: "gpu_0/res4_0_branch2c_w_momentum"
external_input: "gpu_0/res4_0_branch1_w_momentum"
external_input: "gpu_0/res4_1_branch2a_w_momentum"
external_input: "gpu_0/res4_1_branch2b_w_momentum"
external_input: "gpu_0/res4_1_branch2c_w_momentum"
external_input: "gpu_0/res4_2_branch2a_w_momentum"
external_input: "gpu_0/res4_2_branch2b_w_momentum"
external_input: "gpu_0/res4_2_branch2c_w_momentum"
external_input: "gpu_0/res4_3_branch2a_w_momentum"
external_input: "gpu_0/res4_3_branch2b_w_momentum"
external_input: "gpu_0/res4_3_branch2c_w_momentum"
external_input: "gpu_0/res4_4_branch2a_w_momentum"
external_input: "gpu_0/res4_4_branch2b_w_momentum"
external_input: "gpu_0/res4_4_branch2c_w_momentum"
external_input: "gpu_0/res4_5_branch2a_w_momentum"
external_input: "gpu_0/res4_5_branch2b_w_momentum"
external_input: "gpu_0/res4_5_branch2c_w_momentum"
external_input: "gpu_0/res5_0_branch2a_w_momentum"
external_input: "gpu_0/res5_0_branch2b_w_momentum"
external_input: "gpu_0/res5_0_branch2c_w_momentum"
external_input: "gpu_0/res5_0_branch1_w_momentum"
external_input: "gpu_0/res5_1_branch2a_w_momentum"
external_input: "gpu_0/res5_1_branch2b_w_momentum"
external_input: "gpu_0/res5_1_branch2c_w_momentum"
external_input: "gpu_0/res5_2_branch2a_w_momentum"
external_input: "gpu_0/res5_2_branch2b_w_momentum"
external_input: "gpu_0/res5_2_branch2c_w_momentum"
external_input: "gpu_0/fpn_inner_res5_2_sum_w_momentum"
external_input: "gpu_0/fpn_inner_res5_2_sum_b_momentum"
external_input: "gpu_0/fpn_inner_res4_5_sum_lateral_w_momentum"
external_input: "gpu_0/fpn_inner_res4_5_sum_lateral_b_momentum"
external_input: "gpu_0/fpn_inner_res3_3_sum_lateral_w_momentum"
external_input: "gpu_0/fpn_inner_res3_3_sum_lateral_b_momentum"
external_input: "gpu_0/fpn_inner_res2_2_sum_lateral_w_momentum"
external_input: "gpu_0/fpn_inner_res2_2_sum_lateral_b_momentum"
external_input: "gpu_0/fpn_res5_2_sum_w_momentum"
external_input: "gpu_0/fpn_res5_2_sum_b_momentum"
external_input: "gpu_0/fpn_res4_5_sum_w_momentum"
external_input: "gpu_0/fpn_res4_5_sum_b_momentum"
external_input: "gpu_0/fpn_res3_3_sum_w_momentum"
external_input: "gpu_0/fpn_res3_3_sum_b_momentum"
external_input: "gpu_0/fpn_res2_2_sum_w_momentum"
external_input: "gpu_0/fpn_res2_2_sum_b_momentum"
external_input: "gpu_0/conv_rpn_fpn2_w_momentum"
external_input: "gpu_0/conv_rpn_fpn2_b_momentum"
external_input: "gpu_0/rpn_cls_logits_fpn2_w_momentum"
external_input: "gpu_0/rpn_cls_logits_fpn2_b_momentum"
external_input: "gpu_0/rpn_bbox_pred_fpn2_w_momentum"
external_input: "gpu_0/rpn_bbox_pred_fpn2_b_momentum"
external_input: "gpu_0/fc6_w_momentum"
external_input: "gpu_0/fc6_b_momentum"
external_input: "gpu_0/fc7_w_momentum"
external_input: "gpu_0/fc7_b_momentum"
external_input: "gpu_0/cls_score_w_momentum"
external_input: "gpu_0/cls_score_b_momentum"
external_input: "gpu_0/bbox_pred_w_momentum"
external_input: "gpu_0/bbox_pred_b_momentum"
external_input: "gpu_0/_[mask]_fcn1_w_momentum"
external_input: "gpu_0/_[mask]_fcn1_b_momentum"
external_input: "gpu_0/_[mask]_fcn2_w_momentum"
external_input: "gpu_0/_[mask]_fcn2_b_momentum"
external_input: "gpu_0/_[mask]_fcn3_w_momentum"
external_input: "gpu_0/_[mask]_fcn3_b_momentum"
external_input: "gpu_0/_[mask]_fcn4_w_momentum"
external_input: "gpu_0/_[mask]_fcn4_b_momentum"
external_input: "gpu_0/conv5_mask_w_momentum"
external_input: "gpu_0/conv5_mask_b_momentum"
external_input: "gpu_0/mask_fcn_logits_w_momentum"
external_input: "gpu_0/mask_fcn_logits_b_momentum"
external_input: "gpu_0/roi_blobs_queue_365552d1-b4da-4b3e-938a-61b098b02f38"
